{"version":3,"sources":["../src/components/pages/error/index.tsx","../src/hooks/auth/usePermissions/index.ts","../src/definitions/table/index.ts","../src/definitions/helpers/userFriendlySeconds/index.ts","../src/definitions/helpers/importCSVMapper/index.ts","../src/definitions/helpers/userFriendlyResourceName/index.ts","../src/definitions/helpers/handleUseParams/index.tsx","../src/definitions/helpers/pickNotDeprecated/index.ts","../src/definitions/helpers/keys/index.ts","../src/definitions/helpers/queryKeys/index.ts","../src/definitions/helpers/hasPermission/index.ts","../src/definitions/helpers/router/is-parameter.ts","../src/definitions/helpers/router/split-to-segments.ts","../src/definitions/helpers/router/is-segment-counts-same.ts","../src/definitions/helpers/router/remove-leading-trailing-slashes.ts","../src/definitions/helpers/router/check-by-segments.ts","../src/definitions/helpers/router/get-default-action-path.ts","../src/definitions/helpers/router/get-parent-resource.ts","../src/definitions/helpers/router/get-parent-prefix-for-resource.ts","../src/definitions/helpers/router/get-action-routes-from-resource.ts","../src/definitions/helpers/router/pick-matched-route.ts","../src/definitions/helpers/router/match-resource-from-route.ts","../src/definitions/helpers/routeGenerator/index.ts","../src/definitions/helpers/treeView/createTreeView/index.ts","../src/definitions/helpers/humanizeString/index.ts","../src/contexts/refine/index.tsx","../src/components/layoutWrapper/defaultLayout/index.tsx","../src/definitions/helpers/handleRefineOptions/index.ts","../src/definitions/helpers/redirectPage/index.ts","../src/definitions/helpers/sequentialPromises/index.ts","../src/definitions/helpers/pick-resource/index.ts","../src/definitions/helpers/pickDataProvider/index.ts","../src/definitions/helpers/handleMultiple/index.ts","../src/definitions/helpers/useInfinitePagination/index.ts","../src/definitions/helpers/legacy-resource-transform/index.ts","../src/definitions/helpers/router/pick-route-params.ts","../src/definitions/helpers/router/prepare-route-params.ts","../src/definitions/helpers/router/compose-route.ts","../src/contexts/auth/index.tsx","../src/definitions/helpers/useActiveAuthProvider/index.ts","../src/definitions/helpers/handlePaginationParams/index.ts","../src/definitions/helpers/useMediaQuery/index.ts","../src/definitions/helpers/safe-translate/index.ts","../src/definitions/helpers/generateDocumentTitle/index.ts","../src/hooks/refine/useMutationMode.ts","../src/hooks/refine/useWarnAboutChange/index.ts","../src/contexts/unsavedWarn/index.tsx","../src/hooks/refine/useSyncWithLocation.ts","../src/hooks/refine/useTitle.tsx","../src/hooks/refine/useRefineContext.ts","../src/definitions/helpers/useUserFriendlyName/index.ts","../src/definitions/helpers/flatten-object-keys/index.ts","../src/definitions/helpers/property-path-to-array/index.ts","../src/definitions/helpers/downloadInBrowser/index.ts","../src/definitions/upload/file2Base64/index.ts","../src/hooks/useKeys/index.tsx","../src/hooks/auth/useGetIdentity/index.ts","../src/hooks/auth/useLogout/index.ts","../src/hooks/auth/useInvalidateAuthStore/index.ts","../src/hooks/auth/useLogin/index.ts","../src/hooks/auth/useRegister/index.ts","../src/hooks/auth/useForgotPassword/index.ts","../src/hooks/auth/useUpdatePassword/index.ts","../src/hooks/auth/useIsAuthenticated/index.ts","../src/hooks/auth/useOnError/index.ts","../src/hooks/auth/useIsExistAuthentication/index.ts","../src/hooks/data/useList.ts","../src/hooks/useLoadingOvertime/index.ts","../src/hooks/data/useOne.ts","../src/hooks/data/useMany.ts","../src/hooks/data/useUpdate.ts","../src/contexts/undoableQueue/undoableQueueContext.tsx","../src/hooks/data/useCreate.ts","../src/hooks/data/useDelete.ts","../src/hooks/data/useCreateMany.ts","../src/hooks/data/useUpdateMany.ts","../src/hooks/data/useDeleteMany.ts","../src/hooks/data/useApiUrl.ts","../src/hooks/data/useCustom.ts","../src/hooks/data/useCustomMutation.ts","../src/hooks/data/useDataProvider.tsx","../src/contexts/data/index.tsx","../src/hooks/data/useInfiniteList.ts","../src/contexts/live/index.tsx","../src/hooks/invalidate/index.tsx","../src/hooks/resource/useResource/index.ts","../src/contexts/resource/index.tsx","../src/hooks/deepMemo/index.tsx","../src/hooks/memoized/index.tsx","../src/contexts/router-picker/index.tsx","../src/hooks/router/use-parsed/index.tsx","../src/contexts/router/index.tsx","../src/hooks/router/use-parse/index.tsx","../src/hooks/resource/useResourceWithRoute/index.ts","../src/hooks/live/useResourceSubscription/index.ts","../src/hooks/live/useLiveMode/index.ts","../src/hooks/live/useSubscription/index.ts","../src/hooks/live/usePublish/index.ts","../src/hooks/notification/useCancelNotification/index.tsx","../src/hooks/notification/useNotification/index.ts","../src/contexts/notification/index.tsx","../src/hooks/notification/useHandleNotification/index.ts","../src/hooks/translate/useSetLocale.ts","../src/contexts/translation/index.tsx","../src/hooks/translate/useTranslate.ts","../src/hooks/translate/useGetLocale.ts","../src/hooks/export/index.ts","../src/hooks/form/useForm.ts","../src/hooks/redirection/index.ts","../src/hooks/router/use-go/index.tsx","../src/hooks/router/use-get-to-path/index.ts","../src/hooks/router/use-back/index.tsx","../src/hooks/navigation/index.ts","../src/hooks/show/useShow.ts","../src/hooks/import/index.tsx","../src/hooks/modal/useModal/index.tsx","../src/hooks/router/use-to-path/index.ts","../src/hooks/router/use-link/index.tsx","../src/hooks/legacy-router/useRouterContext.ts","../src/contexts/legacy-router/index.tsx","../src/hooks/accessControl/useCan/index.ts","../src/contexts/accessControl/index.tsx","../src/definitions/helpers/sanitize-resource/index.ts","../src/hooks/accessControl/useCanWithoutCache.ts","../src/hooks/useSelect/index.ts","../src/hooks/useTable/index.ts","../src/hooks/auditLog/useLog/index.ts","../src/contexts/auditLog/index.tsx","../src/hooks/auditLog/useLogList/index.ts","../src/hooks/breadcrumb/index.ts","../src/hooks/menu/useMenu.tsx","../src/definitions/helpers/menu/create-resource-key.ts","../src/definitions/helpers/menu/create-tree.ts","../src/hooks/useMeta/index.ts","../src/components/pages/login/index.tsx","../src/components/pages/auth/index.tsx","../src/components/pages/auth/components/login/index.tsx","../src/components/pages/auth/components/register/index.tsx","../src/components/pages/auth/components/forgotPassword/index.tsx","../src/components/pages/auth/components/updatePassword/index.tsx","../src/components/pages/ready/index.tsx","../src/components/pages/welcome/index.tsx","../src/components/pages/config-success/index.tsx","../src/components/pages/config-error/index.tsx","../src/components/containers/refine/index.tsx","../src/components/telemetry/index.tsx","../src/hooks/useTelemetryData/index.ts","../src/definitions/helpers/check-router-prop-misuse/index.ts","../src/hooks/router/use-router-misuse-warning/index.ts","../src/components/undoableQueue/index.tsx","../src/components/layoutWrapper/index.tsx","../src/components/authenticated/index.tsx","../src/components/routeChangeHandler/index.tsx","../src/components/canAccess/index.tsx","../src/components/gh-banner/index.tsx","../src/components/gh-banner/styles.ts","../src/components/autoSaveIndicator/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport {\n  useNavigation,\n  useTranslate,\n  useResource,\n  useGo,\n  useRouterType,\n} from \"@hooks\";\n\n/**\n * When the app is navigated to a non-existent route, refine shows a default error page.\n * A custom error component can be used for this error page.\n *\n * @see {@link https://refine.dev/docs/packages/documentation/routers/} for more details.\n */\nexport const ErrorComponent: React.FC = () => {\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const translate = useTranslate();\n  const { push } = useNavigation();\n  const go = useGo();\n  const routerType = useRouterType();\n\n  const { resource, action } = useResource();\n\n  useEffect(() => {\n    if (resource && action) {\n      setErrorMessage(\n        translate(\n          \"pages.error.info\",\n          {\n            action: action,\n            resource: resource.name,\n          },\n          `You may have forgotten to add the \"${action}\" component to \"${resource.name}\" resource.`,\n        ),\n      );\n    }\n  }, [resource, action]);\n\n  return (\n    <>\n      <h1>\n        {translate(\n          \"pages.error.404\",\n          undefined,\n          \"Sorry, the page you visited does not exist.\",\n        )}\n      </h1>\n      {errorMessage && <p>{errorMessage}</p>}\n      <button\n        onClick={() => {\n          if (routerType === \"legacy\") {\n            push(\"/\");\n          } else {\n            go({ to: \"/\" });\n          }\n        }}\n      >\n        {translate(\"pages.error.backHome\", undefined, \"Back Home\")}\n      </button>\n    </>\n  );\n};\n","import {\n  useQuery,\n  UseQueryResult,\n  UseQueryOptions,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useKeys } from \"@hooks/useKeys\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { PermissionResponse } from \"../../../interfaces\";\n\nexport type UsePermissionsLegacyProps<\n  TData = any,\n  TParams extends Record<string, any> = Record<string, any>,\n> = {\n  v3LegacyAuthProviderCompatible: true;\n  options?: UseQueryOptions<TData>;\n  params?: TParams;\n};\n\nexport type UsePermissionsProps<\n  TData = PermissionResponse,\n  TParams extends Record<string, any> = Record<string, any>,\n> = {\n  v3LegacyAuthProviderCompatible?: false;\n  options?: UseQueryOptions<TData>;\n  params?: TParams;\n};\n\nexport type UsePermissionsCombinedProps<\n  TData = any,\n  TParams extends Record<string, any> = Record<string, any>,\n> = {\n  v3LegacyAuthProviderCompatible: boolean;\n  options?: UseQueryOptions<TData> | UseQueryOptions<PermissionResponse>;\n  params?: TParams;\n};\n\nexport type UsePermissionsLegacyReturnType<TData = any> = UseQueryResult<\n  TData,\n  unknown\n>;\n\nexport type UsePermissionsReturnType<TData = PermissionResponse> =\n  UseQueryResult<TData, unknown>;\n\nexport type UsePermissionsCombinedReturnType<TData = any> =\n  | UseQueryResult<TData, unknown>\n  | UseQueryResult<PermissionResponse, unknown>;\n\nexport function usePermissions<\n  TData = any,\n  TParams extends Record<string, any> = Record<string, any>,\n>(\n  props: UsePermissionsLegacyProps<TData, TParams>,\n): UsePermissionsLegacyReturnType<TData>;\n\nexport function usePermissions<\n  TData = PermissionResponse,\n  TParams extends Record<string, any> = Record<string, any>,\n>(props?: UsePermissionsProps<TData, TParams>): UsePermissionsReturnType<TData>;\n\nexport function usePermissions<\n  TData = any,\n  TParams extends Record<string, any> = Record<string, any>,\n>(\n  props?: UsePermissionsCombinedProps<TData, TParams>,\n): UsePermissionsCombinedReturnType<TData>;\n\n/**\n * `usePermissions` calls the `getPermissions` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/usePermissions} for more details.\n *\n * @typeParam TData - Result data of the query\n *\n * @typeParam TParams - Params will be passed to the `getPermissions` method of {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`}.\n *\n */\nexport function usePermissions<\n  TData = any,\n  TParams extends Record<string, any> = Record<string, any>,\n>({\n  v3LegacyAuthProviderCompatible = false,\n  options,\n  params,\n}:\n  | UsePermissionsProps<TData, TParams>\n  | UsePermissionsLegacyProps<TData, TParams> = {}):\n  | UsePermissionsReturnType\n  | UsePermissionsLegacyReturnType<TData> {\n  const { getPermissions: legacyGetPermission } = useLegacyAuthContext();\n  const { getPermissions } = useAuthBindingsContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const queryResponse = useQuery<TData>({\n    queryKey: keys().auth().action(\"permissions\").get(preferLegacyKeys),\n    // Enabled check for `getPermissions` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n    queryFn: (getPermissions\n      ? () => getPermissions(params)\n      : () => Promise.resolve(undefined)) as (\n      params?: unknown,\n    ) => Promise<TData>,\n    enabled: !v3LegacyAuthProviderCompatible && !!getPermissions,\n    ...(v3LegacyAuthProviderCompatible ? {} : options),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible ? {} : options?.meta),\n      ...getXRay(\"usePermissions\", preferLegacyKeys),\n    },\n  });\n\n  const legacyQueryResponse = useQuery<TData>({\n    queryKey: [\n      ...keys().auth().action(\"permissions\").get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    // Enabled check for `getPermissions` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n    queryFn: (legacyGetPermission\n      ? () => legacyGetPermission(params)\n      : () => Promise.resolve(undefined)) as (\n      params?: unknown,\n    ) => Promise<TData>,\n    enabled: v3LegacyAuthProviderCompatible && !!legacyGetPermission,\n    ...(v3LegacyAuthProviderCompatible ? options : {}),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible ? options?.meta : {}),\n      ...getXRay(\"usePermissions\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible ? legacyQueryResponse : queryResponse;\n}\n","import qs, { IStringifyOptions } from \"qs\";\nimport unionWith from \"lodash-es/unionWith.js\";\nimport differenceWith from \"lodash-es/differenceWith.js\";\nimport warnOnce from \"warn-once\";\n\nimport {\n  CrudFilters,\n  CrudSorting,\n  CrudFilter,\n  CrudSort,\n  CrudOperators,\n  SortOrder,\n} from \"../../interfaces\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\n\nexport const parseTableParams = (url: string) => {\n  const { current, pageSize, sorter, sorters, filters } = qs.parse(\n    url.substring(1), // remove first ? character\n  );\n\n  return {\n    parsedCurrent: current && Number(current),\n    parsedPageSize: pageSize && Number(pageSize),\n    parsedSorter: (pickNotDeprecated(sorters, sorter) as CrudSorting) ?? [],\n    parsedFilters: (filters as CrudFilters) ?? [],\n  };\n};\n\nexport const parseTableParamsFromQuery = (params: any) => {\n  const url = qs.stringify(params);\n  return parseTableParams(`/${url}`);\n};\n\n/**\n * @internal This function is used to stringify table params from the useTable hook.\n */\nexport const stringifyTableParams = (params: {\n  pagination?: { current?: number; pageSize?: number };\n  sorters: CrudSorting;\n  filters: CrudFilters;\n  [key: string]: any;\n}): string => {\n  const options: IStringifyOptions = {\n    skipNulls: true,\n    arrayFormat: \"indices\",\n    encode: false,\n  };\n  const { pagination, sorter, sorters, filters, ...rest } = params;\n\n  const queryString = qs.stringify(\n    {\n      ...rest,\n      ...(pagination ? pagination : {}),\n      sorters: pickNotDeprecated(sorters, sorter),\n      filters,\n    },\n    options,\n  );\n\n  return queryString;\n};\n\nexport const compareFilters = (\n  left: CrudFilter,\n  right: CrudFilter,\n): boolean => {\n  if (\n    left.operator !== \"and\" &&\n    left.operator !== \"or\" &&\n    right.operator !== \"and\" &&\n    right.operator !== \"or\"\n  ) {\n    return (\n      (\"field\" in left ? left.field : undefined) ===\n        (\"field\" in right ? right.field : undefined) &&\n      left.operator === right.operator\n    );\n  }\n\n  return (\n    (\"key\" in left ? left.key : undefined) ===\n      (\"key\" in right ? right.key : undefined) &&\n    left.operator === right.operator\n  );\n};\n\nexport const compareSorters = (left: CrudSort, right: CrudSort): boolean =>\n  left.field === right.field;\n// Keep only one CrudFilter per type according to compareFilters\n// Items in the array that is passed first to unionWith have higher priority\n// CrudFilter items with undefined values are necessary to signify no filter\n// After union, don't keep CrudFilter items with undefined value in the result\n// Items in the arrays with higher priority are put at the end.\nexport const unionFilters = (\n  permanentFilter: CrudFilters,\n  newFilters: CrudFilters,\n  prevFilters: CrudFilters = [],\n): CrudFilters => {\n  const isKeyRequired = newFilters.filter(\n    (f) => (f.operator === \"or\" || f.operator === \"and\") && !f.key,\n  );\n\n  if (isKeyRequired.length > 1) {\n    warnOnce(\n      true,\n      \"[conditionalFilters]: You have created multiple Conditional Filters at the top level, this requires the key parameter. \\nFor more information, see https://refine.dev/docs/advanced-tutorials/data-provider/handling-filters/#top-level-multiple-conditional-filters-usage\",\n    );\n  }\n\n  return unionWith(\n    permanentFilter,\n    newFilters,\n    prevFilters,\n    compareFilters,\n  ).filter(\n    (crudFilter) =>\n      crudFilter.value !== undefined &&\n      crudFilter.value !== null &&\n      (crudFilter.operator !== \"or\" ||\n        (crudFilter.operator === \"or\" && crudFilter.value.length !== 0)) &&\n      (crudFilter.operator !== \"and\" ||\n        (crudFilter.operator === \"and\" && crudFilter.value.length !== 0)),\n  );\n};\n\nexport const unionSorters = (\n  permanentSorter: CrudSorting,\n  newSorters: CrudSorting,\n): CrudSorting =>\n  unionWith(permanentSorter, newSorters, compareSorters).filter(\n    (crudSorter) => crudSorter.order !== undefined && crudSorter.order !== null,\n  );\n// Prioritize filters in the permanentFilter and put it at the end of result array\nexport const setInitialFilters = (\n  permanentFilter: CrudFilters,\n  defaultFilter: CrudFilters,\n): CrudFilters => [\n  ...differenceWith(defaultFilter, permanentFilter, compareFilters),\n  ...permanentFilter,\n];\n\nexport const setInitialSorters = (\n  permanentSorter: CrudSorting,\n  defaultSorter: CrudSorting,\n): CrudSorting => [\n  ...differenceWith(defaultSorter, permanentSorter, compareSorters),\n  ...permanentSorter,\n];\n\nexport const getDefaultSortOrder = (\n  columnName: string,\n  sorter?: CrudSorting,\n): SortOrder | undefined => {\n  if (!sorter) {\n    return undefined;\n  }\n\n  const sortItem = sorter.find((item) => item.field === columnName);\n\n  if (sortItem) {\n    return sortItem.order as SortOrder;\n  }\n\n  return undefined;\n};\n\nexport const getDefaultFilter = (\n  columnName: string,\n  filters?: CrudFilters,\n  operatorType: CrudOperators = \"eq\",\n): CrudFilter[\"value\"] | undefined => {\n  const filter = filters?.find((filter) => {\n    if (\n      filter.operator !== \"or\" &&\n      filter.operator !== \"and\" &&\n      \"field\" in filter\n    ) {\n      const { operator, field } = filter;\n      return field === columnName && operator === operatorType;\n    }\n    return undefined;\n  });\n\n  if (filter) {\n    return filter.value || [];\n  }\n\n  return undefined;\n};\n","export const userFriendlySecond = (miliseconds: number): number => {\n  return miliseconds / 1000; //convert to seconds\n};\n","import zip from \"lodash-es/zip.js\";\nimport fromPairs from \"lodash-es/fromPairs.js\";\nimport { MapDataFn } from \"../../../interfaces\";\n\nexport const importCSVMapper = <TItem = any, TVariables = any>(\n  data: any[][],\n  mapData: MapDataFn<TItem, TVariables> = (item) => item as any,\n): TVariables[] => {\n  const [headers, ...body] = data;\n  return body\n    .map((entry) => fromPairs(zip(headers, entry)))\n    .map((item: any, index, array: any) =>\n      mapData.call(undefined, item, index, array),\n    );\n};\n","import pluralize from \"pluralize\";\nimport { humanizeString } from \"@definitions\";\n\n/**\n * A method that the internal uses\n * @internal\n * @deprecated use `useUserFriendlyName` instead.\n */\nexport const userFriendlyResourceName = (\n  resource = \"\",\n  type: \"singular\" | \"plural\",\n): string => {\n  const humanizeResource = humanizeString(resource);\n  if (type === \"singular\") {\n    return pluralize.singular(humanizeResource);\n  }\n  return pluralize.plural(humanizeResource);\n};\n","export const handleUseParams = (params: any = {}): any => {\n  if (params?.id) {\n    return {\n      ...params,\n      id: decodeURIComponent(params.id),\n    };\n  }\n  return params;\n};\n","/*\n * Returns first value that is not undefined.\n * @internal This is an internal helper function. Please do not use externally.\n */\nexport const pickNotDeprecated = <T extends unknown[]>(\n  ...args: T\n): T[never] => {\n  return args.find((arg) => typeof arg !== \"undefined\");\n};\n","import { BaseKey } from \"src/interfaces\";\n\ntype ParametrizedDataActions = \"list\" | \"infinite\";\ntype IdRequiredDataActions = \"one\";\ntype IdsRequiredDataActions = \"many\";\ntype DataMutationActions =\n  | \"custom\"\n  | \"customMutation\"\n  | \"create\"\n  | \"createMany\"\n  | \"update\"\n  | \"updateMany\"\n  | \"delete\"\n  | \"deleteMany\";\n\ntype AuthActionType =\n  | \"login\"\n  | \"logout\"\n  | \"identity\"\n  | \"register\"\n  | \"forgotPassword\"\n  | \"check\"\n  | \"onError\"\n  | \"permissions\"\n  | \"updatePassword\";\n\ntype AuditActionType = \"list\" | \"log\" | \"rename\";\n\ntype IdType = BaseKey;\ntype IdsType = IdType[];\n\ntype ParamsType = any;\n\ntype KeySegment = string | IdType | IdsType | ParamsType;\n\nexport function arrayFindIndex<T>(array: T[], slice: T[]): number {\n  return array.findIndex(\n    (item, index) =>\n      index <= array.length - slice.length &&\n      slice.every(\n        (sliceItem, sliceIndex) => array[index + sliceIndex] === sliceItem,\n      ),\n  );\n}\n\nexport function arrayReplace<T>(\n  array: T[],\n  partToBeReplaced: T[],\n  newPart: T[],\n): T[] {\n  const newArray: T[] = [...array];\n  const startIndex = arrayFindIndex(array, partToBeReplaced);\n\n  if (startIndex !== -1) {\n    newArray.splice(startIndex, partToBeReplaced.length, ...newPart);\n  }\n\n  return newArray;\n}\n\nexport function stripUndefined(segments: KeySegment[]) {\n  return segments.filter((segment) => segment !== undefined);\n}\n\nfunction convertToLegacy(segments: KeySegment[]) {\n  // for `list`, `many` and `one`\n  if (segments[0] === \"data\") {\n    // [data, dpName, resource, action, ...];\n    const newSegments = segments.slice(1);\n\n    if (newSegments[2] === \"many\") {\n      newSegments[2] = \"getMany\";\n    } else if (newSegments[2] === \"infinite\") {\n      newSegments[2] = \"list\";\n    } else if (newSegments[2] === \"one\") {\n      newSegments[2] = \"detail\";\n    } else if (newSegments[1] === \"custom\") {\n      const newParams = {\n        ...newSegments[2],\n      };\n      delete newParams.method;\n      delete newParams.url;\n\n      return [\n        newSegments[0],\n        newSegments[1],\n        newSegments[2].method,\n        newSegments[2].url,\n        newParams,\n      ];\n    }\n\n    return newSegments;\n  }\n  // for `audit` -> `logList`\n  if (segments[0] === \"audit\") {\n    // [audit, resource, action, params] (for log and list)\n    // or\n    // [audit, action, params] (for rename)\n    if (segments[2] === \"list\") {\n      return [\"logList\", segments[1], segments[3]];\n    }\n  }\n  // for `access` -> `useCan`\n  if (segments[0] === \"access\") {\n    // [access, resource, action, params]\n    if (segments.length === 4) {\n      return [\n        \"useCan\",\n        {\n          resource: segments[1],\n          action: segments[2],\n          ...segments[3], // params: { params, enabled }\n        },\n      ];\n    }\n  }\n  // for `auth`\n  if (segments[0] === \"auth\") {\n    if (arrayFindIndex(segments, [\"auth\", \"login\"]) !== -1) {\n      return [\"useLogin\"];\n    }\n    if (arrayFindIndex(segments, [\"auth\", \"logout\"]) !== -1) {\n      return [\"useLogout\"];\n    }\n    if (arrayFindIndex(segments, [\"auth\", \"identity\"]) !== -1) {\n      return [\"getUserIdentity\"];\n    }\n    if (arrayFindIndex(segments, [\"auth\", \"register\"]) !== -1) {\n      return [\"useRegister\"];\n    }\n    if (arrayFindIndex(segments, [\"auth\", \"forgotPassword\"]) !== -1) {\n      return [\"useForgotPassword\"];\n    }\n    if (arrayFindIndex(segments, [\"auth\", \"check\"]) !== -1) {\n      return [\"useAuthenticated\", segments[2]]; // [auth, check, params]\n    }\n    if (arrayFindIndex(segments, [\"auth\", \"onError\"]) !== -1) {\n      return [\"useCheckError\"];\n    }\n    if (arrayFindIndex(segments, [\"auth\", \"permissions\"]) !== -1) {\n      return [\"usePermissions\"];\n    }\n    if (arrayFindIndex(segments, [\"auth\", \"updatePassword\"]) !== -1) {\n      return [\"useUpdatePassword\"];\n    }\n  }\n  return segments;\n}\n\nclass BaseKeyBuilder {\n  segments: KeySegment[] = [];\n\n  constructor(segments: KeySegment[] = []) {\n    this.segments = segments;\n  }\n\n  key() {\n    return this.segments;\n  }\n\n  legacy() {\n    return convertToLegacy(this.segments);\n  }\n\n  get(legacy?: boolean) {\n    return legacy ? this.legacy() : this.segments;\n  }\n}\n\nclass ParamsKeyBuilder extends BaseKeyBuilder {\n  params(paramsValue?: ParamsType) {\n    return new BaseKeyBuilder([...this.segments, paramsValue]);\n  }\n}\n\nclass DataIdRequiringKeyBuilder extends BaseKeyBuilder {\n  id(idValue?: IdType) {\n    return new ParamsKeyBuilder([\n      ...this.segments,\n      idValue ? String(idValue) : undefined,\n    ]);\n  }\n}\n\nclass DataIdsRequiringKeyBuilder extends BaseKeyBuilder {\n  ids(...idsValue: IdsType) {\n    return new ParamsKeyBuilder([\n      ...this.segments,\n      ...(idsValue.length ? [idsValue.map((el) => String(el))] : []),\n    ]);\n  }\n}\n\nclass DataResourceKeyBuilder extends BaseKeyBuilder {\n  action(actionType: ParametrizedDataActions): ParamsKeyBuilder;\n  action(actionType: IdRequiredDataActions): DataIdRequiringKeyBuilder;\n  action(actionType: IdsRequiredDataActions): DataIdsRequiringKeyBuilder;\n  action(\n    actionType:\n      | ParametrizedDataActions\n      | IdRequiredDataActions\n      | IdsRequiredDataActions,\n  ): ParamsKeyBuilder | DataIdRequiringKeyBuilder | DataIdsRequiringKeyBuilder {\n    if (actionType === \"one\") {\n      return new DataIdRequiringKeyBuilder([...this.segments, actionType]);\n    }\n    if (actionType === \"many\") {\n      return new DataIdsRequiringKeyBuilder([...this.segments, actionType]);\n    }\n    if ([\"list\", \"infinite\"].includes(actionType)) {\n      return new ParamsKeyBuilder([...this.segments, actionType]);\n    }\n    throw new Error(\"Invalid action type\");\n  }\n}\n\nclass DataKeyBuilder extends BaseKeyBuilder {\n  resource(resourceName?: string) {\n    return new DataResourceKeyBuilder([...this.segments, resourceName]);\n  }\n\n  mutation(mutationName: DataMutationActions) {\n    return new ParamsKeyBuilder([\n      ...(mutationName === \"custom\" ? this.segments : [this.segments[0]]),\n      mutationName,\n    ]);\n  }\n}\n\nclass AuthKeyBuilder extends BaseKeyBuilder {\n  action(actionType: AuthActionType) {\n    return new ParamsKeyBuilder([...this.segments, actionType]);\n  }\n}\n\nclass AccessResourceKeyBuilder extends BaseKeyBuilder {\n  action(resourceName: string) {\n    return new ParamsKeyBuilder([...this.segments, resourceName]);\n  }\n}\n\nclass AccessKeyBuilder extends BaseKeyBuilder {\n  resource(resourceName?: string) {\n    return new AccessResourceKeyBuilder([...this.segments, resourceName]);\n  }\n}\n\nclass AuditActionKeyBuilder extends BaseKeyBuilder {\n  action(actionType: Extract<AuditActionType, \"list\">) {\n    return new ParamsKeyBuilder([...this.segments, actionType]);\n  }\n}\n\nclass AuditKeyBuilder extends BaseKeyBuilder {\n  resource(resourceName?: string) {\n    return new AuditActionKeyBuilder([...this.segments, resourceName]);\n  }\n\n  action(actionType: Extract<AuditActionType, \"rename\" | \"log\">) {\n    return new ParamsKeyBuilder([...this.segments, actionType]);\n  }\n}\n\nexport class KeyBuilder extends BaseKeyBuilder {\n  data(name?: string) {\n    return new DataKeyBuilder([\"data\", name || \"default\"]);\n  }\n\n  auth() {\n    return new AuthKeyBuilder([\"auth\"]);\n  }\n\n  access() {\n    return new AccessKeyBuilder([\"access\"]);\n  }\n\n  audit() {\n    return new AuditKeyBuilder([\"audit\"]);\n  }\n}\n\nexport const keys = () => new KeyBuilder([]);\n","import { IQueryKeys } from \"src/interfaces\";\nimport { QueryKey } from \"@tanstack/react-query\";\n\nimport { MetaQuery } from \"src/interfaces\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\nimport { keys as newKeys } from \"../keys\";\n\n/**\n * @deprecated `queryKeys` is deprecated. Please use `keys` instead.\n */\nexport const queryKeys = (\n  resource?: string,\n  dataProviderName?: string,\n  meta?: MetaQuery,\n  /**\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery | undefined,\n): IQueryKeys => {\n  const providerName = dataProviderName || \"default\";\n  const keys: IQueryKeys = {\n    all: [providerName],\n    resourceAll: [providerName, resource || \"\"],\n    list: (config) => [\n      ...keys.resourceAll,\n      \"list\",\n      {\n        ...config,\n        ...(pickNotDeprecated(meta, metaData) || {}),\n      } as QueryKey,\n    ],\n    many: (ids) =>\n      [\n        ...keys.resourceAll,\n        \"getMany\",\n        ids?.map(String) as QueryKey,\n        { ...(pickNotDeprecated(meta, metaData) || {}) } as QueryKey,\n      ].filter((item) => item !== undefined),\n    detail: (id) => [\n      ...keys.resourceAll,\n      \"detail\",\n      id?.toString(),\n      { ...(pickNotDeprecated(meta, metaData) || {}) } as QueryKey,\n    ],\n    logList: (meta) =>\n      [\"logList\", resource, meta as any, metaData as QueryKey].filter(\n        (item) => item !== undefined,\n      ),\n  };\n  return keys;\n};\n\nexport const queryKeysReplacement = (preferLegacyKeys?: boolean) => {\n  return (\n    resource?: string,\n    dataProviderName?: string,\n    meta?: MetaQuery,\n    /**\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery | undefined,\n  ): IQueryKeys => {\n    const providerName = dataProviderName || \"default\";\n\n    const keys: IQueryKeys = {\n      all: newKeys().data(providerName).get(preferLegacyKeys),\n      resourceAll: newKeys()\n        .data(dataProviderName)\n        .resource(resource ?? \"\")\n        .get(preferLegacyKeys),\n      list: (config) =>\n        newKeys()\n          .data(dataProviderName)\n          .resource(resource ?? \"\")\n          .action(\"list\")\n          .params({\n            ...config,\n            ...(pickNotDeprecated(meta, metaData) || {}),\n          })\n          .get(preferLegacyKeys),\n      many: (ids) =>\n        newKeys()\n          .data(dataProviderName)\n          .resource(resource ?? \"\")\n          .action(\"many\")\n          .ids(...(ids ?? []))\n          .params({\n            ...(pickNotDeprecated(meta, metaData) || {}),\n          })\n          .get(preferLegacyKeys),\n      detail: (id) =>\n        newKeys()\n          .data(dataProviderName)\n          .resource(resource ?? \"\")\n          .action(\"one\")\n          .id(id ?? \"\")\n          .params({\n            ...(pickNotDeprecated(meta, metaData) || {}),\n          })\n          .get(preferLegacyKeys),\n      logList: (meta) =>\n        [\n          ...newKeys()\n            .audit()\n            .resource(resource)\n            .action(\"list\")\n            .params(meta)\n            .get(preferLegacyKeys),\n          metaData as QueryKey,\n        ].filter((item) => item !== undefined),\n    };\n\n    return keys;\n  };\n};\n","export const hasPermission = (\n  permissions: string[] | undefined,\n  action: string | undefined,\n): boolean => {\n  if (!permissions || !action) {\n    return false;\n  }\n  return !!permissions.find((i) => i === action);\n};\n","/**\n * Check if a segment is a parameter. (e.g. :id)\n */\nexport const isParameter = (segment: string) => {\n  return segment.startsWith(\":\");\n};\n","/**\n * Split a path to segments.\n */\nexport const splitToSegments = (path: string) => {\n  const segments = path.split(\"/\").filter((segment) => segment !== \"\");\n  return segments;\n};\n","import { splitToSegments } from \"./split-to-segments\";\n\n/**\n * Checks if the both routes have the same number of segments.\n */\nexport const isSegmentCountsSame = (route: string, resourceRoute: string) => {\n  const routeSegments = splitToSegments(route);\n  const resourceRouteSegments = splitToSegments(resourceRoute);\n\n  return routeSegments.length === resourceRouteSegments.length;\n};\n","/**\n * Remove leading and trailing slashes from a route.\n */\nexport const removeLeadingTrailingSlashes = (route: string) => {\n  return route.replace(/^\\/|\\/$/g, \"\");\n};\n","import { isParameter } from \"./is-parameter\";\nimport { isSegmentCountsSame } from \"./is-segment-counts-same\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\nimport { splitToSegments } from \"./split-to-segments\";\n\n/**\n * This function if the route and resourceRoute match by segments.\n * - First, trailing and leading slashes are removed\n * - Then, the route and resourceRoute are split to segments and checked if they have the same number of segments\n * - Then, each segment is checked if it is a parameter or if it matches the resourceRoute segment\n * - If all segments match, the function returns true, otherwise false\n */\nexport const checkBySegments = (route: string, resourceRoute: string) => {\n  const stdRoute = removeLeadingTrailingSlashes(route);\n  const stdResourceRoute = removeLeadingTrailingSlashes(resourceRoute);\n  // we need to check if the route and resourceRoute have the same number of segments\n  // if not, we can't match them\n  if (!isSegmentCountsSame(stdRoute, stdResourceRoute)) {\n    return false;\n  }\n\n  const routeSegments = splitToSegments(stdRoute);\n  const resourceRouteSegments = splitToSegments(stdResourceRoute);\n\n  return resourceRouteSegments.every((segment, index) => {\n    return isParameter(segment) || segment === routeSegments[index];\n  });\n};\n","import { Action } from \"src/interfaces\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\n\n/**\n * This helper function returns the default path for a given action and resource.\n * It also applies the parentPrefix if provided.\n * This is used by the legacy router and the new router if the resource doesn't provide a custom path.\n */\nexport const getDefaultActionPath = (\n  resourceName: string,\n  action: Action,\n  parentPrefix?: string,\n): string => {\n  const cleanParentPrefix = removeLeadingTrailingSlashes(parentPrefix || \"\");\n\n  let path = `${cleanParentPrefix}${\n    cleanParentPrefix ? \"/\" : \"\"\n  }${resourceName}`;\n\n  if (action === \"list\") {\n    path = `${path}`;\n  } else if (action === \"create\") {\n    path = `${path}/create`;\n  } else if (action === \"edit\") {\n    path = `${path}/edit/:id`;\n  } else if (action === \"show\") {\n    path = `${path}/show/:id`;\n  } else if (action === \"clone\") {\n    path = `${path}/clone/:id`;\n  }\n\n  return `/${path.replace(/^\\//, \"\")}`;\n};\n","import { IResourceItem } from \"src/interfaces\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\n/**\n * Returns the parent resource of the given resource.\n * Works both with the deprecated `parentName` and the new `parent` property.\n */\nexport const getParentResource = (\n  resource: IResourceItem,\n  resources: IResourceItem[],\n): IResourceItem | undefined => {\n  const parentName = pickNotDeprecated(\n    resource.meta?.parent,\n    resource.options?.parent,\n    resource.parentName,\n  );\n\n  if (!parentName) {\n    return undefined;\n  }\n\n  const parentResource = resources.find(\n    (resource) => (resource.identifier ?? resource.name) === parentName,\n  );\n\n  /**\n   * If the parent resource is not found, we return a resource object with the name of the parent resource.\n   * Because we still want to have nesting and prefixing for the resource even if the parent is not explicitly defined.\n   */\n  return parentResource ?? { name: parentName };\n};\n","import { ResourceProps } from \"src/interfaces/bindings/resource\";\nimport { getParentResource } from \"./get-parent-resource\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\n\n/**\n * Returns the parent prefix for a resource\n * - If `legacy` is provided, the computation is based on the `route` option of the resource\n */\nexport const getParentPrefixForResource = (\n  resource: ResourceProps,\n  resources: ResourceProps[],\n  /**\n   * Uses legacy route if true (`options.route`)\n   */\n  legacy?: boolean,\n): string | undefined => {\n  const parents: ResourceProps[] = [];\n\n  let parent = getParentResource(resource, resources);\n\n  while (parent) {\n    parents.push(parent);\n    parent = getParentResource(parent, resources);\n  }\n\n  if (parents.length === 0) {\n    return undefined;\n  }\n\n  return `/${parents\n    .reverse()\n    .map((parent) => {\n      const v = legacy ? parent.options?.route ?? parent.name : parent.name;\n      return removeLeadingTrailingSlashes(v);\n    })\n    .join(\"/\")}`;\n};\n","import { Action, IResourceItem } from \"src/interfaces\";\nimport { getDefaultActionPath } from \"./get-default-action-path\";\nimport { getParentPrefixForResource } from \"./get-parent-prefix-for-resource\";\n\nexport type ResourceActionRoute = {\n  action: Action;\n  resource: IResourceItem;\n  route: string;\n};\n\n/**\n * This function returns all the routes for available actions for a resource.\n * - If the action is a function, it means we're fallbacking to default path for the action\n * - If the action is a string, it means we don't have the component, but we have the route\n * - If the action is an object, it means we have the component and the route\n * - It will return an array of objects with the action, the resource and the route\n */\nexport const getActionRoutesFromResource = (\n  resource: IResourceItem,\n  resources: IResourceItem[],\n  /**\n   * Uses legacy route if true (`options.route`)\n   */\n  legacy?: boolean,\n) => {\n  const actions: ResourceActionRoute[] = [];\n\n  const actionList: Action[] = [\"list\", \"show\", \"edit\", \"create\", \"clone\"];\n\n  const parentPrefix = getParentPrefixForResource(resource, resources, legacy);\n\n  actionList.forEach((action) => {\n    const item =\n      legacy && action === \"clone\" ? resource.create : resource[action];\n\n    let route: string | undefined = undefined;\n\n    if (typeof item === \"function\" || legacy) {\n      // means we're fallbacking to default path for the action\n      route = getDefaultActionPath(\n        legacy\n          ? resource.meta?.route ?? resource.options?.route ?? resource.name\n          : resource.name,\n        action,\n        legacy ? parentPrefix : undefined,\n      );\n    } else if (typeof item === \"string\") {\n      // means we don't have the component, but we have the route\n      route = item;\n    } else if (typeof item === \"object\") {\n      // means we have the component and the route\n      route = item.path;\n    }\n\n    if (route) {\n      actions.push({\n        action,\n        resource,\n        route: `/${route.replace(/^\\//, \"\")}`,\n      });\n    }\n  });\n\n  return actions;\n};\n","import { ResourceActionRoute } from \"./get-action-routes-from-resource\";\nimport { isParameter } from \"./is-parameter\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\nimport { splitToSegments } from \"./split-to-segments\";\n\n/**\n * Picks the most eligible route from the given matched routes.\n * - If there's only one route, it returns it.\n * - If there's more than one route, it picks the best non-greedy match.\n */\nexport const pickMatchedRoute = (\n  routes: ResourceActionRoute[],\n): ResourceActionRoute | undefined => {\n  // these routes are all matched, we should pick the least parametrized one\n\n  // no routes, no match\n  if (routes.length === 0) {\n    return undefined;\n  }\n\n  // no need to calculate the route segments if there's only one route\n  if (routes.length === 1) {\n    return routes[0];\n  }\n\n  // remove trailing and leading slashes\n  // split them to segments\n  const sanitizedRoutes = routes.map((route) => ({\n    ...route,\n    splitted: splitToSegments(removeLeadingTrailingSlashes(route.route)),\n  }));\n\n  // at this point, before calling this function, we already checked for segment lenghts and expect all of them to be the same\n  const segmentsCount = sanitizedRoutes[0]?.splitted.length ?? 0;\n\n  let eligibleRoutes: Array<(typeof sanitizedRoutes)[number]> = [\n    ...sanitizedRoutes,\n  ];\n\n  // loop through the segments\n  for (let i = 0; i < segmentsCount; i++) {\n    const nonParametrizedRoutes = eligibleRoutes.filter(\n      (route) => !isParameter(route.splitted[i]),\n    );\n\n    if (nonParametrizedRoutes.length === 0) {\n      // keep the eligible routes as they are\n      continue;\n    }\n    if (nonParametrizedRoutes.length === 1) {\n      // no need to continue, we found the route\n      eligibleRoutes = nonParametrizedRoutes;\n      break;\n    }\n\n    // we have more than one non-parametrized route, we need to check the next segment\n    eligibleRoutes = nonParametrizedRoutes;\n  }\n\n  return eligibleRoutes[0];\n};\n","import { Action, IResourceItem } from \"../../../interfaces\";\nimport { checkBySegments } from \"./check-by-segments\";\nimport { getActionRoutesFromResource } from \"./get-action-routes-from-resource\";\nimport { pickMatchedRoute } from \"./pick-matched-route\";\n\n/**\n * Match the resource from the route\n * - It will calculate all possible routes for resources and their actions\n * - It will check if the route matches any of the possible routes\n * - It will return the most eligible resource and action\n */\nexport const matchResourceFromRoute = (\n  route: string,\n  resources: IResourceItem[],\n): {\n  found: boolean;\n  resource?: IResourceItem;\n  action?: Action;\n  matchedRoute?: string;\n} => {\n  const allActionRoutes = resources.flatMap((resource) => {\n    return getActionRoutesFromResource(resource, resources);\n  });\n\n  const allFound = allActionRoutes.filter((actionRoute) => {\n    return checkBySegments(route, actionRoute.route);\n  });\n\n  const mostEligible = pickMatchedRoute(allFound);\n\n  return {\n    found: !!mostEligible,\n    resource: mostEligible?.resource,\n    action: mostEligible?.action,\n    matchedRoute: mostEligible?.route,\n  };\n};\n","import { ResourceProps } from \"src/interfaces/bindings/resource\";\nimport { getParentPrefixForResource } from \"../router\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\n/**\n * generates route for the resource based on parents and custom routes\n * @deprecated this is a **legacy** function and works only with the old resource definition\n */\nexport const routeGenerator = (\n  item: ResourceProps,\n  resourcesFromProps: ResourceProps[],\n): string | undefined => {\n  let route;\n\n  const parentPrefix = getParentPrefixForResource(\n    item,\n    resourcesFromProps,\n    true,\n  );\n\n  if (parentPrefix) {\n    const meta = pickNotDeprecated(item.meta, item.options);\n    route = `${parentPrefix}/${meta?.route ?? item.name}`;\n  } else {\n    route = item.options?.route ?? item.name;\n  }\n\n  return `/${route.replace(/^\\//, \"\")}`;\n};\n","import { pickNotDeprecated } from \"@definitions/helpers/pickNotDeprecated\";\nimport { IResourceItem, ITreeMenu, IMenuItem } from \"src/interfaces\";\n\n/**\n * @deprecated This helper is deprecated. Please use `createTree` instead.\n */\nexport const createTreeView = (\n  resources: IResourceItem[] | IMenuItem[],\n): ITreeMenu[] | ITreeMenu[] => {\n  const tree = [];\n  const resourcesRouteObject: { [key: string]: any } = {};\n  const resourcesNameObject: { [key: string]: any } = {};\n  let parent: IResourceItem | IMenuItem;\n  let child: ITreeMenu;\n\n  for (let i = 0; i < resources.length; i++) {\n    parent = resources[i];\n\n    const route =\n      parent.route ??\n      pickNotDeprecated(parent?.meta, parent.options)?.route ??\n      \"\";\n\n    resourcesRouteObject[route] = parent;\n    resourcesRouteObject[route][\"children\"] = [];\n\n    resourcesNameObject[parent.name] = parent;\n    resourcesNameObject[parent.name][\"children\"] = [];\n  }\n\n  for (const name in resourcesRouteObject) {\n    if (Object.hasOwn(resourcesRouteObject, name)) {\n      child = resourcesRouteObject[name];\n\n      if (child.parentName && resourcesNameObject[child.parentName]) {\n        resourcesNameObject[child.parentName][\"children\"].push(child);\n      } else {\n        tree.push(child);\n      }\n    }\n  }\n\n  return tree;\n};\n","export const humanizeString = (text: string): string => {\n  text = text.replace(/([a-z]{1})([A-Z]{1})/g, \"$1-$2\");\n  text = text.replace(/([A-Z]{1})([A-Z]{1})([a-z]{1})/g, \"$1-$2$3\");\n\n  text = text\n    .toLowerCase()\n    .replace(/[_-]+/g, \" \")\n    .replace(/\\s{2,}/g, \" \")\n    .trim();\n  text = text.charAt(0).toUpperCase() + text.slice(1);\n\n  return text;\n};\n// https://www.npmjs.com/package/humanize-string\n","import React from \"react\";\nimport pluralize from \"pluralize\";\nimport { humanizeString } from \"../../definitions/helpers/humanizeString\";\n\nimport {\n  IRefineContextOptions,\n  IRefineContext,\n  IRefineContextProvider,\n} from \"./IRefineContext\";\nimport { DefaultLayout } from \"@components/layoutWrapper/defaultLayout\";\n\nimport { LoginPage as DefaultLoginPage } from \"@components/pages\";\n\nexport const defaultRefineOptions: IRefineContextOptions = {\n  mutationMode: \"pessimistic\",\n  syncWithLocation: false,\n  undoableTimeout: 5000,\n  warnWhenUnsavedChanges: false,\n  liveMode: \"off\",\n  redirect: {\n    afterCreate: \"list\",\n    afterClone: \"list\",\n    afterEdit: \"list\",\n  },\n  overtime: {\n    interval: 1000,\n  },\n  textTransformers: {\n    humanize: humanizeString,\n    plural: pluralize.plural,\n    singular: pluralize.singular,\n  },\n  disableServerSideValidation: false,\n};\n\nexport const RefineContext = React.createContext<IRefineContext>({\n  hasDashboard: false,\n  mutationMode: \"pessimistic\",\n  warnWhenUnsavedChanges: false,\n  syncWithLocation: false,\n  undoableTimeout: 5000,\n  Title: undefined,\n  Sider: undefined,\n  Header: undefined,\n  Footer: undefined,\n  Layout: DefaultLayout,\n  OffLayoutArea: undefined,\n  liveMode: \"off\",\n  onLiveEvent: undefined,\n  options: defaultRefineOptions,\n});\n\nexport const RefineContextProvider: React.FC<IRefineContextProvider> = ({\n  hasDashboard,\n  mutationMode,\n  warnWhenUnsavedChanges,\n  syncWithLocation,\n  undoableTimeout,\n  children,\n  DashboardPage,\n  Title,\n  Layout = DefaultLayout,\n  Header,\n  Sider,\n  Footer,\n  OffLayoutArea,\n  LoginPage = DefaultLoginPage,\n  catchAll,\n  liveMode = \"off\",\n  onLiveEvent,\n  options,\n}) => {\n  return (\n    <RefineContext.Provider\n      value={{\n        __initialized: true,\n        hasDashboard,\n        mutationMode,\n        warnWhenUnsavedChanges,\n        syncWithLocation,\n        Title,\n        undoableTimeout,\n        Layout,\n        Header,\n        Sider,\n        Footer,\n        OffLayoutArea,\n        DashboardPage,\n        LoginPage,\n        catchAll,\n        liveMode,\n        onLiveEvent,\n        options,\n      }}\n    >\n      {children}\n    </RefineContext.Provider>\n  );\n};\n","import React from \"react\";\n\nimport { LayoutProps } from \"../../../interfaces\";\n\nexport const DefaultLayout: React.FC<LayoutProps> = ({ children }) => {\n  return <div>{children}</div>;\n};\n","import { QueryClient, QueryClientConfig } from \"@tanstack/react-query\";\n\nimport { defaultRefineOptions } from \"@contexts/refine\";\nimport {\n  IRefineContextOptions,\n  IRefineOptions,\n  LiveModeProps,\n  MutationMode,\n} from \"src/interfaces\";\n\ntype HandleRefineOptionsProps = {\n  options?: IRefineOptions;\n  mutationMode?: MutationMode;\n  syncWithLocation?: boolean;\n  warnWhenUnsavedChanges?: boolean;\n  undoableTimeout?: number;\n  liveMode?: LiveModeProps[\"liveMode\"];\n  disableTelemetry?: boolean;\n  reactQueryClientConfig?: QueryClientConfig;\n  reactQueryDevtoolConfig?: any | false;\n};\n\ntype HandleRefineOptionsReturnValues = {\n  optionsWithDefaults: IRefineContextOptions;\n  disableTelemetryWithDefault: boolean;\n  reactQueryWithDefaults: {\n    clientConfig: QueryClientConfig | InstanceType<typeof QueryClient>;\n    devtoolConfig: false | any;\n  };\n};\n\nexport const handleRefineOptions = ({\n  options,\n  disableTelemetry,\n  liveMode,\n  mutationMode,\n  reactQueryClientConfig,\n  reactQueryDevtoolConfig,\n  syncWithLocation,\n  undoableTimeout,\n  warnWhenUnsavedChanges,\n}: HandleRefineOptionsProps = {}): HandleRefineOptionsReturnValues => {\n  const optionsWithDefaults: IRefineContextOptions = {\n    breadcrumb: options?.breadcrumb,\n    mutationMode:\n      options?.mutationMode ??\n      mutationMode ??\n      defaultRefineOptions.mutationMode,\n    undoableTimeout:\n      options?.undoableTimeout ??\n      undoableTimeout ??\n      defaultRefineOptions.undoableTimeout,\n    syncWithLocation:\n      options?.syncWithLocation ??\n      syncWithLocation ??\n      defaultRefineOptions.syncWithLocation,\n    warnWhenUnsavedChanges:\n      options?.warnWhenUnsavedChanges ??\n      warnWhenUnsavedChanges ??\n      defaultRefineOptions.warnWhenUnsavedChanges,\n    liveMode: options?.liveMode ?? liveMode ?? defaultRefineOptions.liveMode,\n    redirect: {\n      afterCreate:\n        options?.redirect?.afterCreate ??\n        defaultRefineOptions.redirect.afterCreate,\n      afterClone:\n        options?.redirect?.afterClone ??\n        defaultRefineOptions.redirect.afterClone,\n      afterEdit:\n        options?.redirect?.afterEdit ?? defaultRefineOptions.redirect.afterEdit,\n    },\n    overtime: options?.overtime ?? defaultRefineOptions.overtime,\n    textTransformers: {\n      humanize:\n        options?.textTransformers?.humanize ??\n        defaultRefineOptions.textTransformers.humanize,\n      plural:\n        options?.textTransformers?.plural ??\n        defaultRefineOptions.textTransformers.plural,\n      singular:\n        options?.textTransformers?.singular ??\n        defaultRefineOptions.textTransformers.singular,\n    },\n    disableServerSideValidation:\n      options?.disableServerSideValidation ??\n      defaultRefineOptions.disableServerSideValidation,\n    projectId: options?.projectId,\n    useNewQueryKeys: options?.useNewQueryKeys,\n  };\n\n  const disableTelemetryWithDefault =\n    options?.disableTelemetry ?? disableTelemetry ?? false;\n\n  const reactQueryWithDefaults = {\n    clientConfig:\n      options?.reactQuery?.clientConfig ?? reactQueryClientConfig ?? {},\n    devtoolConfig:\n      options?.reactQuery?.devtoolConfig ?? reactQueryDevtoolConfig ?? {},\n  };\n\n  return {\n    optionsWithDefaults,\n    disableTelemetryWithDefault,\n    reactQueryWithDefaults,\n  };\n};\n","import { Action, IRefineContextOptions, RedirectAction } from \"src/interfaces\";\n\ntype RedirectPageProps = {\n  redirectFromProps?: RedirectAction;\n  action: Action;\n  redirectOptions: IRefineContextOptions[\"redirect\"];\n};\n\nexport const redirectPage = ({\n  redirectFromProps,\n  action,\n  redirectOptions,\n}: RedirectPageProps): RedirectAction => {\n  if (redirectFromProps || redirectFromProps === false) {\n    return redirectFromProps;\n  }\n\n  switch (action) {\n    case \"clone\":\n      return redirectOptions.afterClone;\n    case \"create\":\n      return redirectOptions.afterCreate;\n    case \"edit\":\n      return redirectOptions.afterEdit;\n    default:\n      return false;\n  }\n};\n","type EachResolve<TResolve, Response> = (\n  result: TResolve,\n  index: number,\n) => Response;\ntype EachReject<TReject, Response> = (\n  error: TReject,\n  index: number,\n) => Response;\n\nexport const sequentialPromises = async <\n  TResolve = unknown,\n  TReject = unknown,\n  TResolveResponse = unknown,\n  TRejectResponse = unknown,\n>(\n  promises: (() => Promise<TResolve>)[],\n  onEachResolve: EachResolve<TResolve, TResolveResponse>,\n  onEachReject: EachReject<TReject, TRejectResponse>,\n): Promise<(TResolveResponse | TRejectResponse)[]> => {\n  const results = [];\n  // @ts-expect-error Remove this when we enable `downLevelIterations`\n  for (const [index, promise] of promises.entries()) {\n    try {\n      const result = await promise();\n\n      results.push(onEachResolve(result, index));\n    } catch (error) {\n      results.push(onEachReject(error as TReject, index));\n    }\n  }\n  return results;\n};\n","import { IResourceItem } from \"src/interfaces/bindings/resource\";\nimport { removeLeadingTrailingSlashes } from \"../router/remove-leading-trailing-slashes\";\n\n/**\n * Picks the resource based on the provided identifier.\n * Identifier fallbacks to `name` if `identifier` is not explicitly provided to the resource.\n * If legacy is true, then resource is matched by `route` first and then by `name`.\n */\nexport const pickResource = (\n  identifier?: string,\n  resources: IResourceItem[] = [],\n  /**\n   * If true, the identifier will be checked for `route` and `name` properties\n   */\n  legacy = false,\n): IResourceItem | undefined => {\n  if (!identifier) {\n    return undefined;\n  }\n\n  if (legacy) {\n    const resourceByRoute = resources.find(\n      (r) =>\n        removeLeadingTrailingSlashes(r.route ?? \"\") ===\n        removeLeadingTrailingSlashes(identifier),\n    );\n\n    const resource = resourceByRoute\n      ? resourceByRoute\n      : resources.find((r) => r.name === identifier);\n\n    return resource;\n  }\n\n  let resource = resources.find((r) => r.identifier === identifier);\n  if (!resource) {\n    resource = resources.find((r) => r.name === identifier);\n  }\n\n  return resource;\n};\n","import { IResourceItem } from \"src/interfaces/bindings/resource\";\nimport { pickResource } from \"../pick-resource\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\n/**\n * Picks the data provider name based on the provided name or fallbacks to resource definition, or `default`.\n */\nexport const pickDataProvider = (\n  resourceName?: string,\n  dataProviderName?: string,\n  resources?: IResourceItem[],\n) => {\n  if (dataProviderName) {\n    return dataProviderName;\n  }\n\n  /**\n   * In this helper, we don't do `route` based matching therefore there's no need to check for `legacy` behaviors.\n   */\n  const resource = pickResource(resourceName, resources);\n\n  const meta = pickNotDeprecated(resource?.meta, resource?.options);\n\n  if (meta?.dataProviderName) {\n    return meta.dataProviderName;\n  }\n\n  return \"default\";\n};\n","export const handleMultiple = async <TData = unknown>(\n  promises: Promise<{ data: TData }>[],\n): Promise<{ data: TData[] }> => {\n  return {\n    data: (await Promise.all(promises)).map((res) => res.data),\n  };\n};\n","import { GetListResponse } from \"../../../interfaces\";\n\nexport const getNextPageParam = (lastPage: GetListResponse) => {\n  const { pagination, cursor } = lastPage;\n\n  // cursor pagination\n  if (cursor?.next) {\n    return cursor.next;\n  }\n\n  const current = pagination?.current || 1;\n\n  const pageSize = pagination?.pageSize || 10;\n  const totalPages = Math.ceil((lastPage.total || 0) / pageSize);\n\n  return current < totalPages ? Number(current) + 1 : undefined;\n};\n\nexport const getPreviousPageParam = (lastPage: GetListResponse) => {\n  const { pagination, cursor } = lastPage;\n\n  // cursor pagination\n  if (cursor?.prev) {\n    return cursor.prev;\n  }\n\n  const current = pagination?.current || 1;\n\n  return current === 1 ? undefined : current - 1;\n};\n","import {\n  IResourceItem,\n  ResourceProps,\n} from \"../../../interfaces/bindings/resource\";\n\nimport { routeGenerator } from \"../routeGenerator\";\n\n/**\n * For the legacy definition of resources, we did a basic transformation for provided resources\n * - This is meant to provide an easier way to access properties.\n * - In the new definition, we don't need to do transformations and properties can be accessed via helpers or manually.\n * This is kept for backward compability\n */\nexport const legacyResourceTransform = (resources: ResourceProps[]) => {\n  const _resources: IResourceItem[] = [];\n\n  resources.forEach((resource) => {\n    _resources.push({\n      ...resource,\n      label: resource.meta?.label ?? resource.options?.label,\n      route: routeGenerator(resource, resources),\n      canCreate: !!resource.create,\n      canEdit: !!resource.edit,\n      canShow: !!resource.show,\n      canDelete: resource.canDelete,\n    });\n  });\n\n  return _resources;\n};\n","import { splitToSegments } from \"./split-to-segments\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\nimport { isParameter } from \"./is-parameter\";\n\n/**\n * Picks the route parameters from the given route.\n * (e.g. /users/:id/posts/:postId => ['id', 'postId'])\n */\nexport const pickRouteParams = (route: string) => {\n  const segments = splitToSegments(removeLeadingTrailingSlashes(route));\n\n  return segments.flatMap((s) => {\n    if (isParameter(s)) {\n      return [s.slice(1)];\n    }\n\n    return [];\n  });\n};\n","/**\n * Prepares the route params by checking the existing params and meta data.\n * Meta data is prioritized over params.\n * Params are prioritized over predetermined id, action and resource.\n * This means, we can use `meta` for user supplied params (both manually or from the query string)\n */\nexport const prepareRouteParams = <\n  TRouteParams extends Record<string, unknown> = Record<string, unknown>,\n>(\n  routeParams: (keyof TRouteParams)[],\n  meta: Record<string, unknown> = {},\n): Partial<TRouteParams> => {\n  return routeParams.reduce(\n    (acc, key) => {\n      const value = meta[key as string];\n      if (typeof value !== \"undefined\") {\n        acc[key] = value as TRouteParams[keyof TRouteParams];\n      }\n      return acc;\n    },\n    {} as Partial<TRouteParams>,\n  );\n};\n","import { MetaQuery, ParseResponse } from \"src/interfaces\";\nimport { pickRouteParams } from \"./pick-route-params\";\nimport { prepareRouteParams } from \"./prepare-route-params\";\n\n/**\n * This function will compose a route with the given params and meta.\n * - A route can have parameters like (eg: /users/:id)\n * - First we pick the route params from the route (eg: [id])\n * - Then we prepare the route params with the given params and meta (eg: { id: 1 })\n * - Then we replace the route params with the prepared route params (eg: /users/1)\n */\nexport const composeRoute = (\n  designatedRoute: string,\n  resourceMeta: MetaQuery = {},\n  parsed: ParseResponse = {},\n  meta: Record<string, unknown> = {},\n): string => {\n  // pickRouteParams (from the route)\n  const routeParams = pickRouteParams(designatedRoute);\n  // prepareRouteParams (from route params, params and meta)\n  const preparedRouteParams = prepareRouteParams(routeParams, {\n    ...resourceMeta,\n    ...(typeof parsed?.id !== \"undefined\" ? { id: parsed.id } : {}),\n    ...(typeof parsed?.action !== \"undefined\" ? { action: parsed.action } : {}),\n    ...(typeof parsed?.resource !== \"undefined\"\n      ? { resource: parsed.resource }\n      : {}),\n    ...parsed?.params,\n    ...meta,\n  });\n  // replace route params with prepared route params\n  return designatedRoute.replace(/:([^\\/]+)/g, (match, key) => {\n    const fromParams = preparedRouteParams[key];\n    if (typeof fromParams !== \"undefined\") {\n      return `${fromParams}`;\n    }\n    return match;\n  });\n};\n","import React, { PropsWithChildren } from \"react\";\n\nimport { useNavigation } from \"@hooks\";\nimport { ILegacyAuthContext, IAuthBindingsContext } from \"../../interfaces\";\n\n/**\n * @deprecated `LegacyAuthContext` is deprecated with refine@4, use `AuthBindingsContext` instead, however, we still support `LegacyAuthContext` for backward compatibility.\n */\nexport const LegacyAuthContext = React.createContext<ILegacyAuthContext>({});\n\n/**\n * @deprecated `LegacyAuthContextProvider` is deprecated with refine@4, use `AuthBindingsContextProvider` instead, however, we still support `LegacyAuthContextProvider` for backward compatibility.\n */\nexport const LegacyAuthContextProvider: React.FC<\n  ILegacyAuthContext & {\n    children?: React.ReactNode;\n  }\n> = ({ children, isProvided, ...authOperations }) => {\n  const { replace } = useNavigation();\n\n  const loginFunc = async (params: any) => {\n    try {\n      const result = await authOperations.login?.(params);\n\n      return result;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  };\n\n  const registerFunc = async (params: any) => {\n    try {\n      const result = await authOperations.register?.(params);\n\n      return result;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  };\n\n  const logoutFunc = async (params: any) => {\n    try {\n      const redirectPath = await authOperations.logout?.(params);\n\n      return redirectPath;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  };\n\n  const checkAuthFunc = async (params: any) => {\n    try {\n      await authOperations.checkAuth?.(params);\n      return Promise.resolve();\n    } catch (error) {\n      if ((error as { redirectPath?: string })?.redirectPath) {\n        replace((error as { redirectPath: string }).redirectPath);\n      }\n\n      return Promise.reject(error);\n    }\n  };\n\n  return (\n    <LegacyAuthContext.Provider\n      value={{\n        ...authOperations,\n        login: loginFunc,\n        logout: logoutFunc,\n        checkAuth: checkAuthFunc,\n        register: registerFunc,\n        isProvided,\n      }}\n    >\n      {children}\n    </LegacyAuthContext.Provider>\n  );\n};\n\nexport const AuthBindingsContext = React.createContext<\n  Partial<IAuthBindingsContext>\n>({});\n\nexport const AuthBindingsContextProvider: React.FC<\n  PropsWithChildren<IAuthBindingsContext>\n> = ({ children, isProvided, ...authBindings }) => {\n  const handleLogin = async (params: unknown) => {\n    try {\n      const result = await authBindings.login?.(params);\n\n      return result;\n    } catch (error) {\n      console.warn(\n        \"Unhandled Error in login: refine always expects a resolved promise.\",\n        error,\n      );\n      return Promise.reject(error);\n    }\n  };\n\n  const handleRegister = async (params: unknown) => {\n    try {\n      const result = await authBindings.register?.(params);\n\n      return result;\n    } catch (error) {\n      console.warn(\n        \"Unhandled Error in register: refine always expects a resolved promise.\",\n        error,\n      );\n      return Promise.reject(error);\n    }\n  };\n\n  const handleLogout = async (params: unknown) => {\n    try {\n      const result = await authBindings.logout?.(params);\n\n      return result;\n    } catch (error) {\n      console.warn(\n        \"Unhandled Error in logout: refine always expects a resolved promise.\",\n        error,\n      );\n      return Promise.reject(error);\n    }\n  };\n\n  const handleCheck = async (params: unknown) => {\n    try {\n      const result = await authBindings.check?.(params);\n\n      return Promise.resolve(result);\n    } catch (error) {\n      console.warn(\n        \"Unhandled Error in check: refine always expects a resolved promise.\",\n        error,\n      );\n      return Promise.reject(error);\n    }\n  };\n\n  const handleForgotPassword = async (params: unknown) => {\n    try {\n      const result = await authBindings.forgotPassword?.(params);\n\n      return Promise.resolve(result);\n    } catch (error) {\n      console.warn(\n        \"Unhandled Error in forgotPassword: refine always expects a resolved promise.\",\n        error,\n      );\n      return Promise.reject(error);\n    }\n  };\n\n  const handleUpdatePassword = async (params: unknown) => {\n    try {\n      const result = await authBindings.updatePassword?.(params);\n      return Promise.resolve(result);\n    } catch (error) {\n      console.warn(\n        \"Unhandled Error in updatePassword: refine always expects a resolved promise.\",\n        error,\n      );\n      return Promise.reject(error);\n    }\n  };\n\n  return (\n    <AuthBindingsContext.Provider\n      value={{\n        ...authBindings,\n        login: handleLogin as IAuthBindingsContext[\"login\"],\n        logout: handleLogout as IAuthBindingsContext[\"logout\"],\n        check: handleCheck as IAuthBindingsContext[\"check\"],\n        register: handleRegister as IAuthBindingsContext[\"register\"],\n        forgotPassword:\n          handleForgotPassword as IAuthBindingsContext[\"forgotPassword\"],\n        updatePassword:\n          handleUpdatePassword as IAuthBindingsContext[\"updatePassword\"],\n        isProvided,\n      }}\n    >\n      {children}\n    </AuthBindingsContext.Provider>\n  );\n};\n\n/**\n * @deprecated `useLegacyAuthContext` is deprecated with refine@4, use `useAuthBindingsContext` instead, however, we still support `useLegacyAuthContext` for backward compatibility.\n */\nexport const useLegacyAuthContext = () => {\n  const context = React.useContext(LegacyAuthContext);\n\n  return context;\n};\n\nexport const useAuthBindingsContext = () => {\n  const context = React.useContext(AuthBindingsContext);\n\n  return context;\n};\n","import { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\n/**\n * @returns authProvider or legacyAuthProvider if provided, otherwise null\n * @internal\n * NOTE: Will be removed in v5\n */\nexport const useActiveAuthProvider = () => {\n  const legacyAuthProvider = useLegacyAuthContext();\n  const authProvider = useAuthBindingsContext();\n\n  if (authProvider.isProvided) {\n    return { isLegacy: false, ...authProvider };\n  }\n\n  if (legacyAuthProvider.isProvided) {\n    // legacyAuthProvider interface is different from authProvider interface\n    // we need to convert it to authProvider interface for simple usage\n    // in the future, we will remove legacyAuthProvider\n    return {\n      isLegacy: true,\n      ...legacyAuthProvider,\n      check: legacyAuthProvider.checkAuth,\n      onError: legacyAuthProvider.checkError,\n      getIdentity: legacyAuthProvider.getUserIdentity,\n    };\n  }\n\n  return null;\n};\n","import { Pagination } from \"../../../interfaces\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\ntype HandlePaginationParamsProps = {\n  hasPagination?: boolean;\n  pagination?: Pagination;\n  configPagination?: Pagination;\n};\n\nexport const handlePaginationParams = ({\n  hasPagination,\n  pagination,\n  configPagination,\n}: HandlePaginationParamsProps = {}): Required<Pagination> => {\n  const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n  const mode = pagination?.mode ?? hasPaginationString;\n\n  const current =\n    pickNotDeprecated(pagination?.current, configPagination?.current) ?? 1;\n\n  const pageSize =\n    pickNotDeprecated(pagination?.pageSize, configPagination?.pageSize) ?? 10;\n\n  return {\n    current,\n    pageSize,\n    mode,\n  };\n};\n","import { useState, useEffect } from \"react\";\n\nexport const useMediaQuery = (query: string) => {\n  const [matches, setMatches] = useState(false);\n\n  useEffect(() => {\n    const media = window.matchMedia(query);\n    if (media.matches !== matches) {\n      setMatches(media.matches);\n    }\n    const listener = () => setMatches(media.matches);\n    window.addEventListener(\"resize\", listener);\n    return () => window.removeEventListener(\"resize\", listener);\n  }, [matches, query]);\n\n  return matches;\n};\n","import type { useTranslate } from \"@hooks/translate\";\n\nexport const safeTranslate = (\n  translate: ReturnType<typeof useTranslate>,\n  key: string,\n  defaultMessage?: string,\n  options?: any,\n) => {\n  const translated = options\n    ? translate(key, options, defaultMessage)\n    : translate(key, defaultMessage);\n\n  const fallback = defaultMessage ?? key;\n\n  if (translated === key || typeof translated === \"undefined\") {\n    return fallback;\n  }\n\n  return translated;\n};\n","import { IResourceItem } from \"@contexts/resource\";\nimport { userFriendlyResourceName } from \"../userFriendlyResourceName\";\nimport type { useTranslate } from \"@hooks/translate\";\nimport { safeTranslate } from \"../safe-translate\";\n\n/**\n * Generates document title for the given resource and action.\n */\nexport function generateDefaultDocumentTitle(\n  translate: ReturnType<typeof useTranslate>,\n  resource?: IResourceItem,\n  action?: string,\n  id?: string,\n  resourceName?: string,\n) {\n  const actionPrefixMatcher = {\n    create: \"Create new \",\n    clone: `#${id ?? \"\"} Clone `,\n    edit: `#${id ?? \"\"} Edit `,\n    show: `#${id ?? \"\"} Show `,\n    list: \"\",\n  };\n\n  const identifier = resource?.identifier ?? resource?.name;\n\n  const resourceNameFallback =\n    resource?.label ??\n    resource?.meta?.label ??\n    userFriendlyResourceName(\n      identifier,\n      action === \"list\" ? \"plural\" : \"singular\",\n    );\n\n  const resourceNameWithFallback = resourceName ?? resourceNameFallback;\n\n  const defaultTitle = safeTranslate(\n    translate,\n    \"documentTitle.default\",\n    \"refine\",\n  );\n  const suffix = safeTranslate(translate, \"documentTitle.suffix\", \" | refine\");\n  let autoGeneratedTitle = defaultTitle;\n\n  if (action && identifier) {\n    autoGeneratedTitle = safeTranslate(\n      translate,\n      `documentTitle.${identifier}.${action}`,\n      `${\n        actionPrefixMatcher[action as keyof typeof actionPrefixMatcher] ?? \"\"\n      }${resourceNameWithFallback}${suffix}`,\n      { id },\n    );\n  }\n\n  return autoGeneratedTitle;\n}\n","import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\nimport { IRefineContextOptions } from \"../../interfaces\";\n\ntype UseMutationModeType = () => {\n  mutationMode: IRefineContextOptions[\"mutationMode\"];\n  undoableTimeout: IRefineContextOptions[\"undoableTimeout\"];\n};\n\n/**\n * Mutation mode determines which mode the mutation runs with.\n * Mutations can run under three different modes: `pessimistic`, `optimistic` and `undoable`.\n * Each mode corresponds to a different type of user experience.\n *\n * @see {@link https://refine.dev/docs/guides-and-concepts/mutation-mode} for more details.\n */\nexport const useMutationMode: UseMutationModeType = () => {\n  const { mutationMode, undoableTimeout } = useContext(RefineContext);\n\n  return { mutationMode, undoableTimeout };\n};\n","import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\nimport { UnsavedWarnContext } from \"@contexts/unsavedWarn\";\nimport {\n  IRefineContextOptions,\n  IUnsavedWarnContext,\n} from \"../../../interfaces\";\n\ntype UseWarnAboutChangeType = () => {\n  warnWhenUnsavedChanges: IRefineContextOptions[\"warnWhenUnsavedChanges\"];\n  warnWhen: NonNullable<IUnsavedWarnContext[\"warnWhen\"]>;\n  setWarnWhen: NonNullable<IUnsavedWarnContext[\"setWarnWhen\"]>;\n};\n\n/**\n * When you have unsaved changes and try to leave the current page, **refine** shows a confirmation modal box.\n * To activate this feature, set the `warnWhenUnsavedChanges` to `true`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config#warnwhenunsavedchanges} for more details.\n */\nexport const useWarnAboutChange: UseWarnAboutChangeType = () => {\n  const { warnWhenUnsavedChanges } = useContext(RefineContext);\n\n  const { warnWhen, setWarnWhen } = useContext(UnsavedWarnContext);\n\n  return {\n    warnWhenUnsavedChanges,\n    warnWhen: Boolean(warnWhen),\n    setWarnWhen: setWarnWhen ?? (() => undefined),\n  };\n};\n","import React, { ReactNode, useState } from \"react\";\n\nimport { IUnsavedWarnContext } from \"./IUnsavedWarnContext\";\n\nexport const UnsavedWarnContext = React.createContext<IUnsavedWarnContext>({});\n\nexport const UnsavedWarnContextProvider: React.FC<{ children: ReactNode }> = ({\n  children,\n}) => {\n  const [warnWhen, setWarnWhen] = useState(false);\n\n  return (\n    <UnsavedWarnContext.Provider value={{ warnWhen, setWarnWhen }}>\n      {children}\n    </UnsavedWarnContext.Provider>\n  );\n};\n","import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\nimport { IRefineContextOptions } from \"../../interfaces\";\n\ntype UseSyncWithLocationType = () => {\n  syncWithLocation: IRefineContextOptions[\"syncWithLocation\"];\n};\n\n/**\n * List query parameter values can be edited manually by typing directly in the URL.\n * To activate this feature `syncWithLocation` needs to be set to `true`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config/#syncwithlocation} for more details.\n */\nexport const useSyncWithLocation: UseSyncWithLocationType = () => {\n  const { syncWithLocation } = useContext(RefineContext);\n\n  return { syncWithLocation };\n};\n","import { useContext } from \"react\";\nimport { RefineContext } from \"@contexts/refine\";\nimport { TitleProps } from \"../../interfaces\";\n\n/**\n * `useTitle` returns a component that calls the `<Title>` passed to the `<Refine>`.\n * In this way, it becomes easier for us to access this component in various parts of the application.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/refine/useTitle} for more details.\n */\nexport const useTitle: () => React.FC<TitleProps> | undefined = () => {\n  const { Title } = useContext(RefineContext);\n\n  return Title;\n};\n","import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\n\nexport const useRefineContext = () => {\n  const {\n    Footer,\n    Header,\n    Layout,\n    OffLayoutArea,\n    Sider,\n    Title,\n    hasDashboard,\n    mutationMode,\n    syncWithLocation,\n    undoableTimeout,\n    warnWhenUnsavedChanges,\n    DashboardPage,\n    LoginPage,\n    catchAll,\n    options,\n    __initialized,\n  } = useContext(RefineContext);\n\n  return {\n    __initialized,\n    Footer,\n    Header,\n    Layout,\n    OffLayoutArea,\n    Sider,\n    Title,\n    hasDashboard,\n    mutationMode,\n    syncWithLocation,\n    undoableTimeout,\n    warnWhenUnsavedChanges,\n    DashboardPage,\n    LoginPage,\n    catchAll,\n    options,\n  };\n};\n","import { useRefineContext } from \"@hooks/refine\";\n\n/**\n * A method that the internal uses\n * @internal\n */\nexport const useUserFriendlyName = () => {\n  const {\n    options: { textTransformers },\n  } = useRefineContext();\n\n  const getFriendlyName = (name = \"\", type: \"singular\" | \"plural\"): string => {\n    const humanizeName = textTransformers.humanize(name);\n    if (type === \"singular\") {\n      return textTransformers.singular(humanizeName);\n    }\n    return textTransformers.plural(humanizeName);\n  };\n\n  return getFriendlyName;\n};\n","const isNested = (obj: any) => typeof obj === \"object\" && obj !== null;\nconst isArray = (obj: any) => Array.isArray(obj);\n\nexport const flattenObjectKeys = (obj: any, prefix = \"\") => {\n  if (!isNested(obj)) {\n    return {\n      [prefix]: obj,\n    };\n  }\n\n  return Object.keys(obj).reduce(\n    (acc, key) => {\n      const currentPrefix = prefix.length ? `${prefix}.` : \"\";\n\n      if (isNested(obj[key]) && Object.keys(obj[key]).length) {\n        if (isArray(obj[key]) && obj[key].length) {\n          obj[key].forEach((item: unknown[], index: number) => {\n            Object.assign(\n              acc,\n              flattenObjectKeys(item, `${currentPrefix + key}.${index}`),\n            );\n          });\n        } else {\n          Object.assign(acc, flattenObjectKeys(obj[key], currentPrefix + key));\n        }\n        // Even if it's a nested object, it should be treated as a key as well\n        acc[currentPrefix + key] = obj[key];\n      } else {\n        acc[currentPrefix + key] = obj[key];\n      }\n      return acc;\n    },\n    {} as Record<string, unknown>,\n  );\n};\n","export const propertyPathToArray = (propertyPath: string) => {\n  return propertyPath\n    .split(\".\")\n    .map((item) => (!Number.isNaN(Number(item)) ? Number(item) : item));\n};\n","export const downloadInBrowser = (\n  filename: string,\n  content: string,\n  type?: string,\n) => {\n  if (typeof window === \"undefined\") {\n    return;\n  }\n\n  const blob = new Blob([content], { type });\n\n  const link = document.createElement(\"a\");\n  link.setAttribute(\"visibility\", \"hidden\");\n  link.download = filename;\n  const blobUrl = URL.createObjectURL(blob);\n  link.href = blobUrl;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n  // As per documentation, call URL.revokeObjectURL to remove the blob from memory.\n  setTimeout(() => {\n    URL.revokeObjectURL(blobUrl);\n  });\n};\n","export const file2Base64 = (file: any): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    const resultHandler = () => {\n      if (reader.result) {\n        reader.removeEventListener(\"load\", resultHandler, false);\n\n        resolve(reader.result as string);\n      }\n    };\n\n    reader.addEventListener(\"load\", resultHandler, false);\n\n    reader.readAsDataURL(file.originFileObj as Blob);\n    reader.onerror = (error) => {\n      reader.removeEventListener(\"load\", resultHandler, false);\n      return reject(error);\n    };\n  });\n};\n","import { useRefineContext } from \"..\";\nimport { keys } from \"@definitions/index\";\n\nexport const useKeys = () => {\n  const {\n    options: { useNewQueryKeys },\n  } = useRefineContext();\n\n  return {\n    keys,\n    preferLegacyKeys: !useNewQueryKeys,\n  };\n};\n","import {\n  useQuery,\n  UseQueryResult,\n  UseQueryOptions,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { IdentityResponse } from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseGetIdentityLegacyProps<TData> = {\n  v3LegacyAuthProviderCompatible: true;\n  queryOptions?: UseQueryOptions<TData>;\n};\n\nexport type UseGetIdentityProps<TData = IdentityResponse> = {\n  v3LegacyAuthProviderCompatible?: false;\n  queryOptions?: UseQueryOptions<TData>;\n};\n\nexport type UseGetIdentityCombinedProps<TData = any> = {\n  v3LegacyAuthProviderCompatible: boolean;\n  queryOptions?: UseQueryOptions<TData> | UseQueryOptions<IdentityResponse>;\n};\n\nexport type UseGetIdentityLegacyReturnType<TData> = UseQueryResult<\n  TData,\n  unknown\n>;\n\nexport type UseGetIdentityReturnType<TData = IdentityResponse> = UseQueryResult<\n  TData,\n  unknown\n>;\n\nexport type UsePermissionsCombinedReturnType<TData = any> =\n  | UseQueryResult<TData, unknown>\n  | UseQueryResult<IdentityResponse, unknown>;\n\nexport function useGetIdentity<TData = any>(\n  props: UseGetIdentityLegacyProps<TData>,\n): UseGetIdentityLegacyReturnType<TData>;\n\nexport function useGetIdentity<TData = IdentityResponse>(\n  props?: UseGetIdentityProps<TData>,\n): UseGetIdentityReturnType<TData>;\n\nexport function useGetIdentity<TData = any>(\n  props?: UseGetIdentityCombinedProps<TData>,\n): UsePermissionsCombinedReturnType<TData>;\n\n/**\n * `useGetIdentity` calls the `getUserIdentity` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useGetIdentity} for more details.\n *\n * @typeParam TData - Result data of the query\n *\n */\nexport function useGetIdentity<TData = any>({\n  v3LegacyAuthProviderCompatible = false,\n  queryOptions,\n}: UseGetIdentityProps<TData> | UseGetIdentityLegacyProps<TData> = {}):\n  | UseGetIdentityReturnType<TData>\n  | UseGetIdentityLegacyReturnType<TData> {\n  const { getUserIdentity: legacyGetUserIdentity } = useLegacyAuthContext();\n  const { getIdentity } = useAuthBindingsContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const queryResponse = useQuery<TData>({\n    queryKey: keys().auth().action(\"identity\").get(preferLegacyKeys),\n    // Enabled check for `getIdentity` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n    queryFn:\n      (getIdentity as (params?: unknown) => Promise<TData>) ??\n      (() => Promise.resolve({})),\n    enabled: !v3LegacyAuthProviderCompatible && !!getIdentity,\n    retry: false,\n    ...(v3LegacyAuthProviderCompatible === true ? {} : queryOptions),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible === true ? {} : queryOptions?.meta),\n      ...getXRay(\"useGetIdentity\", preferLegacyKeys),\n    },\n  });\n\n  const legacyQueryResponse = useQuery<TData>({\n    queryKey: [\n      ...keys().auth().action(\"identity\").get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    // Enabled check for `getUserIdentity` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n    queryFn: legacyGetUserIdentity ?? (() => Promise.resolve({})),\n    enabled: v3LegacyAuthProviderCompatible && !!legacyGetUserIdentity,\n    retry: false,\n    ...(v3LegacyAuthProviderCompatible ? queryOptions : {}),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible ? queryOptions?.meta : {}),\n      ...getXRay(\"useGetIdentity\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible ? legacyQueryResponse : queryResponse;\n}\n","import {\n  useMutation,\n  UseMutationOptions,\n  UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useGo, useNavigation, useNotification, useRouterType } from \"@hooks\";\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport {\n  RefineError,\n  OpenNotificationParams,\n  TLogoutData,\n} from \"../../../interfaces\";\nimport { AuthActionResponse } from \"src/interfaces/bindings/auth\";\nimport { SuccessNotificationResponse } from \"src/interfaces/bindings/auth\";\nimport { useInvalidateAuthStore } from \"../useInvalidateAuthStore\";\nimport { useKeys } from \"@hooks/useKeys\";\n\ntype Variables = {\n  redirectPath?: string | false;\n};\n\nexport type UseLogoutLegacyProps<TVariables> = {\n  v3LegacyAuthProviderCompatible: true;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      TLogoutData,\n      Error | RefineError,\n      (TVariables & Variables) | void,\n      unknown\n    >,\n    \"mutationFn\" | \"onError\" | \"onSuccess\"\n  >;\n};\n\nexport type UseLogoutProps<TVariables> = {\n  v3LegacyAuthProviderCompatible?: false;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse,\n      Error | RefineError,\n      (TVariables & Variables) | void,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseLogoutCombinedProps<TVariables> = {\n  v3LegacyAuthProviderCompatible: boolean;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse | TLogoutData,\n      Error | RefineError,\n      (TVariables & Variables) | void,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseLogoutLegacyReturnType<TVariables> = UseMutationResult<\n  TLogoutData,\n  Error | RefineError,\n  (TVariables & Variables) | void,\n  unknown\n>;\n\nexport type UseLogoutReturnType<TVariables> = UseMutationResult<\n  AuthActionResponse,\n  Error | RefineError,\n  (TVariables & Variables) | void,\n  unknown\n>;\n\nexport type UseLogoutCombinedReturnType<TVariables> = UseMutationResult<\n  AuthActionResponse | TLogoutData,\n  Error | RefineError,\n  (TVariables & Variables) | void,\n  unknown\n>;\n\nexport function useLogout<TVariables = {}>(\n  props: UseLogoutLegacyProps<TVariables>,\n): UseLogoutLegacyReturnType<TVariables>;\n\nexport function useLogout<TVariables = {}>(\n  props?: UseLogoutProps<TVariables>,\n): UseLogoutReturnType<TVariables>;\n\nexport function useLogout<TVariables = {}>(\n  props?: UseLogoutCombinedProps<TVariables>,\n): UseLogoutCombinedReturnType<TVariables>;\n\n/**\n * `useLogout` calls the `logout` method from the {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useLogout} for more details.\n *\n */\nexport function useLogout<TVariables = {}>({\n  v3LegacyAuthProviderCompatible,\n  mutationOptions,\n}: UseLogoutProps<TVariables> | UseLogoutLegacyProps<TVariables> = {}):\n  | UseLogoutLegacyReturnType<TVariables>\n  | UseLogoutReturnType<TVariables> {\n  const invalidateAuthStore = useInvalidateAuthStore();\n  const routerType = useRouterType();\n  const go = useGo();\n  const { push } = useNavigation();\n  const { open, close } = useNotification();\n  const { logout: legacyLogoutFromContext } = useLegacyAuthContext();\n  const { logout: logoutFromContext } = useAuthBindingsContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutation = useMutation<\n    AuthActionResponse,\n    Error | RefineError,\n    (TVariables & Variables) | void,\n    unknown\n  >({\n    mutationKey: keys().auth().action(\"logout\").get(preferLegacyKeys),\n    mutationFn: logoutFromContext,\n    onSuccess: async (data, variables) => {\n      const { success, error, redirectTo, successNotification } = data;\n      const { redirectPath } = variables ?? {};\n\n      const redirect = redirectPath ?? redirectTo;\n\n      if (success) {\n        close?.(\"useLogout-error\");\n\n        if (successNotification) {\n          open?.(buildSuccessNotification(successNotification));\n        }\n      }\n\n      if (error || !success) {\n        open?.(buildNotification(error));\n      }\n\n      if (redirect !== false) {\n        if (routerType === \"legacy\") {\n          push(redirect ?? \"/login\");\n        } else {\n          if (redirect) {\n            go({ to: redirect });\n          }\n        }\n      }\n\n      await invalidateAuthStore();\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions?.meta),\n      ...getXRay(\"useLogout\", preferLegacyKeys),\n    },\n  });\n\n  const v3LegacyAuthProviderCompatibleMutation = useMutation<\n    TLogoutData,\n    Error | RefineError,\n    (TVariables & Variables) | void,\n    unknown\n  >({\n    mutationKey: [\n      ...keys().auth().action(\"logout\").get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    mutationFn: legacyLogoutFromContext,\n    onSuccess: async (data, variables) => {\n      const redirectPath = variables?.redirectPath ?? data;\n\n      if (redirectPath === false) {\n        return;\n      }\n\n      if (redirectPath) {\n        if (routerType === \"legacy\") {\n          push(redirectPath);\n        } else {\n          go({ to: redirectPath });\n        }\n        return;\n      }\n\n      if (routerType === \"legacy\") {\n        push(\"/login\");\n      } else {\n        go({ to: \"/login\" });\n      }\n\n      await invalidateAuthStore();\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible ? mutationOptions?.meta : {}),\n      ...getXRay(\"useLogout\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible\n    ? v3LegacyAuthProviderCompatibleMutation\n    : mutation;\n}\n\nconst buildNotification = (\n  error?: Error | RefineError,\n): OpenNotificationParams => {\n  return {\n    key: \"useLogout-error\",\n    type: \"error\",\n    message: error?.name || \"Logout Error\",\n    description: error?.message || \"Something went wrong during logout\",\n  };\n};\n\nconst buildSuccessNotification = (\n  successNotification: SuccessNotificationResponse,\n): OpenNotificationParams => {\n  return {\n    message: successNotification.message,\n    description: successNotification.description,\n    key: \"logout-success\",\n    type: \"success\",\n  };\n};\n","import { useKeys } from \"@hooks/useKeys\";\nimport { useQueryClient } from \"@tanstack/react-query\";\n\nexport const useInvalidateAuthStore = () => {\n  const queryClient = useQueryClient();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const invalidate = async () => {\n    await Promise.all(\n      ([\"check\", \"identity\", \"permissions\"] as const).map((action) =>\n        queryClient.invalidateQueries(\n          keys().auth().action(action).get(preferLegacyKeys),\n        ),\n      ),\n    );\n  };\n\n  return invalidate;\n};\n","import React from \"react\";\nimport {\n  useMutation,\n  UseMutationOptions,\n  UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport qs from \"qs\";\n\nimport {\n  useNavigation,\n  useRouterContext,\n  useNotification,\n  useRouterType,\n  useParsed,\n  useGo,\n} from \"@hooks\";\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\nimport {\n  RefineError,\n  OpenNotificationParams,\n  TLoginData,\n} from \"../../../interfaces\";\nimport { AuthActionResponse } from \"src/interfaces/bindings/auth\";\nimport { SuccessNotificationResponse } from \"src/interfaces/bindings/auth\";\nimport { useInvalidateAuthStore } from \"../useInvalidateAuthStore\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseLoginLegacyProps<TVariables> = {\n  v3LegacyAuthProviderCompatible: true;\n  mutationOptions?: Omit<\n    UseMutationOptions<TLoginData, Error | RefineError, TVariables, unknown>,\n    \"mutationFn\" | \"onError\" | \"onSuccess\"\n  >;\n};\n\nexport type UseLoginProps<TVariables> = {\n  v3LegacyAuthProviderCompatible?: false;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseLoginCombinedProps<TVariables> = {\n  v3LegacyAuthProviderCompatible: boolean;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse | TLoginData,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseLoginLegacyReturnType<TVariables> = UseMutationResult<\n  TLoginData,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport type UseLoginReturnType<TVariables> = UseMutationResult<\n  AuthActionResponse,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport type UseLoginCombinedReturnType<TVariables> = UseMutationResult<\n  AuthActionResponse | TLoginData,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport function useLogin<TVariables = {}>(\n  props: UseLoginLegacyProps<TVariables>,\n): UseLoginLegacyReturnType<TVariables>;\n\nexport function useLogin<TVariables = {}>(\n  props?: UseLoginProps<TVariables>,\n): UseLoginReturnType<TVariables>;\n\nexport function useLogin<TVariables = {}>(\n  props?: UseLoginCombinedProps<TVariables>,\n): UseLoginCombinedReturnType<TVariables>;\n\n/**\n * `useLogin` calls `login` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useLogin} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useLogin<TVariables = {}>({\n  v3LegacyAuthProviderCompatible,\n  mutationOptions,\n}: UseLoginProps<TVariables> | UseLoginLegacyProps<TVariables> = {}):\n  | UseLoginLegacyReturnType<TVariables>\n  | UseLoginReturnType<TVariables> {\n  const invalidateAuthStore = useInvalidateAuthStore();\n  const routerType = useRouterType();\n\n  const go = useGo();\n  const { replace } = useNavigation();\n\n  const parsed = useParsed();\n\n  const { useLocation } = useRouterContext();\n  const { search } = useLocation();\n\n  const { close, open } = useNotification();\n  const { login: legacyLoginFromContext } = useLegacyAuthContext();\n  const { login: loginFromContext } = useAuthBindingsContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const to = React.useMemo(() => {\n    if (routerType === \"legacy\") {\n      const legacySearch = qs.parse(search, {\n        ignoreQueryPrefix: true,\n      });\n      return legacySearch.to;\n    }\n    return parsed.params?.to;\n  }, [routerType, parsed.params, search]);\n\n  const mutation = useMutation<\n    AuthActionResponse,\n    Error | RefineError,\n    TVariables,\n    unknown\n  >({\n    mutationKey: keys().auth().action(\"login\").get(preferLegacyKeys),\n    mutationFn: loginFromContext,\n    onSuccess: async ({ success, redirectTo, error, successNotification }) => {\n      if (success) {\n        close?.(\"login-error\");\n\n        if (successNotification) {\n          open?.(buildSuccessNotification(successNotification));\n        }\n      }\n\n      if (error || !success) {\n        open?.(buildNotification(error));\n      }\n\n      if (to && success) {\n        if (routerType === \"legacy\") {\n          replace(to as string);\n        } else {\n          go({ to: to as string, type: \"replace\" });\n        }\n      } else if (redirectTo) {\n        if (routerType === \"legacy\") {\n          replace(redirectTo);\n        } else {\n          go({ to: redirectTo, type: \"replace\" });\n        }\n      } else {\n        if (routerType === \"legacy\") {\n          replace(\"/\");\n        }\n      }\n\n      await invalidateAuthStore();\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions?.meta),\n      ...getXRay(\"useLogin\", preferLegacyKeys),\n    },\n  });\n\n  const v3LegacyAuthProviderCompatibleMutation = useMutation<\n    TLoginData,\n    Error | RefineError,\n    TVariables,\n    unknown\n  >({\n    mutationKey: [\n      ...keys().auth().action(\"login\").get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    mutationFn: legacyLoginFromContext,\n    onSuccess: async (redirectPathFromAuth) => {\n      if (to) {\n        replace(to as string);\n      }\n\n      if (redirectPathFromAuth !== false && !to) {\n        if (typeof redirectPathFromAuth === \"string\") {\n          if (routerType === \"legacy\") {\n            replace(redirectPathFromAuth);\n          } else {\n            go({ to: redirectPathFromAuth, type: \"replace\" });\n          }\n        } else {\n          if (routerType === \"legacy\") {\n            replace(\"/\");\n          } else {\n            go({ to: \"/\", type: \"replace\" });\n          }\n        }\n      }\n\n      await invalidateAuthStore();\n\n      close?.(\"login-error\");\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible ? mutationOptions?.meta : {}),\n      ...getXRay(\"useLogin\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible\n    ? v3LegacyAuthProviderCompatibleMutation\n    : mutation;\n}\n\nconst buildNotification = (\n  error?: Error | RefineError,\n): OpenNotificationParams => {\n  return {\n    message: error?.name || \"Login Error\",\n    description: error?.message || \"Invalid credentials\",\n    key: \"login-error\",\n    type: \"error\",\n  };\n};\n\nconst buildSuccessNotification = (\n  successNotification: SuccessNotificationResponse,\n): OpenNotificationParams => {\n  return {\n    message: successNotification.message,\n    description: successNotification.description,\n    key: \"login-success\",\n    type: \"success\",\n  };\n};\n","import {\n  useMutation,\n  UseMutationOptions,\n  UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useNavigation, useRouterType, useGo, useNotification } from \"@hooks\";\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { SuccessNotificationResponse } from \"src/interfaces/bindings/auth\";\n\nimport {\n  AuthActionResponse,\n  RefineError,\n  OpenNotificationParams,\n  TLoginData,\n  TRegisterData,\n} from \"../../../interfaces\";\nimport { useInvalidateAuthStore } from \"../useInvalidateAuthStore\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseRegisterLegacyProps<TVariables> = {\n  v3LegacyAuthProviderCompatible: true;\n  mutationOptions?: Omit<\n    UseMutationOptions<TRegisterData, Error | RefineError, TVariables, unknown>,\n    \"mutationFn\" | \"onError\" | \"onSuccess\"\n  >;\n};\n\nexport type UseRegisterProps<TVariables> = {\n  v3LegacyAuthProviderCompatible?: false;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseRegisterCombinedProps<TVariables> = {\n  v3LegacyAuthProviderCompatible: boolean;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse | TRegisterData,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseRegisterLegacyReturnType<TVariables> = UseMutationResult<\n  TRegisterData,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport type UseRegisterReturnType<TVariables> = UseMutationResult<\n  AuthActionResponse,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport type UseRegisterCombinedReturnType<TVariables> = UseMutationResult<\n  AuthActionResponse | TLoginData,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport function useRegister<TVariables = {}>(\n  props: UseRegisterLegacyProps<TVariables>,\n): UseRegisterLegacyReturnType<TVariables>;\n\nexport function useRegister<TVariables = {}>(\n  props?: UseRegisterProps<TVariables>,\n): UseRegisterReturnType<TVariables>;\n\nexport function useRegister<TVariables = {}>(\n  props?: UseRegisterCombinedProps<TVariables>,\n): UseRegisterCombinedReturnType<TVariables>;\n\n/**\n * `useRegister` calls `register` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useRegister} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useRegister<TVariables = {}>({\n  v3LegacyAuthProviderCompatible,\n  mutationOptions,\n}: UseRegisterProps<TVariables> | UseRegisterLegacyProps<TVariables> = {}):\n  | UseRegisterReturnType<TVariables>\n  | UseRegisterLegacyReturnType<TVariables> {\n  const invalidateAuthStore = useInvalidateAuthStore();\n  const routerType = useRouterType();\n  const go = useGo();\n  const { replace } = useNavigation();\n  const { register: legacyRegisterFromContext } = useLegacyAuthContext();\n  const { register: registerFromContext } = useAuthBindingsContext();\n  const { close, open } = useNotification();\n\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutation = useMutation<\n    AuthActionResponse,\n    Error | RefineError,\n    TVariables,\n    unknown\n  >({\n    mutationKey: keys().auth().action(\"register\").get(preferLegacyKeys),\n    mutationFn: registerFromContext,\n    onSuccess: async ({ success, redirectTo, error, successNotification }) => {\n      if (success) {\n        close?.(\"register-error\");\n\n        if (successNotification) {\n          open?.(buildSuccessNotification(successNotification));\n        }\n      }\n\n      if (error || !success) {\n        open?.(buildNotification(error));\n      }\n\n      if (redirectTo) {\n        if (routerType === \"legacy\") {\n          replace(redirectTo);\n        } else {\n          go({ to: redirectTo, type: \"replace\" });\n        }\n      } else {\n        if (routerType === \"legacy\") {\n          replace(\"/\");\n        }\n      }\n\n      await invalidateAuthStore();\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions?.meta),\n      ...getXRay(\"useRegister\", preferLegacyKeys),\n    },\n  });\n\n  const v3LegacyAuthProviderCompatibleMutation = useMutation<\n    TRegisterData,\n    Error | RefineError,\n    TVariables,\n    unknown\n  >({\n    mutationKey: [\n      ...keys().auth().action(\"register\").get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    mutationFn: legacyRegisterFromContext,\n    onSuccess: async (redirectPathFromAuth) => {\n      if (redirectPathFromAuth !== false) {\n        if (redirectPathFromAuth) {\n          if (routerType === \"legacy\") {\n            replace(redirectPathFromAuth);\n          } else {\n            go({ to: redirectPathFromAuth, type: \"replace\" });\n          }\n        } else {\n          if (routerType === \"legacy\") {\n            replace(\"/\");\n          } else {\n            go({ to: \"/\", type: \"replace\" });\n          }\n        }\n\n        await invalidateAuthStore();\n\n        close?.(\"register-error\");\n      }\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible ? mutationOptions?.meta : {}),\n      ...getXRay(\"useRegister\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible\n    ? v3LegacyAuthProviderCompatibleMutation\n    : mutation;\n}\n\nconst buildNotification = (\n  error?: Error | RefineError,\n): OpenNotificationParams => {\n  return {\n    message: error?.name || \"Register Error\",\n    description: error?.message || \"Error while registering\",\n    key: \"register-error\",\n    type: \"error\",\n  };\n};\n\nconst buildSuccessNotification = (\n  successNotification: SuccessNotificationResponse,\n): OpenNotificationParams => {\n  return {\n    message: successNotification.message,\n    description: successNotification.description,\n    key: \"register-success\",\n    type: \"success\",\n  };\n};\n","import {\n  useMutation,\n  UseMutationOptions,\n  UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useGo, useNavigation, useNotification, useRouterType } from \"@hooks\";\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { SuccessNotificationResponse } from \"src/interfaces/bindings/auth\";\n\nimport {\n  AuthActionResponse,\n  RefineError,\n  OpenNotificationParams,\n  TForgotPasswordData,\n} from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseForgotPasswordLegacyProps<TVariables> = {\n  v3LegacyAuthProviderCompatible: true;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      TForgotPasswordData,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\" | \"onError\" | \"onSuccess\"\n  >;\n};\n\nexport type UseForgotPasswordProps<TVariables> = {\n  v3LegacyAuthProviderCompatible?: false;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseForgotPasswordCombinedProps<TVariables> = {\n  v3LegacyAuthProviderCompatible: boolean;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse | TForgotPasswordData,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseForgotPasswordLegacyReturnType<TVariables> = UseMutationResult<\n  TForgotPasswordData,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport type UseForgotPasswordReturnType<TVariables> = UseMutationResult<\n  AuthActionResponse,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport type UseForgotPasswordCombinedReturnType<TVariables> = UseMutationResult<\n  AuthActionResponse | TForgotPasswordData,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport function useForgotPassword<TVariables = {}>(\n  props: UseForgotPasswordLegacyProps<TVariables>,\n): UseForgotPasswordLegacyReturnType<TVariables>;\n\nexport function useForgotPassword<TVariables = {}>(\n  props?: UseForgotPasswordProps<TVariables>,\n): UseForgotPasswordReturnType<TVariables>;\n\nexport function useForgotPassword<TVariables = {}>(\n  props?: UseForgotPasswordCombinedProps<TVariables>,\n): UseForgotPasswordCombinedReturnType<TVariables>;\n\n/**\n * `useForgotPassword` calls `forgotPassword` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useForgotPassword} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useForgotPassword<TVariables = {}>({\n  v3LegacyAuthProviderCompatible,\n  mutationOptions,\n}:\n  | UseForgotPasswordProps<TVariables>\n  | UseForgotPasswordLegacyProps<TVariables> = {}):\n  | UseForgotPasswordReturnType<TVariables>\n  | UseForgotPasswordLegacyReturnType<TVariables> {\n  const routerType = useRouterType();\n  const go = useGo();\n  const { replace } = useNavigation();\n  const {\n    forgotPassword: v3LegacyAuthProviderCompatibleForgotPasswordFromContext,\n  } = useLegacyAuthContext();\n  const { forgotPassword: forgotPasswordFromContext } =\n    useAuthBindingsContext();\n  const { close, open } = useNotification();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutation = useMutation<\n    AuthActionResponse,\n    Error | RefineError,\n    TVariables,\n    unknown\n  >({\n    mutationKey: keys().auth().action(\"forgotPassword\").get(preferLegacyKeys),\n    mutationFn: forgotPasswordFromContext,\n    onSuccess: ({ success, redirectTo, error, successNotification }) => {\n      if (success) {\n        close?.(\"forgot-password-error\");\n\n        if (successNotification) {\n          open?.(buildSuccessNotification(successNotification));\n        }\n      }\n\n      if (error || !success) {\n        open?.(buildNotification(error));\n      }\n\n      if (redirectTo) {\n        if (routerType === \"legacy\") {\n          replace(redirectTo);\n        } else {\n          go({ to: redirectTo, type: \"replace\" });\n        }\n      }\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions?.meta),\n      ...getXRay(\"useForgotPassword\", preferLegacyKeys),\n    },\n  });\n\n  const v3LegacyAuthProviderCompatibleMutation = useMutation<\n    TForgotPasswordData,\n    Error | RefineError,\n    TVariables,\n    unknown\n  >({\n    mutationKey: [\n      ...keys().auth().action(\"forgotPassword\").get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    mutationFn: v3LegacyAuthProviderCompatibleForgotPasswordFromContext,\n    onSuccess: (redirectPathFromAuth) => {\n      if (redirectPathFromAuth !== false) {\n        if (redirectPathFromAuth) {\n          if (routerType === \"legacy\") {\n            replace(redirectPathFromAuth);\n          } else {\n            go({ to: redirectPathFromAuth, type: \"replace\" });\n          }\n        }\n      }\n      close?.(\"forgot-password-error\");\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible ? mutationOptions?.meta : {}),\n      ...getXRay(\"useForgotPassword\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible\n    ? v3LegacyAuthProviderCompatibleMutation\n    : mutation;\n}\n\nconst buildNotification = (\n  error?: Error | RefineError,\n): OpenNotificationParams => {\n  return {\n    message: error?.name || \"Forgot Password Error\",\n    description: error?.message || \"Error while resetting password\",\n    key: \"forgot-password-error\",\n    type: \"error\",\n  };\n};\n\nconst buildSuccessNotification = (\n  successNotification: SuccessNotificationResponse,\n): OpenNotificationParams => {\n  return {\n    message: successNotification.message,\n    description: successNotification.description,\n    key: \"forgot-password-success\",\n    type: \"success\",\n  };\n};\n","import React from \"react\";\nimport {\n  useMutation,\n  UseMutationOptions,\n  UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport qs from \"qs\";\n\nimport {\n  useNavigation,\n  useRouterType,\n  useGo,\n  useParsed,\n  useNotification,\n  useRouterContext,\n} from \"@hooks\";\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { SuccessNotificationResponse } from \"src/interfaces/bindings/auth\";\nimport {\n  AuthActionResponse,\n  RefineError,\n  OpenNotificationParams,\n  TUpdatePasswordData,\n  UpdatePasswordFormTypes,\n} from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseUpdatePasswordLegacyProps<\n  TVariables extends UpdatePasswordFormTypes,\n> = {\n  v3LegacyAuthProviderCompatible: true;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      TUpdatePasswordData,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\" | \"onError\" | \"onSuccess\"\n  >;\n};\n\nexport type UseUpdatePasswordProps<TVariables extends UpdatePasswordFormTypes> =\n  {\n    v3LegacyAuthProviderCompatible?: false;\n    mutationOptions?: Omit<\n      UseMutationOptions<\n        AuthActionResponse,\n        Error | RefineError,\n        TVariables,\n        unknown\n      >,\n      \"mutationFn\"\n    >;\n  };\n\nexport type UseUpdatePasswordCombinedProps<\n  TVariables extends UpdatePasswordFormTypes,\n> = {\n  v3LegacyAuthProviderCompatible: boolean;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse | TUpdatePasswordData,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseUpdatePasswordLegacyReturnType<\n  TVariables extends UpdatePasswordFormTypes,\n> = UseMutationResult<\n  TUpdatePasswordData,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport type UseUpdatePasswordReturnType<\n  TVariables extends UpdatePasswordFormTypes,\n> = UseMutationResult<\n  AuthActionResponse,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport type UseUpdatePasswordCombinedReturnType<\n  TVariables extends UpdatePasswordFormTypes,\n> = UseMutationResult<\n  AuthActionResponse | TUpdatePasswordData,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport function useUpdatePassword<TVariables extends UpdatePasswordFormTypes>(\n  props: UseUpdatePasswordLegacyProps<TVariables>,\n): UseUpdatePasswordLegacyReturnType<TVariables>;\n\nexport function useUpdatePassword<TVariables extends UpdatePasswordFormTypes>(\n  props?: UseUpdatePasswordProps<TVariables>,\n): UseUpdatePasswordReturnType<TVariables>;\n\nexport function useUpdatePassword<TVariables extends UpdatePasswordFormTypes>(\n  props?: UseUpdatePasswordCombinedProps<TVariables>,\n): UseUpdatePasswordCombinedReturnType<TVariables>;\n\n/**\n * `useUpdatePassword` calls `updatePassword` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useUpdatePassword} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useUpdatePassword<\n  TVariables extends UpdatePasswordFormTypes = {},\n>({\n  v3LegacyAuthProviderCompatible,\n  mutationOptions,\n}:\n  | UseUpdatePasswordProps<TVariables>\n  | UseUpdatePasswordLegacyProps<TVariables> = {}):\n  | UseUpdatePasswordReturnType<TVariables>\n  | UseUpdatePasswordLegacyReturnType<TVariables> {\n  const routerType = useRouterType();\n\n  const go = useGo();\n  const { replace } = useNavigation();\n  const { updatePassword: legacyUpdatePasswordFromContext } =\n    useLegacyAuthContext();\n  const { updatePassword: updatePasswordFromContext } =\n    useAuthBindingsContext();\n  const { close, open } = useNotification();\n\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const parsed = useParsed();\n  const { useLocation } = useRouterContext();\n  const { search } = useLocation();\n\n  const params = React.useMemo(() => {\n    if (routerType === \"legacy\") {\n      const queryStrings = qs.parse(search, {\n        ignoreQueryPrefix: true,\n      });\n      return queryStrings ?? {};\n    }\n    return parsed.params ?? {};\n  }, [search, parsed, routerType]);\n\n  const mutation = useMutation<AuthActionResponse, Error, TVariables, unknown>({\n    mutationKey: keys().auth().action(\"updatePassword\").get(preferLegacyKeys),\n    mutationFn: async (variables) => {\n      return updatePasswordFromContext?.({\n        ...params,\n        ...variables,\n      }) as Promise<AuthActionResponse>;\n    },\n    onSuccess: ({ success, redirectTo, error, successNotification }) => {\n      if (success) {\n        close?.(\"update-password-error\");\n\n        if (successNotification) {\n          open?.(buildSuccessNotification(successNotification));\n        }\n      }\n\n      if (error || !success) {\n        open?.(buildNotification(error));\n      }\n\n      if (redirectTo) {\n        if (routerType === \"legacy\") {\n          replace(redirectTo);\n        } else {\n          go({ to: redirectTo, type: \"replace\" });\n        }\n      }\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions?.meta),\n      ...getXRay(\"useUpdatePassword\", preferLegacyKeys),\n    },\n  });\n\n  const v3LegacyAuthProviderCompatibleMutation = useMutation<\n    TUpdatePasswordData,\n    Error | RefineError,\n    TVariables,\n    unknown\n  >({\n    mutationKey: [\n      ...keys().auth().action(\"updatePassword\").get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    mutationFn: async (variables) => {\n      return legacyUpdatePasswordFromContext?.({\n        ...params,\n        ...variables,\n      });\n    },\n    onSuccess: (redirectPathFromAuth) => {\n      if (redirectPathFromAuth !== false) {\n        if (redirectPathFromAuth) {\n          if (routerType === \"legacy\") {\n            replace(redirectPathFromAuth);\n          } else {\n            go({ to: redirectPathFromAuth, type: \"replace\" });\n          }\n        }\n      }\n      close?.(\"update-password-error\");\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible ? mutationOptions?.meta : {}),\n      ...getXRay(\"useUpdatePassword\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible\n    ? v3LegacyAuthProviderCompatibleMutation\n    : mutation;\n}\n\nconst buildNotification = (\n  error?: Error | RefineError,\n): OpenNotificationParams => {\n  return {\n    message: error?.name || \"Update Password Error\",\n    description: error?.message || \"Error while updating password\",\n    key: \"update-password-error\",\n    type: \"error\",\n  };\n};\n\nconst buildSuccessNotification = (\n  successNotification: SuccessNotificationResponse,\n): OpenNotificationParams => {\n  return {\n    message: successNotification.message,\n    description: successNotification.description,\n    key: \"update-password-success\",\n    type: \"success\",\n  };\n};\n","import { useQuery, UseQueryResult } from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { CheckResponse } from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseIsAuthenticatedLegacyProps = {\n  v3LegacyAuthProviderCompatible: true;\n  params?: any;\n};\n\nexport type UseIsAuthenticatedProps = {\n  v3LegacyAuthProviderCompatible?: false;\n  params?: any;\n};\n\nexport type UseIsAuthenticatedCombinedProps = {\n  v3LegacyAuthProviderCompatible: boolean;\n  params?: any;\n};\n\nexport type UseIsAuthenticatedLegacyReturnType = UseQueryResult<any, any>;\n\nexport type UseIsAuthenticatedReturnType = UseQueryResult<CheckResponse, any>;\n\nexport type UseIsAuthenticatedCombinedReturnType = UseQueryResult<\n  CheckResponse | any,\n  any\n>;\n\nexport function useIsAuthenticated(\n  props: UseIsAuthenticatedLegacyProps,\n): UseIsAuthenticatedLegacyReturnType;\n\nexport function useIsAuthenticated(\n  props?: UseIsAuthenticatedProps,\n): UseIsAuthenticatedReturnType;\n\nexport function useIsAuthenticated(\n  props?: UseIsAuthenticatedCombinedProps,\n): UseIsAuthenticatedCombinedReturnType;\n\n/**\n *  `useIsAuthenticated` calls the `checkAuth` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useAuthenticated} for more details.\n */\nexport function useIsAuthenticated({\n  v3LegacyAuthProviderCompatible = false,\n  params,\n}: UseIsAuthenticatedProps | UseIsAuthenticatedLegacyProps = {}):\n  | UseIsAuthenticatedReturnType\n  | UseIsAuthenticatedLegacyReturnType {\n  const { checkAuth } = useLegacyAuthContext();\n  const { check } = useAuthBindingsContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const queryResponse = useQuery({\n    queryKey: keys()\n      .auth()\n      .action(\"check\")\n      .params(params)\n      .get(preferLegacyKeys),\n    queryFn: async () => (await check?.(params)) ?? {},\n    retry: false,\n    enabled: !v3LegacyAuthProviderCompatible,\n    meta: {\n      ...getXRay(\"useIsAuthenticated\", preferLegacyKeys),\n    },\n  });\n\n  const legacyQueryResponse = useQuery({\n    queryKey: [\n      ...keys().auth().action(\"check\").params(params).get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    queryFn: async () => (await checkAuth?.(params)) ?? {},\n    retry: false,\n    enabled: v3LegacyAuthProviderCompatible,\n    meta: {\n      ...getXRay(\"useIsAuthenticated\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible ? legacyQueryResponse : queryResponse;\n}\n\n/**\n * @deprecated `useAuthenticated` is deprecated with refine@4, use `useIsAuthenticated` instead, however, we still support `useAuthenticated` for backward compatibility.\n */\nexport const useAuthenticated = useIsAuthenticated;\n","import { useMutation, UseMutationResult } from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { OnErrorResponse } from \"../../../interfaces\";\nimport { useGo, useLogout, useNavigation, useRouterType } from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseOnErrorLegacyProps = {\n  v3LegacyAuthProviderCompatible: true;\n};\n\nexport type UseOnErrorProps = {\n  v3LegacyAuthProviderCompatible?: false;\n};\n\nexport type UseOnErrorCombinedProps = {\n  v3LegacyAuthProviderCompatible: boolean;\n};\n\nexport type UseOnErrorLegacyReturnType = UseMutationResult<\n  void,\n  string | undefined,\n  any,\n  unknown\n>;\n\nexport type UseOnErrorReturnType = UseMutationResult<\n  OnErrorResponse,\n  unknown,\n  unknown,\n  unknown\n>;\nexport type UseOnErrorCombinedReturnType = UseMutationResult<\n  OnErrorResponse | void,\n  unknown,\n  unknown,\n  unknown\n>;\n\nexport function useOnError(\n  props: UseOnErrorLegacyProps,\n): UseOnErrorLegacyReturnType;\n\nexport function useOnError(props?: UseOnErrorProps): UseOnErrorReturnType;\n\nexport function useOnError(\n  props?: UseOnErrorCombinedProps,\n): UseOnErrorCombinedReturnType;\n\n/**\n * `useOnError` calls the `checkError` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useCheckError} for more details.\n *\n */\nexport function useOnError({\n  v3LegacyAuthProviderCompatible = false,\n}: UseOnErrorProps | UseOnErrorLegacyProps = {}):\n  | UseOnErrorReturnType\n  | UseOnErrorLegacyReturnType {\n  const routerType = useRouterType();\n  const go = useGo();\n  const { replace } = useNavigation();\n\n  const { checkError: legacyCheckErrorFromContext } = useLegacyAuthContext();\n  const { onError: onErrorFromContext } = useAuthBindingsContext();\n\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const { mutate: legacyLogout } = useLogout({\n    v3LegacyAuthProviderCompatible: Boolean(v3LegacyAuthProviderCompatible),\n  });\n  const { mutate: logout } = useLogout({\n    v3LegacyAuthProviderCompatible: Boolean(v3LegacyAuthProviderCompatible),\n  });\n\n  const mutation = useMutation({\n    mutationKey: keys().auth().action(\"onError\").get(preferLegacyKeys),\n    mutationFn: onErrorFromContext,\n    onSuccess: ({ logout: shouldLogout, redirectTo }) => {\n      if (shouldLogout) {\n        logout({ redirectPath: redirectTo });\n        return;\n      }\n\n      if (redirectTo) {\n        if (routerType === \"legacy\") {\n          replace(redirectTo);\n        } else {\n          go({ to: redirectTo, type: \"replace\" });\n        }\n        return;\n      }\n    },\n    meta: {\n      ...getXRay(\"useOnError\", preferLegacyKeys),\n    },\n  });\n\n  const v3LegacyAuthProviderCompatibleMutation = useMutation({\n    mutationKey: [\n      ...keys().auth().action(\"onError\").get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    mutationFn: legacyCheckErrorFromContext,\n    onError: (redirectPath?: string) => {\n      legacyLogout({ redirectPath });\n    },\n    meta: {\n      ...getXRay(\"useOnError\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible\n    ? v3LegacyAuthProviderCompatibleMutation\n    : mutation;\n}\n\n/**\n * @deprecated `useCheckError` is deprecated with refine@4, use `useOnError` instead, however, we still support `useCheckError` for backward compatibility.\n */\nexport const useCheckError = useOnError;\n","import { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\n/**\n * A hook that the UI uses\n * @internal\n */\nexport const useIsExistAuthentication = (): boolean => {\n  const { isProvided: legacyIsProvided } = useLegacyAuthContext();\n  const { isProvided } = useAuthBindingsContext();\n\n  return Boolean(isProvided || legacyIsProvided);\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  QueryObserverResult,\n  useQuery,\n  UseQueryOptions,\n} from \"@tanstack/react-query\";\n\nimport {\n  handlePaginationParams,\n  pickDataProvider,\n  pickNotDeprecated,\n  useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n  useDataProvider,\n  useHandleNotification,\n  useMeta,\n  useOnError,\n  useResource,\n  useResourceSubscription,\n  useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n  BaseRecord,\n  CrudFilters,\n  CrudSorting,\n  GetListResponse,\n  HttpError,\n  LiveModeProps,\n  MetaQuery,\n  Pagination,\n  Prettify,\n  SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n  useLoadingOvertime,\n  UseLoadingOvertimeOptionsProps,\n  UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport interface UseListConfig {\n  pagination?: Pagination;\n  hasPagination?: boolean;\n  sort?: CrudSorting;\n  filters?: CrudFilters;\n}\n\nexport type BaseListProps = {\n  /**\n   * Configuration for pagination, sorting and filtering\n   * @type [`UseListConfig`](/docs/api-reference/core/hooks/data/useList/#config-parameters)\n   * @deprecated `config` property is deprecated. Use `pagination`, `hasPagination`, `sorters` and `filters` instead.\n   */\n  config?: UseListConfig;\n  /**\n   * Pagination properties\n   */\n  pagination?: Pagination;\n  /**\n   * Whether to use server-side pagination or not\n   * @deprecated `hasPagination` property is deprecated. Use `pagination.mode` instead.\n   */\n  hasPagination?: boolean;\n  /**\n   * Sorter parameters\n   */\n  sorters?: CrudSorting;\n  /**\n   * Filter parameters\n   */\n  filters?: CrudFilters;\n  /**\n   * Meta data query for `dataProvider`\n   */\n  meta?: MetaQuery;\n  /**\n   * Meta data query for `dataProvider`\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use\n   */\n  dataProviderName?: string;\n};\n\nexport type UseListProps<TQueryFnData, TError, TData> = {\n  /**\n   * Resource name for API data interactions\n   */\n  resource?: string;\n\n  /**\n   * Tanstack Query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n   */\n  queryOptions?: UseQueryOptions<\n    GetListResponse<TQueryFnData>,\n    TError,\n    GetListResponse<TData>\n  >;\n} & BaseListProps &\n  SuccessErrorNotification<\n    GetListResponse<TData>,\n    TError,\n    Prettify<BaseListProps>\n  > &\n  LiveModeProps &\n  UseLoadingOvertimeOptionsProps;\n\n/**\n * `useList` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for retrieving items from a `resource` with pagination, sort, and filter configurations.\n *\n * It uses the `getList` method as the query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useList} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useList = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  resource: resourceFromProp,\n  config,\n  filters,\n  hasPagination,\n  pagination,\n  sorters,\n  queryOptions,\n  successNotification,\n  errorNotification,\n  meta,\n  metaData,\n  liveMode,\n  onLiveEvent,\n  liveParams,\n  dataProviderName,\n  overtimeOptions,\n}: UseListProps<TQueryFnData, TError, TData> = {}): QueryObserverResult<\n  GetListResponse<TData>,\n  TError\n> &\n  UseLoadingOvertimeReturnType => {\n  const { resources, resource, identifier } = useResource(resourceFromProp);\n\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const handleNotification = useHandleNotification();\n  const getMeta = useMeta();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const pickedDataProvider = pickDataProvider(\n    identifier,\n    dataProviderName,\n    resources,\n  );\n  const preferredMeta = pickNotDeprecated(meta, metaData);\n  const prefferedFilters = pickNotDeprecated(filters, config?.filters);\n  const prefferedSorters = pickNotDeprecated(sorters, config?.sort);\n  const prefferedHasPagination = pickNotDeprecated(\n    hasPagination,\n    config?.hasPagination,\n  );\n  const prefferedPagination = handlePaginationParams({\n    pagination,\n    configPagination: config?.pagination,\n    hasPagination: prefferedHasPagination,\n  });\n  const isServerPagination = prefferedPagination.mode === \"server\";\n\n  const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n  const notificationValues = {\n    meta: combinedMeta,\n    metaData: combinedMeta,\n    filters: prefferedFilters,\n    hasPagination: isServerPagination,\n    pagination: prefferedPagination,\n    sorters: prefferedSorters,\n    config: {\n      ...config,\n      sort: prefferedSorters,\n    },\n  };\n\n  const isEnabled =\n    queryOptions?.enabled === undefined || queryOptions?.enabled === true;\n\n  const { getList } = dataProvider(pickedDataProvider);\n\n  useResourceSubscription({\n    resource: identifier,\n    types: [\"*\"],\n    params: {\n      meta: combinedMeta,\n      metaData: combinedMeta,\n      pagination: prefferedPagination,\n      hasPagination: isServerPagination,\n      sort: prefferedSorters,\n      sorters: prefferedSorters,\n      filters: prefferedFilters,\n      subscriptionType: \"useList\",\n      ...liveParams,\n    },\n    channel: `resources/${resource?.name}`,\n    enabled: isEnabled,\n    liveMode,\n    onLiveEvent,\n    dataProviderName: pickedDataProvider,\n    meta: {\n      ...meta,\n      dataProviderName,\n    },\n  });\n\n  const queryResponse = useQuery<\n    GetListResponse<TQueryFnData>,\n    TError,\n    GetListResponse<TData>\n  >({\n    queryKey: keys()\n      .data(pickedDataProvider)\n      .resource(identifier ?? \"\")\n      .action(\"list\")\n      .params({\n        ...(preferredMeta || {}),\n        filters: prefferedFilters,\n        hasPagination: isServerPagination,\n        ...(isServerPagination && {\n          pagination: prefferedPagination,\n        }),\n        ...(sorters && {\n          sorters,\n        }),\n        ...(config?.sort && {\n          sort: config?.sort,\n        }),\n      })\n      .get(preferLegacyKeys),\n    queryFn: ({ queryKey, pageParam, signal }) => {\n      return getList<TQueryFnData>({\n        resource: resource?.name ?? \"\",\n        pagination: prefferedPagination,\n        hasPagination: isServerPagination,\n        filters: prefferedFilters,\n        sort: prefferedSorters,\n        sorters: prefferedSorters,\n        meta: {\n          ...combinedMeta,\n          queryContext: {\n            queryKey,\n            pageParam,\n            signal,\n          },\n        },\n        metaData: {\n          ...combinedMeta,\n          queryContext: {\n            queryKey,\n            pageParam,\n            signal,\n          },\n        },\n      });\n    },\n    ...queryOptions,\n    enabled:\n      typeof queryOptions?.enabled !== \"undefined\"\n        ? queryOptions?.enabled\n        : !!resource?.name,\n    select: (rawData) => {\n      let data = rawData;\n\n      const { current, mode, pageSize } = prefferedPagination;\n\n      if (mode === \"client\") {\n        data = {\n          ...data,\n          data: data.data.slice((current - 1) * pageSize, current * pageSize),\n          total: data.total,\n        };\n      }\n\n      if (queryOptions?.select) {\n        return queryOptions?.select?.(data);\n      }\n\n      return data as unknown as GetListResponse<TData>;\n    },\n    onSuccess: (data) => {\n      queryOptions?.onSuccess?.(data);\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(data, notificationValues, identifier)\n          : successNotification;\n\n      handleNotification(notificationConfig);\n    },\n    onError: (err: TError) => {\n      checkError(err);\n      queryOptions?.onError?.(err);\n\n      const notificationConfig =\n        typeof errorNotification === \"function\"\n          ? errorNotification(err, notificationValues, identifier)\n          : errorNotification;\n\n      handleNotification(notificationConfig, {\n        key: `${identifier}-useList-notification`,\n        message: translate(\n          \"notifications.error\",\n          { statusCode: err.statusCode },\n          `Error (status code: ${err.statusCode})`,\n        ),\n        description: err.message,\n        type: \"error\",\n      });\n    },\n    meta: {\n      ...queryOptions?.meta,\n      ...getXRay(\"useList\", preferLegacyKeys),\n    },\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: queryResponse.isFetching,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  return { ...queryResponse, overtime: { elapsedTime } };\n};\n","import { useEffect, useState } from \"react\";\nimport { useRefineContext } from \"..\";\n\nexport type UseLoadingOvertimeRefineContext = Omit<\n  UseLoadingOvertimeCoreProps,\n  \"isLoading\" | \"interval\"\n> &\n  Required<Pick<UseLoadingOvertimeCoreProps, \"interval\">>;\n\nexport type UseLoadingOvertimeOptionsProps = {\n  overtimeOptions?: UseLoadingOvertimeCoreOptions;\n};\n\nexport type UseLoadingOvertimeReturnType = {\n  overtime: {\n    elapsedTime?: number;\n  };\n};\n\ntype UseLoadingOvertimeCoreOptions = Omit<\n  UseLoadingOvertimeCoreProps,\n  \"isLoading\"\n>;\n\ntype UseLoadingOvertimeCoreReturnType = {\n  elapsedTime?: number;\n};\n\nexport type UseLoadingOvertimeCoreProps = {\n  /**\n   * The loading state. If true, the elapsed time will be calculated.\n   */\n  isLoading: boolean;\n\n  /**\n   * The interval in milliseconds. If the loading time exceeds this time, the `onInterval` callback will be called.\n   * If not specified, the `interval` value from the `overtime` option of the `RefineProvider` will be used.\n   *\n   * @default: 1000 (1 second)\n   */\n  interval?: number;\n\n  /**\n   * The callback function that will be called when the loading time exceeds the specified time.\n   * If not specified, the `onInterval` value from the `overtime` option of the `RefineProvider` will be used.\n   *\n   * @param elapsedInterval The elapsed time in milliseconds.\n   */\n  onInterval?: (elapsedInterval: number) => void;\n};\n\n/**\n * if you need to do something when the loading time exceeds the specified time, refine provides the `useLoadingOvertime` hook.\n * It returns the elapsed time in milliseconds.\n *\n * @example\n * const { elapsedTime } = useLoadingOvertime({\n *    isLoading,\n *    interval: 1000,\n *    onInterval(elapsedInterval) {\n *        console.log(\"loading overtime\", elapsedInterval);\n *    },\n * });\n */\nexport const useLoadingOvertime = ({\n  isLoading,\n  interval: intervalProp,\n  onInterval: onIntervalProp,\n}: UseLoadingOvertimeCoreProps): UseLoadingOvertimeCoreReturnType => {\n  const [elapsedTime, setElapsedTime] = useState<number | undefined>(undefined);\n  // get overtime options from refine context\n  const { options } = useRefineContext();\n  const { overtime } = options;\n\n  // pick props or refine context options\n  const interval = intervalProp ?? overtime.interval;\n  const onInterval = onIntervalProp ?? overtime?.onInterval;\n\n  useEffect(() => {\n    let intervalFn: ReturnType<typeof setInterval>;\n\n    if (isLoading) {\n      intervalFn = setInterval(() => {\n        // increase elapsed time\n        setElapsedTime((prevElapsedTime) => {\n          if (prevElapsedTime === undefined) {\n            return interval;\n          }\n\n          return prevElapsedTime + interval;\n        });\n      }, interval);\n    }\n\n    return () => {\n      clearInterval(intervalFn);\n      // reset elapsed time\n      setElapsedTime(undefined);\n    };\n  }, [isLoading, interval]);\n\n  useEffect(() => {\n    // call onInterval callback\n    if (onInterval && elapsedTime) {\n      onInterval(elapsedTime);\n    }\n  }, [elapsedTime]);\n\n  return {\n    elapsedTime,\n  };\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  QueryObserverResult,\n  useQuery,\n  UseQueryOptions,\n} from \"@tanstack/react-query\";\n\nimport {\n  pickDataProvider,\n  pickNotDeprecated,\n  useActiveAuthProvider,\n} from \"@definitions\";\nimport {\n  useDataProvider,\n  useHandleNotification,\n  useMeta,\n  useOnError,\n  useResource,\n  useResourceSubscription,\n  useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n  BaseKey,\n  BaseRecord,\n  GetOneResponse,\n  HttpError,\n  LiveModeProps,\n  MetaQuery,\n  Prettify,\n  SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n  useLoadingOvertime,\n  UseLoadingOvertimeOptionsProps,\n  UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type UseOneProps<TQueryFnData, TError, TData> = {\n  /**\n   * Resource name for API data interactions\n   */\n  resource?: string;\n  /**\n   * id of the item in the resource\n   * @type [`BaseKey`](/docs/api-reference/core/interfaceReferences/#basekey)\n   */\n  id?: BaseKey;\n  /**\n   * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n   */\n  queryOptions?: UseQueryOptions<\n    GetOneResponse<TQueryFnData>,\n    TError,\n    GetOneResponse<TData>\n  >;\n  /**\n   * Metadata query for `dataProvider`,\n   */\n  meta?: MetaQuery;\n  /**\n   * Meta data query for `dataProvider`,\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   * @default `\"default\"``\n   */\n  dataProviderName?: string;\n} & SuccessErrorNotification<\n  GetOneResponse<TData>,\n  TError,\n  Prettify<{ id?: BaseKey } & MetaQuery>\n> &\n  LiveModeProps &\n  UseLoadingOvertimeOptionsProps;\n\n/**\n * `useOne` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for retrieving single items from a `resource`.\n *\n * It uses `getOne` method as query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useOne} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useOne = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  resource: resourceFromProp,\n  id,\n  queryOptions,\n  successNotification,\n  errorNotification,\n  meta,\n  metaData,\n  liveMode,\n  onLiveEvent,\n  liveParams,\n  dataProviderName,\n  overtimeOptions,\n}: UseOneProps<TQueryFnData, TError, TData>): QueryObserverResult<\n  GetOneResponse<TData>,\n  TError\n> &\n  UseLoadingOvertimeReturnType => {\n  const { resources, resource, identifier } = useResource(resourceFromProp);\n\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const handleNotification = useHandleNotification();\n  const getMeta = useMeta();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const preferredMeta = pickNotDeprecated(meta, metaData);\n  const pickedDataProvider = pickDataProvider(\n    identifier,\n    dataProviderName,\n    resources,\n  );\n\n  const { getOne } = dataProvider(pickedDataProvider);\n\n  const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n  useResourceSubscription({\n    resource: identifier,\n    types: [\"*\"],\n    channel: `resources/${resource?.name}`,\n    params: {\n      ids: id ? [id] : [],\n      id: id,\n      meta: combinedMeta,\n      metaData: combinedMeta,\n      subscriptionType: \"useOne\",\n      ...liveParams,\n    },\n    enabled:\n      typeof queryOptions?.enabled !== \"undefined\"\n        ? queryOptions?.enabled\n        : typeof resource?.name !== \"undefined\" && typeof id !== \"undefined\",\n    liveMode,\n    onLiveEvent,\n    dataProviderName: pickedDataProvider,\n    meta: {\n      ...meta,\n      dataProviderName,\n    },\n  });\n\n  const queryResponse = useQuery<\n    GetOneResponse<TQueryFnData>,\n    TError,\n    GetOneResponse<TData>\n  >({\n    queryKey: keys()\n      .data(pickedDataProvider)\n      .resource(identifier ?? \"\")\n      .action(\"one\")\n      .id(id ?? \"\")\n      .params({\n        ...(preferredMeta || {}),\n      })\n      .get(preferLegacyKeys),\n    queryFn: ({ queryKey, pageParam, signal }) =>\n      getOne<TQueryFnData>({\n        resource: resource?.name ?? \"\",\n        id: id!,\n        meta: {\n          ...combinedMeta,\n          queryContext: {\n            queryKey,\n            pageParam,\n            signal,\n          },\n        },\n        metaData: {\n          ...combinedMeta,\n          queryContext: {\n            queryKey,\n            pageParam,\n            signal,\n          },\n        },\n      }),\n    ...queryOptions,\n    enabled:\n      typeof queryOptions?.enabled !== \"undefined\"\n        ? queryOptions?.enabled\n        : typeof id !== \"undefined\",\n    onSuccess: (data) => {\n      queryOptions?.onSuccess?.(data);\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(\n              data,\n              {\n                id,\n                ...combinedMeta,\n              },\n              identifier,\n            )\n          : successNotification;\n\n      handleNotification(notificationConfig);\n    },\n    onError: (err: TError) => {\n      checkError(err);\n      queryOptions?.onError?.(err);\n\n      const notificationConfig =\n        typeof errorNotification === \"function\"\n          ? errorNotification(\n              err,\n              {\n                id,\n                ...combinedMeta,\n              },\n              identifier,\n            )\n          : errorNotification;\n\n      handleNotification(notificationConfig, {\n        key: `${id}-${identifier}-getOne-notification`,\n        message: translate(\n          \"notifications.error\",\n          { statusCode: err.statusCode },\n          `Error (status code: ${err.statusCode})`,\n        ),\n        description: err.message,\n        type: \"error\",\n      });\n    },\n    meta: {\n      ...queryOptions?.meta,\n      ...getXRay(\"useOne\", preferLegacyKeys),\n    },\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: queryResponse.isFetching,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  return { ...queryResponse, overtime: { elapsedTime } };\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  QueryObserverResult,\n  useQuery,\n  UseQueryOptions,\n} from \"@tanstack/react-query\";\n\nimport {\n  handleMultiple,\n  pickDataProvider,\n  pickNotDeprecated,\n  useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n  useDataProvider,\n  useHandleNotification,\n  useMeta,\n  useOnError,\n  useResource,\n  useResourceSubscription,\n  useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n  BaseKey,\n  BaseRecord,\n  GetManyResponse,\n  HttpError,\n  LiveModeProps,\n  MetaQuery,\n  SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n  useLoadingOvertime,\n  UseLoadingOvertimeOptionsProps,\n  UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type UseManyProps<TQueryFnData, TError, TData> = {\n  /**\n   * Resource name for API data interactions\n   */\n  resource: string;\n  /**\n   * ids of the item in the resource\n   * @type [`BaseKey[]`](/docs/api-reference/core/interfaceReferences/#basekey)\n   */\n  ids: BaseKey[];\n  /**\n   * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n   */\n  queryOptions?: UseQueryOptions<\n    GetManyResponse<TQueryFnData>,\n    TError,\n    GetManyResponse<TData>\n  >;\n  /**\n   * Metadata query for `dataProvider`,\n   */\n  meta?: MetaQuery;\n  /**\n   * Metadata query for `dataProvider`,\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   * @default \"default\"\n   */\n  dataProviderName?: string;\n} & SuccessErrorNotification<GetManyResponse<TData>, TError, BaseKey[]> &\n  LiveModeProps &\n  UseLoadingOvertimeOptionsProps;\n\n/**\n * `useMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for retrieving multiple items from a `resource`.\n *\n * It uses `getMany` method as query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useMany} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useMany = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  resource: resourceFromProp,\n  ids,\n  queryOptions,\n  successNotification,\n  errorNotification,\n  meta,\n  metaData,\n  liveMode,\n  onLiveEvent,\n  liveParams,\n  dataProviderName,\n  overtimeOptions,\n}: UseManyProps<TQueryFnData, TError, TData>): QueryObserverResult<\n  GetManyResponse<TData>,\n  TError\n> &\n  UseLoadingOvertimeReturnType => {\n  const { resources, resource, identifier } = useResource(resourceFromProp);\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const handleNotification = useHandleNotification();\n  const getMeta = useMeta();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const preferredMeta = pickNotDeprecated(meta, metaData);\n  const pickedDataProvider = pickDataProvider(\n    identifier,\n    dataProviderName,\n    resources,\n  );\n  const isEnabled =\n    queryOptions?.enabled === undefined || queryOptions?.enabled === true;\n\n  const { getMany, getOne } = dataProvider(pickedDataProvider);\n\n  const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n  useResourceSubscription({\n    resource: identifier,\n    types: [\"*\"],\n    params: {\n      ids: ids,\n      meta: combinedMeta,\n      metaData: combinedMeta,\n      subscriptionType: \"useMany\",\n      ...liveParams,\n    },\n    channel: `resources/${resource.name}`,\n    enabled: isEnabled,\n    liveMode,\n    onLiveEvent,\n    dataProviderName: pickedDataProvider,\n    meta: {\n      ...meta,\n      dataProviderName,\n    },\n  });\n\n  const queryResponse = useQuery<\n    GetManyResponse<TQueryFnData>,\n    TError,\n    GetManyResponse<TData>\n  >({\n    queryKey: keys()\n      .data(pickedDataProvider)\n      .resource(identifier)\n      .action(\"many\")\n      .ids(...ids)\n      .params({\n        ...(preferredMeta || {}),\n      })\n      .get(preferLegacyKeys),\n    queryFn: ({ queryKey, pageParam, signal }) => {\n      if (getMany) {\n        return getMany({\n          resource: resource?.name,\n          ids,\n          meta: {\n            ...combinedMeta,\n            queryContext: {\n              queryKey,\n              pageParam,\n              signal,\n            },\n          },\n          metaData: {\n            ...combinedMeta,\n            queryContext: {\n              queryKey,\n              pageParam,\n              signal,\n            },\n          },\n        });\n      }\n      return handleMultiple(\n        ids.map((id) =>\n          getOne<TQueryFnData>({\n            resource: resource?.name,\n            id,\n            meta: {\n              ...combinedMeta,\n              queryContext: {\n                queryKey,\n                pageParam,\n                signal,\n              },\n            },\n            metaData: {\n              ...combinedMeta,\n              queryContext: {\n                queryKey,\n                pageParam,\n                signal,\n              },\n            },\n          }),\n        ),\n      );\n    },\n    ...queryOptions,\n    onSuccess: (data) => {\n      queryOptions?.onSuccess?.(data);\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(data, ids, identifier)\n          : successNotification;\n\n      handleNotification(notificationConfig);\n    },\n    onError: (err: TError) => {\n      checkError(err);\n      queryOptions?.onError?.(err);\n\n      const notificationConfig =\n        typeof errorNotification === \"function\"\n          ? errorNotification(err, ids, identifier)\n          : errorNotification;\n\n      handleNotification(notificationConfig, {\n        key: `${ids[0]}-${identifier}-getMany-notification`,\n        message: translate(\n          \"notifications.error\",\n          { statusCode: err.statusCode },\n          `Error (status code: ${err.statusCode})`,\n        ),\n        description: err.message,\n        type: \"error\",\n      });\n    },\n    meta: {\n      ...queryOptions?.meta,\n      ...getXRay(\"useMany\", preferLegacyKeys),\n    },\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: queryResponse.isFetching,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  return { ...queryResponse, overtime: { elapsedTime } };\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  useMutation,\n  UseMutationOptions,\n  UseMutationResult,\n  useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { ActionTypes } from \"@contexts/undoableQueue\";\nimport {\n  pickDataProvider,\n  pickNotDeprecated,\n  queryKeysReplacement,\n  useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n  useCancelNotification,\n  useDataProvider,\n  useHandleNotification,\n  useInvalidate,\n  useLog,\n  useMeta,\n  useMutationMode,\n  useOnError,\n  usePublish,\n  useRefineContext,\n  useResource,\n  useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n  BaseKey,\n  BaseRecord,\n  GetListResponse,\n  GetManyResponse,\n  GetOneResponse,\n  HttpError,\n  IQueryKeys,\n  MetaQuery,\n  MutationMode,\n  OptimisticUpdateMapType,\n  PrevContext as UpdateContext,\n  PreviousQuery,\n  SuccessErrorNotification,\n  UpdateResponse,\n} from \"../../interfaces\";\nimport {\n  useLoadingOvertime,\n  UseLoadingOvertimeOptionsProps,\n  UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type UpdateParams<TData, TError, TVariables> = {\n  /**\n   * Resource name for API data interactions\n   */\n  resource: string;\n  /**\n   * id for mutation function\n   */\n  id: BaseKey;\n  /**\n   * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n   */\n  mutationMode?: MutationMode;\n  /**\n   * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n   */\n  undoableTimeout?: number;\n  /**\n   * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n   */\n  onCancel?: (cancelMutation: () => void) => void;\n  /**\n   * Values for mutation function\n   */\n  values: TVariables;\n  /**\n   * Metadata query for dataProvider\n   */\n  meta?: MetaQuery;\n  /**\n   * Metadata query for dataProvider\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   * @default \"default\"\n   */\n  dataProviderName?: string;\n  /**\n   *  You can use it to manage the invalidations that will occur at the end of the mutation.\n   */\n  invalidates?: Array<keyof IQueryKeys>;\n  /**\n   * You can use it to customize the optimistic update logic.\n   * @default {\n   *   list: true,\n   *   many: true,\n   *   detail: true,\n   * }\n   */\n  optimisticUpdateMap?: OptimisticUpdateMapType<TData, TVariables>;\n} & SuccessErrorNotification<\n  UpdateResponse<TData>,\n  TError,\n  { id: BaseKey; values: TVariables }\n>;\n\nexport type UseUpdateReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = UseMutationResult<\n  UpdateResponse<TData>,\n  TError,\n  UpdateParams<TData, TError, TVariables>,\n  UpdateContext<TData>\n> &\n  UseLoadingOvertimeReturnType;\n\nexport type UseUpdateProps<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = {\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      UpdateResponse<TData>,\n      TError,\n      UpdateParams<TData, TError, TVariables>,\n      UpdateContext<TData>\n    >,\n    \"mutationFn\" | \"onError\" | \"onSuccess\" | \"onSettled\" | \"onMutate\"\n  >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useUpdate` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for update mutations.\n *\n * It uses `update` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useUpdate} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useUpdate = <\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n>({\n  mutationOptions,\n  overtimeOptions,\n}: UseUpdateProps<TData, TError, TVariables> = {}): UseUpdateReturnType<\n  TData,\n  TError,\n  TVariables\n> => {\n  const { resources, select } = useResource();\n  const queryClient = useQueryClient();\n  const dataProvider = useDataProvider();\n\n  const {\n    mutationMode: mutationModeContext,\n    undoableTimeout: undoableTimeoutContext,\n  } = useMutationMode();\n  const translate = useTranslate();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const publish = usePublish();\n  const { log } = useLog();\n  const { notificationDispatch } = useCancelNotification();\n  const handleNotification = useHandleNotification();\n  const invalidateStore = useInvalidate();\n  const getMeta = useMeta();\n  const {\n    options: { textTransformers },\n  } = useRefineContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutation = useMutation<\n    UpdateResponse<TData>,\n    TError,\n    UpdateParams<TData, TError, TVariables>,\n    UpdateContext<TData>\n  >({\n    mutationFn: ({\n      id,\n      values,\n      resource: resourceName,\n      mutationMode,\n      undoableTimeout,\n      onCancel,\n      meta,\n      metaData,\n      dataProviderName,\n    }) => {\n      const { resource, identifier } = select(resourceName);\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const mutationModePropOrContext = mutationMode ?? mutationModeContext;\n\n      const undoableTimeoutPropOrContext =\n        undoableTimeout ?? undoableTimeoutContext;\n\n      if (!(mutationModePropOrContext === \"undoable\")) {\n        return dataProvider(\n          pickDataProvider(identifier, dataProviderName, resources),\n        ).update<TData, TVariables>({\n          resource: resource.name,\n          id,\n          variables: values,\n          meta: combinedMeta,\n          metaData: combinedMeta,\n        });\n      }\n      const updatePromise = new Promise<UpdateResponse<TData>>(\n        (resolve, reject) => {\n          const doMutation = () => {\n            dataProvider(\n              pickDataProvider(identifier, dataProviderName, resources),\n            )\n              .update<TData, TVariables>({\n                resource: resource.name,\n                id,\n                variables: values,\n                meta: combinedMeta,\n                metaData: combinedMeta,\n              })\n              .then((result) => resolve(result))\n              .catch((err) => reject(err));\n          };\n\n          const cancelMutation = () => {\n            reject({ message: \"mutationCancelled\" });\n          };\n\n          if (onCancel) {\n            onCancel(cancelMutation);\n          }\n\n          notificationDispatch({\n            type: ActionTypes.ADD,\n            payload: {\n              id: id,\n              resource: identifier,\n              cancelMutation: cancelMutation,\n              doMutation: doMutation,\n              seconds: undoableTimeoutPropOrContext,\n              isSilent: !!onCancel,\n            },\n          });\n        },\n      );\n      return updatePromise;\n    },\n    onMutate: async ({\n      resource: resourceName,\n      id,\n      mutationMode,\n      values,\n      dataProviderName,\n      meta,\n      metaData,\n      optimisticUpdateMap = { list: true, many: true, detail: true },\n    }) => {\n      const { identifier } = select(resourceName);\n\n      const {\n        gqlMutation: _,\n        gqlQuery: __,\n        ...preferredMeta\n      } = pickNotDeprecated(meta, metaData) ?? {};\n\n      const queryKey = queryKeysReplacement(preferLegacyKeys)(\n        identifier,\n        pickDataProvider(identifier, dataProviderName, resources),\n        preferredMeta,\n      );\n\n      const resourceKeys = keys()\n        .data(pickDataProvider(identifier, dataProviderName, resources))\n        .resource(identifier);\n\n      const previousQueries: PreviousQuery<TData>[] =\n        queryClient.getQueriesData(resourceKeys.get(preferLegacyKeys));\n\n      const mutationModePropOrContext = mutationMode ?? mutationModeContext;\n\n      await queryClient.cancelQueries(\n        resourceKeys.get(preferLegacyKeys),\n        undefined,\n        {\n          silent: true,\n        },\n      );\n\n      if (mutationModePropOrContext !== \"pessimistic\") {\n        if (optimisticUpdateMap.list) {\n          // Set the previous queries to the new ones:\n          queryClient.setQueriesData(\n            resourceKeys\n              .action(\"list\")\n              .params(preferredMeta ?? {})\n              .get(preferLegacyKeys),\n            (previous?: GetListResponse<TData> | null) => {\n              if (typeof optimisticUpdateMap.list === \"function\") {\n                return optimisticUpdateMap.list(previous, values, id);\n              }\n\n              if (!previous) {\n                return null;\n              }\n\n              const data = previous.data.map((record: TData) => {\n                if (record.id?.toString() === id?.toString()) {\n                  return {\n                    id,\n                    ...record,\n                    ...values,\n                  } as unknown as TData;\n                }\n                return record;\n              });\n\n              return {\n                ...previous,\n                data,\n              };\n            },\n          );\n        }\n\n        if (optimisticUpdateMap.many) {\n          queryClient.setQueriesData(\n            resourceKeys.action(\"many\").get(preferLegacyKeys),\n            (previous?: GetManyResponse<TData> | null) => {\n              if (typeof optimisticUpdateMap.many === \"function\") {\n                return optimisticUpdateMap.many(previous, values, id);\n              }\n\n              if (!previous) {\n                return null;\n              }\n\n              const data = previous.data.map((record: TData) => {\n                if (record.id?.toString() === id?.toString()) {\n                  record = {\n                    id,\n                    ...record,\n                    ...values,\n                  } as unknown as TData;\n                }\n                return record;\n              });\n              return {\n                ...previous,\n                data,\n              };\n            },\n          );\n        }\n\n        if (optimisticUpdateMap.detail) {\n          queryClient.setQueriesData(\n            resourceKeys\n              .action(\"one\")\n              .id(id)\n              .params(preferredMeta ?? {})\n              .get(preferLegacyKeys),\n            (previous?: GetOneResponse<TData> | null) => {\n              if (typeof optimisticUpdateMap.detail === \"function\") {\n                return optimisticUpdateMap.detail(previous, values, id);\n              }\n\n              if (!previous) {\n                return null;\n              }\n\n              return {\n                ...previous,\n                data: {\n                  ...previous.data,\n                  ...values,\n                },\n              };\n            },\n          );\n        }\n      }\n\n      return {\n        previousQueries,\n        queryKey,\n      };\n    },\n    onSettled: (\n      _data,\n      _error,\n      {\n        id,\n        resource: resourceName,\n        dataProviderName,\n        invalidates = [\"list\", \"many\", \"detail\"],\n      },\n    ) => {\n      const { identifier } = select(resourceName);\n\n      invalidateStore({\n        resource: identifier,\n        dataProviderName: pickDataProvider(\n          identifier,\n          dataProviderName,\n          resources,\n        ),\n        invalidates,\n        id,\n      });\n\n      notificationDispatch({\n        type: ActionTypes.REMOVE,\n        payload: { id, resource: identifier },\n      });\n    },\n    onSuccess: (\n      data,\n      {\n        id,\n        resource: resourceName,\n        successNotification,\n        dataProviderName: dataProviderNameFromProp,\n        values,\n        meta,\n        metaData,\n      },\n      context,\n    ) => {\n      const { resource, identifier } = select(resourceName);\n      const resourceSingular = textTransformers.singular(identifier);\n\n      const dataProviderName = pickDataProvider(\n        identifier,\n        dataProviderNameFromProp,\n        resources,\n      );\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(data, { id, values }, identifier)\n          : successNotification;\n\n      handleNotification(notificationConfig, {\n        key: `${id}-${identifier}-notification`,\n        description: translate(\"notifications.success\", \"Successful\"),\n        message: translate(\n          \"notifications.editSuccess\",\n          {\n            resource: translate(\n              `${identifier}.${identifier}`,\n              resourceSingular,\n            ),\n          },\n          `Successfully updated ${resourceSingular}`,\n        ),\n        type: \"success\",\n      });\n\n      publish?.({\n        channel: `resources/${resource.name}`,\n        type: \"updated\",\n        payload: {\n          ids: data.data?.id ? [data.data.id] : undefined,\n        },\n        date: new Date(),\n        meta: {\n          ...combinedMeta,\n          dataProviderName,\n        },\n      });\n\n      let previousData: any;\n      if (context) {\n        const queryData = queryClient.getQueryData<UpdateResponse<TData>>(\n          context.queryKey.detail(id),\n        );\n\n        previousData = Object.keys(values || {}).reduce<any>((acc, item) => {\n          acc[item] = queryData?.data?.[item];\n          return acc;\n        }, {});\n      }\n\n      const {\n        fields: _fields,\n        operation: _operation,\n        variables: _variables,\n        ...rest\n      } = combinedMeta || {};\n      log?.mutate({\n        action: \"update\",\n        resource: resource.name,\n        data: values,\n        previousData,\n        meta: {\n          id,\n          dataProviderName,\n          ...rest,\n        },\n      });\n    },\n    onError: (\n      err: TError,\n      { id, resource: resourceName, errorNotification, values },\n      context,\n    ) => {\n      const { identifier } = select(resourceName);\n\n      // set back the queries to the context:\n      if (context) {\n        for (const query of context.previousQueries) {\n          queryClient.setQueryData(query[0], query[1]);\n        }\n      }\n\n      if (err.message !== \"mutationCancelled\") {\n        checkError?.(err);\n\n        const resourceSingular = textTransformers.singular(identifier);\n\n        const notificationConfig =\n          typeof errorNotification === \"function\"\n            ? errorNotification(err, { id, values }, identifier)\n            : errorNotification;\n\n        handleNotification(notificationConfig, {\n          key: `${id}-${identifier}-notification`,\n          message: translate(\n            \"notifications.editError\",\n            {\n              resource: translate(\n                `${identifier}.${identifier}`,\n                resourceSingular,\n              ),\n              statusCode: err.statusCode,\n            },\n            `Error when updating ${resourceSingular} (status code: ${err.statusCode})`,\n          ),\n          description: err.message,\n          type: \"error\",\n        });\n      }\n    },\n    mutationKey: keys().data().mutation(\"update\").get(preferLegacyKeys),\n    ...mutationOptions,\n    meta: {\n      ...mutationOptions?.meta,\n      ...getXRay(\"useUpdate\", preferLegacyKeys),\n    },\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: mutation.isLoading,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  return { ...mutation, overtime: { elapsedTime } };\n};\n","import React, { ReactNode, useReducer } from \"react\";\nimport isEqual from \"lodash-es/isEqual.js\";\n\nimport { UndoableQueue } from \"@components\";\n\nimport { IUndoableQueue, IUndoableQueueContext } from \"../../interfaces\";\nimport { ActionTypes } from \"./actionTypes\";\n\nexport const UndoableQueueContext = React.createContext<IUndoableQueueContext>({\n  notifications: [],\n  notificationDispatch: () => false,\n});\n\nconst initialState: IUndoableQueue[] = [];\n\nexport const undoableQueueReducer = (state: IUndoableQueue[], action: any) => {\n  switch (action.type) {\n    case ActionTypes.ADD: {\n      const newState = state.filter((notificationItem: IUndoableQueue) => {\n        return !(\n          isEqual(notificationItem.id, action.payload.id) &&\n          notificationItem.resource === action.payload.resource\n        );\n      });\n\n      return [\n        ...newState,\n        {\n          ...action.payload,\n          isRunning: true,\n        },\n      ];\n    }\n    case ActionTypes.REMOVE:\n      return state.filter(\n        (notificationItem: IUndoableQueue) =>\n          !(\n            isEqual(notificationItem.id, action.payload.id) &&\n            notificationItem.resource === action.payload.resource\n          ),\n      );\n    case ActionTypes.DECREASE_NOTIFICATION_SECOND:\n      return state.map((notificationItem: IUndoableQueue) => {\n        if (\n          isEqual(notificationItem.id, action.payload.id) &&\n          notificationItem.resource === action.payload.resource\n        ) {\n          return {\n            ...notificationItem,\n            seconds: action.payload.seconds - 1000,\n          };\n        }\n        return notificationItem;\n      });\n    default:\n      return state;\n  }\n};\n\nexport const UndoableQueueContextProvider: React.FC<{\n  children: ReactNode;\n}> = ({ children }) => {\n  const [notifications, notificationDispatch] = useReducer(\n    undoableQueueReducer,\n    initialState,\n  );\n\n  const notificationData = { notifications, notificationDispatch };\n\n  return (\n    <UndoableQueueContext.Provider value={notificationData}>\n      {children}\n      {typeof window !== \"undefined\" &&\n        notifications.map((notification) => (\n          <UndoableQueue\n            key={`${notification.id}-${notification.resource}-queue`}\n            notification={notification}\n          />\n        ))}\n    </UndoableQueueContext.Provider>\n  );\n};\n","import {\n  pickDataProvider,\n  pickNotDeprecated,\n  useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  useMutation,\n  UseMutationOptions,\n  UseMutationResult,\n} from \"@tanstack/react-query\";\n\nimport {\n  useDataProvider,\n  useHandleNotification,\n  useInvalidate,\n  useLog,\n  useMeta,\n  useOnError,\n  usePublish,\n  useRefineContext,\n  useResource,\n  useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n  BaseRecord,\n  CreateResponse,\n  HttpError,\n  IQueryKeys,\n  MetaQuery,\n  SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n  useLoadingOvertime,\n  UseLoadingOvertimeOptionsProps,\n  UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\ntype useCreateParams<TData, TError, TVariables> = {\n  /**\n   * Resource name for API data interactions\n   */\n  resource: string;\n  /**\n   * Values for mutation function\n   */\n  values: TVariables;\n  /**\n   * Meta data for `dataProvider`\n   */\n  meta?: MetaQuery;\n  /**\n   * Meta data for `dataProvider`\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   */\n  dataProviderName?: string;\n  /**\n   * You can use it to manage the invalidations that will occur at the end of the mutation.\n   */\n  invalidates?: Array<keyof IQueryKeys>;\n} & SuccessErrorNotification<CreateResponse<TData>, TError, TVariables>;\n\nexport type UseCreateReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = UseMutationResult<\n  CreateResponse<TData>,\n  TError,\n  useCreateParams<TData, TError, TVariables>,\n  unknown\n>;\n\nexport type UseCreateProps<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = {\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      CreateResponse<TData>,\n      TError,\n      useCreateParams<TData, TError, TVariables>,\n      unknown\n    >,\n    \"mutationFn\" | \"onError\" | \"onSuccess\"\n  >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useCreate` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for create mutations.\n *\n * It uses `create` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCreate} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\n\nexport const useCreate = <\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n>({\n  mutationOptions,\n  overtimeOptions,\n}: UseCreateProps<TData, TError, TVariables> = {}): UseCreateReturnType<\n  TData,\n  TError,\n  TVariables\n> &\n  UseLoadingOvertimeReturnType => {\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const dataProvider = useDataProvider();\n  const invalidateStore = useInvalidate();\n  const { resources, select } = useResource();\n  const translate = useTranslate();\n  const publish = usePublish();\n  const { log } = useLog();\n  const handleNotification = useHandleNotification();\n  const getMeta = useMeta();\n  const {\n    options: { textTransformers },\n  } = useRefineContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutation = useMutation<\n    CreateResponse<TData>,\n    TError,\n    useCreateParams<TData, TError, TVariables>,\n    unknown\n  >({\n    mutationFn: ({\n      resource: resourceName,\n      values,\n      meta,\n      metaData,\n      dataProviderName,\n    }: useCreateParams<TData, TError, TVariables>) => {\n      const { resource, identifier } = select(resourceName);\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      return dataProvider(\n        pickDataProvider(identifier, dataProviderName, resources),\n      ).create<TData, TVariables>({\n        resource: resource.name,\n        variables: values,\n        meta: combinedMeta,\n        metaData: combinedMeta,\n      });\n    },\n    onSuccess: (\n      data,\n      {\n        resource: resourceName,\n        successNotification: successNotificationFromProp,\n        dataProviderName: dataProviderNameFromProp,\n        invalidates = [\"list\", \"many\"],\n        values,\n        meta,\n        metaData,\n      },\n    ) => {\n      const { resource, identifier } = select(resourceName);\n      const resourceSingular = textTransformers.singular(identifier);\n\n      const dataProviderName = pickDataProvider(\n        identifier,\n        dataProviderNameFromProp,\n        resources,\n      );\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const notificationConfig =\n        typeof successNotificationFromProp === \"function\"\n          ? successNotificationFromProp(data, values, identifier)\n          : successNotificationFromProp;\n\n      handleNotification(notificationConfig, {\n        key: `create-${identifier}-notification`,\n        message: translate(\n          \"notifications.createSuccess\",\n          {\n            resource: translate(\n              `${identifier}.${identifier}`,\n              resourceSingular,\n            ),\n          },\n          `Successfully created ${resourceSingular}`,\n        ),\n        description: translate(\"notifications.success\", \"Success\"),\n        type: \"success\",\n      });\n\n      invalidateStore({\n        resource: identifier,\n        dataProviderName,\n        invalidates,\n      });\n\n      publish?.({\n        channel: `resources/${resource.name}`,\n        type: \"created\",\n        payload: {\n          ids: data?.data?.id ? [data.data.id] : undefined,\n        },\n        date: new Date(),\n        meta: {\n          ...combinedMeta,\n          dataProviderName,\n        },\n      });\n\n      const {\n        fields: _fields,\n        operation: _operation,\n        variables: _variables,\n        ...rest\n      } = combinedMeta || {};\n      log?.mutate({\n        action: \"create\",\n        resource: resource.name,\n        data: values,\n        meta: {\n          dataProviderName,\n          id: data?.data?.id ?? undefined,\n          ...rest,\n        },\n      });\n    },\n    onError: (\n      err: TError,\n      {\n        resource: resourceName,\n        errorNotification: errorNotificationFromProp,\n        values,\n      },\n    ) => {\n      checkError(err);\n\n      const { identifier } = select(resourceName);\n\n      const resourceSingular = textTransformers.singular(identifier);\n\n      const notificationConfig =\n        typeof errorNotificationFromProp === \"function\"\n          ? errorNotificationFromProp(err, values, identifier)\n          : errorNotificationFromProp;\n\n      handleNotification(notificationConfig, {\n        key: `create-${identifier}-notification`,\n        description: err.message,\n        message: translate(\n          \"notifications.createError\",\n          {\n            resource: translate(\n              `${identifier}.${identifier}`,\n              resourceSingular,\n            ),\n            statusCode: err.statusCode,\n          },\n          `There was an error creating ${resourceSingular} (status code: ${err.statusCode})`,\n        ),\n        type: \"error\",\n      });\n    },\n    mutationKey: keys().data().mutation(\"create\").get(preferLegacyKeys),\n    ...mutationOptions,\n    meta: {\n      ...mutationOptions?.meta,\n      ...getXRay(\"useCreate\", preferLegacyKeys),\n    },\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: mutation.isLoading,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  return { ...mutation, overtime: { elapsedTime } };\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  useMutation,\n  UseMutationOptions,\n  UseMutationResult,\n  useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { ActionTypes } from \"@contexts/undoableQueue\";\nimport {\n  pickDataProvider,\n  pickNotDeprecated,\n  queryKeysReplacement,\n  useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n  useCancelNotification,\n  useDataProvider,\n  useHandleNotification,\n  useInvalidate,\n  useLog,\n  useMeta,\n  useMutationMode,\n  useOnError,\n  usePublish,\n  useRefineContext,\n  useResource,\n  useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n  BaseKey,\n  BaseRecord,\n  DeleteOneResponse,\n  GetListResponse,\n  HttpError,\n  IQueryKeys,\n  MetaQuery,\n  MutationMode,\n  PrevContext as DeleteContext,\n  PreviousQuery,\n  SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n  useLoadingOvertime,\n  UseLoadingOvertimeOptionsProps,\n  UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type DeleteParams<TData, TError, TVariables> = {\n  /**\n   * id for mutation function\n   */\n  id: BaseKey;\n  /**\n   * Resource name for API data interactions\n   */\n  resource: string;\n  /**\n   * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n   */\n  mutationMode?: MutationMode;\n  /**\n   * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n   */\n  undoableTimeout?: number;\n  /**\n   * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n   */\n  onCancel?: (cancelMutation: () => void) => void;\n  /**\n   * Metadata query for dataProvider\n   */\n  meta?: MetaQuery;\n  /**\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   * @default \"default\"\n   */\n  dataProviderName?: string;\n  /**\n   *  You can use it to manage the invalidations that will occur at the end of the mutation.\n   */\n  invalidates?: Array<keyof IQueryKeys>;\n  /**\n   * Values for mutation function\n   */\n  values?: TVariables;\n} & SuccessErrorNotification<DeleteOneResponse<TData>, TError, BaseKey>;\n\nexport type UseDeleteReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError = HttpError,\n  TVariables = {},\n> = UseMutationResult<\n  DeleteOneResponse<TData>,\n  TError,\n  DeleteParams<TData, TError, TVariables>,\n  DeleteContext<TData>\n> &\n  UseLoadingOvertimeReturnType;\n\nexport type UseDeleteProps<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = {\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      DeleteOneResponse<TData>,\n      TError,\n      DeleteParams<TData, TError, TVariables>,\n      DeleteContext<TData>\n    >,\n    \"mutationFn\" | \"onError\" | \"onSuccess\" | \"onSettled\" | \"onMutate\"\n  >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useDelete` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for delete mutations.\n *\n * It uses `deleteOne` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useDelete} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n *\n */\nexport const useDelete = <\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n>({\n  mutationOptions,\n  overtimeOptions,\n}: UseDeleteProps<TData, TError, TVariables> = {}): UseDeleteReturnType<\n  TData,\n  TError,\n  TVariables\n> => {\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const dataProvider = useDataProvider();\n\n  const { resources, select } = useResource();\n  const queryClient = useQueryClient();\n\n  const {\n    mutationMode: mutationModeContext,\n    undoableTimeout: undoableTimeoutContext,\n  } = useMutationMode();\n\n  const { notificationDispatch } = useCancelNotification();\n  const translate = useTranslate();\n  const publish = usePublish();\n  const { log } = useLog();\n  const handleNotification = useHandleNotification();\n  const invalidateStore = useInvalidate();\n  const getMeta = useMeta();\n  const {\n    options: { textTransformers },\n  } = useRefineContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutation = useMutation<\n    DeleteOneResponse<TData>,\n    TError,\n    DeleteParams<TData, TError, TVariables>,\n    DeleteContext<TData>\n  >({\n    mutationFn: ({\n      id,\n      mutationMode,\n      undoableTimeout,\n      resource: resourceName,\n      onCancel,\n      meta,\n      metaData,\n      dataProviderName,\n      values,\n    }) => {\n      const { resource, identifier } = select(resourceName);\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const mutationModePropOrContext = mutationMode ?? mutationModeContext;\n\n      const undoableTimeoutPropOrContext =\n        undoableTimeout ?? undoableTimeoutContext;\n\n      if (!(mutationModePropOrContext === \"undoable\")) {\n        return dataProvider(\n          pickDataProvider(identifier, dataProviderName, resources),\n        ).deleteOne<TData, TVariables>({\n          resource: resource.name,\n          id,\n          meta: combinedMeta,\n          metaData: combinedMeta,\n          variables: values,\n        });\n      }\n\n      const deletePromise = new Promise<DeleteOneResponse<TData>>(\n        (resolve, reject) => {\n          const doMutation = () => {\n            dataProvider(\n              pickDataProvider(identifier, dataProviderName, resources),\n            )\n              .deleteOne<TData, TVariables>({\n                resource: resource.name,\n                id,\n                meta: combinedMeta,\n                metaData: combinedMeta,\n                variables: values,\n              })\n              .then((result) => resolve(result))\n              .catch((err) => reject(err));\n          };\n\n          const cancelMutation = () => {\n            reject({ message: \"mutationCancelled\" });\n          };\n\n          if (onCancel) {\n            onCancel(cancelMutation);\n          }\n\n          notificationDispatch({\n            type: ActionTypes.ADD,\n            payload: {\n              id,\n              resource: identifier,\n              cancelMutation: cancelMutation,\n              doMutation: doMutation,\n              seconds: undoableTimeoutPropOrContext,\n              isSilent: !!onCancel,\n            },\n          });\n        },\n      );\n      return deletePromise;\n    },\n    onMutate: async ({\n      id,\n      resource: resourceName,\n      mutationMode,\n      dataProviderName,\n      meta,\n      metaData,\n    }) => {\n      const { identifier } = select(resourceName);\n\n      const {\n        gqlMutation: _,\n        gqlQuery: __,\n        ...preferredMeta\n      } = pickNotDeprecated(meta, metaData) ?? {};\n\n      const queryKey = queryKeysReplacement(preferLegacyKeys)(\n        identifier,\n        pickDataProvider(identifier, dataProviderName, resources),\n        preferredMeta,\n      );\n\n      const resourceKeys = keys()\n        .data(pickDataProvider(identifier, dataProviderName, resources))\n        .resource(identifier);\n\n      const mutationModePropOrContext = mutationMode ?? mutationModeContext;\n\n      await queryClient.cancelQueries(\n        resourceKeys.get(preferLegacyKeys),\n        undefined,\n        {\n          silent: true,\n        },\n      );\n\n      const previousQueries: PreviousQuery<TData>[] =\n        queryClient.getQueriesData(resourceKeys.get(preferLegacyKeys));\n\n      if (mutationModePropOrContext !== \"pessimistic\") {\n        // Set the previous queries to the new ones:\n        queryClient.setQueriesData(\n          resourceKeys\n            .action(\"list\")\n            .params(preferredMeta ?? {})\n            .get(preferLegacyKeys),\n          (previous?: GetListResponse<TData> | null) => {\n            if (!previous) {\n              return null;\n            }\n            const data = previous.data.filter(\n              (record: TData) => record.id?.toString() !== id.toString(),\n            );\n\n            return {\n              data,\n              total: previous.total - 1,\n            };\n          },\n        );\n\n        queryClient.setQueriesData(\n          resourceKeys.action(\"many\").get(preferLegacyKeys),\n          (previous?: GetListResponse<TData> | null) => {\n            if (!previous) {\n              return null;\n            }\n            const data = previous.data.filter((record: TData) => {\n              return record.id?.toString() !== id?.toString();\n            });\n\n            return {\n              ...previous,\n              data,\n            };\n          },\n        );\n      }\n\n      return {\n        previousQueries,\n        queryKey,\n      };\n    },\n    onSettled: (\n      _data,\n      _error,\n      {\n        id,\n        resource: resourceName,\n        dataProviderName,\n        invalidates = [\"list\", \"many\"],\n      },\n    ) => {\n      const { identifier } = select(resourceName);\n\n      // invalidate the cache for the list and many queries:\n      invalidateStore({\n        resource: identifier,\n        dataProviderName: pickDataProvider(\n          identifier,\n          dataProviderName,\n          resources,\n        ),\n        invalidates,\n      });\n\n      notificationDispatch({\n        type: ActionTypes.REMOVE,\n        payload: { id, resource: identifier },\n      });\n    },\n    onSuccess: (\n      _data,\n      {\n        id,\n        resource: resourceName,\n        successNotification,\n        dataProviderName: dataProviderNameFromProp,\n        meta,\n        metaData,\n      },\n      context,\n    ) => {\n      const { resource, identifier } = select(resourceName);\n      const resourceSingular = textTransformers.singular(identifier);\n\n      const dataProviderName = pickDataProvider(\n        identifier,\n        dataProviderNameFromProp,\n        resources,\n      );\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      // Remove the queries from the cache:\n      queryClient.removeQueries(context?.queryKey.detail(id));\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(_data, id, identifier)\n          : successNotification;\n\n      handleNotification(notificationConfig, {\n        key: `${id}-${identifier}-notification`,\n        description: translate(\"notifications.success\", \"Success\"),\n        message: translate(\n          \"notifications.deleteSuccess\",\n          {\n            resource: translate(\n              `${identifier}.${identifier}`,\n              resourceSingular,\n            ),\n          },\n          `Successfully deleted a ${resourceSingular}`,\n        ),\n        type: \"success\",\n      });\n\n      publish?.({\n        channel: `resources/${resource.name}`,\n        type: \"deleted\",\n        payload: {\n          ids: [id],\n        },\n        date: new Date(),\n        meta: {\n          ...combinedMeta,\n          dataProviderName,\n        },\n      });\n\n      const {\n        fields: _fields,\n        operation: _operation,\n        variables: _variables,\n        ...rest\n      } = combinedMeta || {};\n      log?.mutate({\n        action: \"delete\",\n        resource: resource.name,\n        meta: {\n          id,\n          dataProviderName,\n          ...rest,\n        },\n      });\n\n      // Remove the queries from the cache:\n      queryClient.removeQueries(context?.queryKey.detail(id));\n    },\n    onError: (\n      err: TError,\n      { id, resource: resourceName, errorNotification },\n      context,\n    ) => {\n      const { identifier } = select(resourceName);\n\n      // set back the queries to the context:\n      if (context) {\n        for (const query of context.previousQueries) {\n          queryClient.setQueryData(query[0], query[1]);\n        }\n      }\n\n      if (err.message !== \"mutationCancelled\") {\n        checkError(err);\n\n        const resourceSingular = textTransformers.singular(identifier);\n\n        const notificationConfig =\n          typeof errorNotification === \"function\"\n            ? errorNotification(err, id, identifier)\n            : errorNotification;\n\n        handleNotification(notificationConfig, {\n          key: `${id}-${identifier}-notification`,\n          message: translate(\n            \"notifications.deleteError\",\n            {\n              resource: resourceSingular,\n              statusCode: err.statusCode,\n            },\n            `Error (status code: ${err.statusCode})`,\n          ),\n          description: err.message,\n          type: \"error\",\n        });\n      }\n    },\n    mutationKey: keys().data().mutation(\"delete\").get(preferLegacyKeys),\n    ...mutationOptions,\n    meta: {\n      ...mutationOptions?.meta,\n      ...getXRay(\"useDelete\", preferLegacyKeys),\n    },\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: mutation.isLoading,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  return { ...mutation, overtime: { elapsedTime } };\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  useMutation,\n  UseMutationOptions,\n  UseMutationResult,\n} from \"@tanstack/react-query\";\n\nimport {\n  handleMultiple,\n  pickDataProvider,\n  pickNotDeprecated,\n} from \"@definitions\";\nimport {\n  useDataProvider,\n  useHandleNotification,\n  useInvalidate,\n  useLog,\n  useMeta,\n  usePublish,\n  useRefineContext,\n  useResource,\n  useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n  BaseRecord,\n  CreateManyResponse,\n  HttpError,\n  IQueryKeys,\n  MetaQuery,\n  SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n  useLoadingOvertime,\n  UseLoadingOvertimeOptionsProps,\n  UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\ntype useCreateManyParams<TData, TError, TVariables> = {\n  resource: string;\n  values: TVariables[];\n  meta?: MetaQuery;\n  metaData?: MetaQuery;\n  dataProviderName?: string;\n  invalidates?: Array<keyof IQueryKeys>;\n} & SuccessErrorNotification<CreateManyResponse<TData>, TError, TVariables[]>;\n\nexport type UseCreateManyReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError = HttpError,\n  TVariables = {},\n> = UseMutationResult<\n  CreateManyResponse<TData>,\n  TError,\n  useCreateManyParams<TData, TError, TVariables>,\n  unknown\n>;\n\nexport type UseCreateManyProps<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = {\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      CreateManyResponse<TData>,\n      TError,\n      useCreateManyParams<TData, TError, TVariables>\n    >,\n    \"mutationFn\" | \"onError\" | \"onSuccess\"\n  >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useCreateMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for multiple create mutations.\n *\n * It uses `createMany` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCreateMany} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useCreateMany = <\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n>({\n  mutationOptions,\n  overtimeOptions,\n}: UseCreateManyProps<TData, TError, TVariables> = {}): UseCreateManyReturnType<\n  TData,\n  TError,\n  TVariables\n> &\n  UseLoadingOvertimeReturnType => {\n  const dataProvider = useDataProvider();\n  const { resources, select } = useResource();\n  const translate = useTranslate();\n  const publish = usePublish();\n  const handleNotification = useHandleNotification();\n  const invalidateStore = useInvalidate();\n  const { log } = useLog();\n  const getMeta = useMeta();\n  const {\n    options: { textTransformers },\n  } = useRefineContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutation = useMutation<\n    CreateManyResponse<TData>,\n    TError,\n    useCreateManyParams<TData, TError, TVariables>\n  >({\n    mutationFn: ({\n      resource: resourceName,\n      values,\n      meta,\n      metaData,\n      dataProviderName,\n    }: useCreateManyParams<TData, TError, TVariables>) => {\n      const { resource, identifier } = select(resourceName);\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const selectedDataProvider = dataProvider(\n        pickDataProvider(identifier, dataProviderName, resources),\n      );\n\n      if (selectedDataProvider.createMany) {\n        return selectedDataProvider.createMany<TData, TVariables>({\n          resource: resource.name,\n          variables: values,\n          meta: combinedMeta,\n          metaData: combinedMeta,\n        });\n      }\n      return handleMultiple(\n        values.map((val) =>\n          selectedDataProvider.create<TData, TVariables>({\n            resource: resource.name,\n            variables: val,\n            meta: combinedMeta,\n            metaData: combinedMeta,\n          }),\n        ),\n      );\n    },\n    onSuccess: (\n      response,\n      {\n        resource: resourceName,\n        successNotification,\n        dataProviderName: dataProviderNameFromProp,\n        invalidates = [\"list\", \"many\"],\n        values,\n        meta,\n        metaData,\n      },\n    ) => {\n      const { resource, identifier } = select(resourceName);\n      const resourcePlural = textTransformers.plural(identifier);\n\n      const dataProviderName = pickDataProvider(\n        identifier,\n        dataProviderNameFromProp,\n        resources,\n      );\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(response, values, identifier)\n          : successNotification;\n\n      handleNotification(notificationConfig, {\n        key: `createMany-${identifier}-notification`,\n        message: translate(\n          \"notifications.createSuccess\",\n          {\n            resource: translate(`${identifier}.${identifier}`, identifier),\n          },\n          `Successfully created ${resourcePlural}`,\n        ),\n        description: translate(\"notifications.success\", \"Success\"),\n        type: \"success\",\n      });\n\n      invalidateStore({\n        resource: identifier,\n        dataProviderName,\n        invalidates,\n      });\n\n      const ids = response?.data\n        .filter((item) => item?.id !== undefined)\n        .map((item) => item.id!);\n      publish?.({\n        channel: `resources/${resource.name}`,\n        type: \"created\",\n        payload: {\n          ids,\n        },\n        date: new Date(),\n        meta: {\n          ...combinedMeta,\n          dataProviderName,\n        },\n      });\n\n      const {\n        fields: _fields,\n        operation: _operation,\n        variables: _variables,\n        ...rest\n      } = combinedMeta || {};\n      log?.mutate({\n        action: \"createMany\",\n        resource: resource.name,\n        data: values,\n        meta: {\n          dataProviderName,\n          ids,\n          ...rest,\n        },\n      });\n    },\n    onError: (\n      err: TError,\n      { resource: resourceName, errorNotification, values },\n    ) => {\n      const { identifier } = select(resourceName);\n\n      const notificationConfig =\n        typeof errorNotification === \"function\"\n          ? errorNotification(err, values, identifier)\n          : errorNotification;\n\n      handleNotification(notificationConfig, {\n        key: `createMany-${identifier}-notification`,\n        description: err.message,\n        message: translate(\n          \"notifications.createError\",\n          {\n            resource: translate(`${identifier}.${identifier}`, identifier),\n            statusCode: err.statusCode,\n          },\n          `There was an error creating ${identifier} (status code: ${err.statusCode}`,\n        ),\n        type: \"error\",\n      });\n    },\n    mutationKey: keys().data().mutation(\"createMany\").get(preferLegacyKeys),\n    ...mutationOptions,\n    meta: {\n      ...mutationOptions?.meta,\n      ...getXRay(\"useCreateMany\", preferLegacyKeys),\n    },\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: mutation.isLoading,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  return { ...mutation, overtime: { elapsedTime } };\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  useMutation,\n  UseMutationOptions,\n  UseMutationResult,\n  useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { ActionTypes } from \"@contexts/undoableQueue\";\nimport {\n  handleMultiple,\n  pickDataProvider,\n  pickNotDeprecated,\n  queryKeysReplacement,\n  useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n  useCancelNotification,\n  useDataProvider,\n  useHandleNotification,\n  useInvalidate,\n  useLog,\n  useMeta,\n  useMutationMode,\n  useOnError,\n  usePublish,\n  useRefineContext,\n  useResource,\n  useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n  BaseKey,\n  BaseRecord,\n  GetListResponse,\n  GetManyResponse,\n  GetOneResponse,\n  HttpError,\n  IQueryKeys,\n  MetaQuery,\n  MutationMode,\n  OptimisticUpdateManyMapType,\n  PrevContext as UpdateContext,\n  QueryResponse,\n  SuccessErrorNotification,\n  UpdateManyResponse,\n} from \"../../interfaces\";\nimport {\n  useLoadingOvertime,\n  UseLoadingOvertimeOptionsProps,\n  UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\ntype UpdateManyParams<TData, TError, TVariables> = {\n  /**\n   * ids for mutation function\n   */\n  ids: BaseKey[];\n  /**\n   * Resource name for API data interactions\n   */\n  resource: string;\n  /**\n   * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n   */\n  mutationMode?: MutationMode;\n  /**\n   * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n   */\n  undoableTimeout?: number;\n  /**\n   * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n   */\n  onCancel?: (cancelMutation: () => void) => void;\n  /**\n   * Values for mutation function\n   */\n  values: TVariables;\n  /**\n   * meta data for `dataProvider`\n   */\n  meta?: MetaQuery;\n  /**\n   * meta data for `dataProvider`\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   * @default \"default\"\n   */\n  dataProviderName?: string;\n  /**\n   *  You can use it to manage the invalidations that will occur at the end of the mutation.\n   */\n  invalidates?: Array<keyof IQueryKeys>;\n  /**\n   * You can use it to manage the invalidations that will occur at the end of the mutation.\n   * @default {\n   *   list: true,\n   *   many: true,\n   *   detail: true,\n   * }\n   */\n  optimisticUpdateMap?: OptimisticUpdateManyMapType<TData, TVariables>;\n} & SuccessErrorNotification<\n  UpdateManyResponse<TData>,\n  TError,\n  { ids: BaseKey[]; values: TVariables }\n>;\n\ntype UseUpdateManyReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = UseMutationResult<\n  UpdateManyResponse<TData>,\n  TError,\n  UpdateManyParams<TData, TError, TVariables>,\n  UpdateContext<TData>\n> &\n  UseLoadingOvertimeReturnType;\n\nexport type UseUpdateManyProps<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = {\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      UpdateManyResponse<TData>,\n      TError,\n      UpdateManyParams<TData, TError, TVariables>,\n      UpdateContext<TData>\n    >,\n    \"mutationFn\" | \"onError\" | \"onSuccess\" | \"onSettled\" | \"onMutate\"\n  >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useUpdateMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for multiple update mutations.\n *\n * It uses `updateMany` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useUpdateMany} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useUpdateMany = <\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n>({\n  mutationOptions,\n  overtimeOptions,\n}: UseUpdateManyProps<TData, TError, TVariables> = {}): UseUpdateManyReturnType<\n  TData,\n  TError,\n  TVariables\n> => {\n  const { resources, select } = useResource();\n  const queryClient = useQueryClient();\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  const {\n    mutationMode: mutationModeContext,\n    undoableTimeout: undoableTimeoutContext,\n  } = useMutationMode();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const { notificationDispatch } = useCancelNotification();\n  const publish = usePublish();\n  const handleNotification = useHandleNotification();\n  const invalidateStore = useInvalidate();\n  const { log } = useLog();\n  const getMeta = useMeta();\n  const {\n    options: { textTransformers },\n  } = useRefineContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutation = useMutation<\n    UpdateManyResponse<TData>,\n    TError,\n    UpdateManyParams<TData, TError, TVariables>,\n    UpdateContext<TData>\n  >({\n    mutationFn: ({\n      ids,\n      values,\n      resource: resourceName,\n      onCancel,\n      mutationMode,\n      undoableTimeout,\n      meta,\n      metaData,\n      dataProviderName,\n    }: UpdateManyParams<TData, TError, TVariables>) => {\n      const { resource, identifier } = select(resourceName);\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const mutationModePropOrContext = mutationMode ?? mutationModeContext;\n\n      const undoableTimeoutPropOrContext =\n        undoableTimeout ?? undoableTimeoutContext;\n\n      const selectedDataProvider = dataProvider(\n        pickDataProvider(identifier, dataProviderName, resources),\n      );\n\n      const mutationFn = () => {\n        if (selectedDataProvider.updateMany) {\n          return selectedDataProvider.updateMany<TData, TVariables>({\n            resource: resource.name,\n            ids,\n            variables: values,\n            meta: combinedMeta,\n            metaData: combinedMeta,\n          });\n        }\n        return handleMultiple(\n          ids.map((id) =>\n            selectedDataProvider.update<TData, TVariables>({\n              resource: resource.name,\n              id,\n              variables: values,\n              meta: combinedMeta,\n              metaData: combinedMeta,\n            }),\n          ),\n        );\n      };\n\n      if (!(mutationModePropOrContext === \"undoable\")) {\n        return mutationFn();\n      }\n\n      const updatePromise = new Promise<UpdateManyResponse<TData>>(\n        (resolve, reject) => {\n          const doMutation = () => {\n            mutationFn()\n              .then((result) => resolve(result))\n              .catch((err) => reject(err));\n          };\n\n          const cancelMutation = () => {\n            reject({ message: \"mutationCancelled\" });\n          };\n\n          if (onCancel) {\n            onCancel(cancelMutation);\n          }\n\n          notificationDispatch({\n            type: ActionTypes.ADD,\n            payload: {\n              id: ids,\n              resource: identifier,\n              cancelMutation: cancelMutation,\n              doMutation: doMutation,\n              seconds: undoableTimeoutPropOrContext,\n              isSilent: !!onCancel,\n            },\n          });\n        },\n      );\n      return updatePromise;\n    },\n    onMutate: async ({\n      resource: resourceName,\n      ids,\n      values,\n      mutationMode,\n      dataProviderName,\n      meta,\n      metaData,\n      optimisticUpdateMap = { list: true, many: true, detail: true },\n    }) => {\n      const { identifier } = select(resourceName);\n      const {\n        gqlMutation: _,\n        gqlQuery: __,\n        ...preferredMeta\n      } = pickNotDeprecated(meta, metaData) ?? {};\n\n      const queryKey = queryKeysReplacement(preferLegacyKeys)(\n        identifier,\n        pickDataProvider(identifier, dataProviderName, resources),\n        preferredMeta,\n      );\n\n      const resourceKeys = keys()\n        .data(pickDataProvider(identifier, dataProviderName, resources))\n        .resource(identifier);\n\n      const mutationModePropOrContext = mutationMode ?? mutationModeContext;\n\n      await queryClient.cancelQueries(\n        resourceKeys.get(preferLegacyKeys),\n        undefined,\n        {\n          silent: true,\n        },\n      );\n\n      const previousQueries = queryClient.getQueriesData<QueryResponse<TData>>(\n        resourceKeys.get(preferLegacyKeys),\n      );\n\n      if (mutationModePropOrContext !== \"pessimistic\") {\n        if (optimisticUpdateMap.list) {\n          // Set the previous queries to the new ones:\n          queryClient.setQueriesData(\n            resourceKeys\n              .action(\"list\")\n              .params(preferredMeta ?? {})\n              .get(preferLegacyKeys),\n            (previous?: GetListResponse<TData> | null) => {\n              if (typeof optimisticUpdateMap.list === \"function\") {\n                return optimisticUpdateMap.list(previous, values, ids);\n              }\n\n              if (!previous) {\n                return null;\n              }\n\n              const data = previous.data.map((record: TData) => {\n                if (\n                  record.id !== undefined &&\n                  ids\n                    .filter((id) => id !== undefined)\n                    .map(String)\n                    .includes(record.id.toString())\n                ) {\n                  return {\n                    ...record,\n                    ...values,\n                  };\n                }\n\n                return record;\n              });\n\n              return {\n                ...previous,\n                data,\n              };\n            },\n          );\n        }\n\n        if (optimisticUpdateMap.many) {\n          queryClient.setQueriesData(\n            resourceKeys.action(\"many\").get(preferLegacyKeys),\n            (previous?: GetManyResponse<TData> | null) => {\n              if (typeof optimisticUpdateMap.many === \"function\") {\n                return optimisticUpdateMap.many(previous, values, ids);\n              }\n\n              if (!previous) {\n                return null;\n              }\n\n              const data = previous.data.map((record: TData) => {\n                if (\n                  record.id !== undefined &&\n                  ids\n                    .filter((id) => id !== undefined)\n                    .map(String)\n                    .includes(record.id.toString())\n                ) {\n                  return {\n                    ...record,\n                    ...values,\n                  };\n                }\n                return record;\n              });\n              return {\n                ...previous,\n                data,\n              };\n            },\n          );\n        }\n\n        if (optimisticUpdateMap.detail) {\n          for (const id of ids) {\n            queryClient.setQueriesData(\n              resourceKeys\n                .action(\"one\")\n                .id(id)\n                .params(preferredMeta ?? {})\n                .get(preferLegacyKeys),\n              (previous?: GetOneResponse<TData> | null) => {\n                if (typeof optimisticUpdateMap.detail === \"function\") {\n                  return optimisticUpdateMap.detail(previous, values, id);\n                }\n\n                if (!previous) {\n                  return null;\n                }\n\n                const data = {\n                  ...previous.data,\n                  ...values,\n                };\n                return {\n                  ...previous,\n                  data,\n                };\n              },\n            );\n          }\n        }\n      }\n\n      return {\n        previousQueries,\n        queryKey,\n      };\n    },\n    onSettled: (\n      _data,\n      _error,\n      { ids, resource: resourceName, dataProviderName },\n    ) => {\n      const { identifier } = select(resourceName);\n\n      // invalidate the cache for the list and many queries:\n      invalidateStore({\n        resource: identifier,\n        invalidates: [\"list\", \"many\"],\n        dataProviderName: pickDataProvider(\n          identifier,\n          dataProviderName,\n          resources,\n        ),\n      });\n\n      ids.forEach((id) =>\n        invalidateStore({\n          resource: identifier,\n          invalidates: [\"detail\"],\n          dataProviderName: pickDataProvider(\n            identifier,\n            dataProviderName,\n            resources,\n          ),\n          id,\n        }),\n      );\n\n      notificationDispatch({\n        type: ActionTypes.REMOVE,\n        payload: { id: ids, resource: identifier },\n      });\n    },\n    onSuccess: (\n      data,\n      {\n        ids,\n        resource: resourceName,\n        meta,\n        metaData,\n        dataProviderName: dataProviderNameFromProp,\n        successNotification,\n        values,\n      },\n      context,\n    ) => {\n      const { resource, identifier } = select(resourceName);\n      const resourceSingular = textTransformers.singular(identifier);\n\n      const dataProviderName = pickDataProvider(\n        identifier,\n        dataProviderNameFromProp,\n        resources,\n      );\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(data, { ids, values }, identifier)\n          : successNotification;\n\n      handleNotification(notificationConfig, {\n        key: `${ids}-${identifier}-notification`,\n        description: translate(\"notifications.success\", \"Successful\"),\n        message: translate(\n          \"notifications.editSuccess\",\n          {\n            resource: translate(`${identifier}.${identifier}`, identifier),\n          },\n          `Successfully updated ${resourceSingular}`,\n        ),\n        type: \"success\",\n      });\n\n      publish?.({\n        channel: `resources/${resource.name}`,\n        type: \"updated\",\n        payload: {\n          ids: ids.map(String),\n        },\n        date: new Date(),\n        meta: {\n          ...combinedMeta,\n          dataProviderName,\n        },\n      });\n\n      const previousData: any[] = [];\n      if (context) {\n        ids.forEach((id) => {\n          const queryData = queryClient.getQueryData<UpdateManyResponse<TData>>(\n            context.queryKey.detail(id),\n          );\n\n          previousData.push(\n            Object.keys(values || {}).reduce<any>((acc, item: any) => {\n              acc[item] = queryData?.data?.[item];\n              return acc;\n            }, {}),\n          );\n        });\n      }\n\n      const {\n        fields: _fields,\n        operation: _operation,\n        variables: _variables,\n        ...rest\n      } = combinedMeta || {};\n      log?.mutate({\n        action: \"updateMany\",\n        resource: resource.name,\n        data: values,\n        previousData,\n        meta: {\n          ids,\n          dataProviderName,\n          ...rest,\n        },\n      });\n    },\n    onError: (\n      err: TError,\n      { ids, resource: resourceName, errorNotification, values },\n      context,\n    ) => {\n      const { identifier } = select(resourceName);\n\n      // set back the queries to the context:\n      if (context) {\n        for (const query of context.previousQueries) {\n          queryClient.setQueryData(query[0], query[1]);\n        }\n      }\n\n      if (err.message !== \"mutationCancelled\") {\n        checkError?.(err);\n\n        const resourceSingular = textTransformers.singular(identifier);\n\n        const notificationConfig =\n          typeof errorNotification === \"function\"\n            ? errorNotification(err, { ids, values }, identifier)\n            : errorNotification;\n\n        handleNotification(notificationConfig, {\n          key: `${ids}-${identifier}-updateMany-error-notification`,\n          message: translate(\n            \"notifications.editError\",\n            {\n              resource: resourceSingular,\n              statusCode: err.statusCode,\n            },\n            `Error when updating ${resourceSingular} (status code: ${err.statusCode})`,\n          ),\n          description: err.message,\n          type: \"error\",\n        });\n      }\n    },\n    mutationKey: keys().data().mutation(\"updateMany\").get(preferLegacyKeys),\n    ...mutationOptions,\n    meta: {\n      ...mutationOptions?.meta,\n      ...getXRay(\"useUpdateMany\", preferLegacyKeys),\n    },\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: mutation.isLoading,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  return { ...mutation, overtime: { elapsedTime } };\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  useMutation,\n  UseMutationOptions,\n  UseMutationResult,\n  useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { ActionTypes } from \"@contexts/undoableQueue\";\nimport {\n  handleMultiple,\n  pickDataProvider,\n  pickNotDeprecated,\n  queryKeysReplacement,\n  useActiveAuthProvider,\n} from \"@definitions\";\nimport {\n  useCancelNotification,\n  useDataProvider,\n  useHandleNotification,\n  useInvalidate,\n  useLog,\n  useMeta,\n  useMutationMode,\n  useOnError,\n  usePublish,\n  useRefineContext,\n  useResource,\n  useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n  BaseKey,\n  BaseRecord,\n  DeleteManyResponse,\n  GetListResponse,\n  HttpError,\n  IQueryKeys,\n  MetaQuery,\n  MutationMode,\n  PrevContext as DeleteContext,\n  PreviousQuery,\n  SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n  useLoadingOvertime,\n  UseLoadingOvertimeOptionsProps,\n  UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type DeleteManyParams<TData, TError, TVariables> = {\n  /**\n   * ids for mutation function\n   */\n  ids: BaseKey[];\n  /**\n   * Resource name for API data interactions\n   */\n  resource: string;\n  /**\n   * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n   */\n  mutationMode?: MutationMode;\n  /**\n   * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n   */\n  undoableTimeout?: number;\n  /**\n   * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n   */\n  onCancel?: (cancelMutation: () => void) => void;\n  /**\n   * Metadata query for dataProvider\n   */\n  meta?: MetaQuery;\n  /**\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   * @default \"default\"\n   */\n  dataProviderName?: string;\n  /**\n   *  You can use it to manage the invalidations that will occur at the end of the mutation.\n   */\n  invalidates?: Array<keyof IQueryKeys>;\n  /**\n   * Values for mutation function\n   */\n  values?: TVariables;\n} & SuccessErrorNotification<DeleteManyResponse<TData>, TError, BaseKey[]>;\n\nexport type UseDeleteManyReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError = HttpError,\n  TVariables = {},\n> = UseMutationResult<\n  DeleteManyResponse<TData>,\n  TError,\n  DeleteManyParams<TData, TError, TVariables>,\n  unknown\n> &\n  UseLoadingOvertimeReturnType;\n\nexport type UseDeleteManyProps<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = {\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      DeleteManyResponse<TData>,\n      TError,\n      DeleteManyParams<TData, TError, TVariables>,\n      DeleteContext<TData>\n    >,\n    \"mutationFn\" | \"onError\" | \"onSuccess\" | \"onSettled\" | \"onMutate\"\n  >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useDeleteMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for multiple delete mutations.\n *\n * It uses `deleteMany` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useDeleteMany} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n *\n */\nexport const useDeleteMany = <\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n>({\n  mutationOptions,\n  overtimeOptions,\n}: UseDeleteManyProps<TData, TError, TVariables> = {}): UseDeleteManyReturnType<\n  TData,\n  TError,\n  TVariables\n> => {\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  const {\n    mutationMode: mutationModeContext,\n    undoableTimeout: undoableTimeoutContext,\n  } = useMutationMode();\n  const dataProvider = useDataProvider();\n  const { notificationDispatch } = useCancelNotification();\n  const translate = useTranslate();\n  const publish = usePublish();\n  const handleNotification = useHandleNotification();\n  const invalidateStore = useInvalidate();\n  const { log } = useLog();\n  const { resources, select } = useResource();\n  const queryClient = useQueryClient();\n  const getMeta = useMeta();\n  const {\n    options: { textTransformers },\n  } = useRefineContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutation = useMutation<\n    DeleteManyResponse<TData>,\n    TError,\n    DeleteManyParams<TData, TError, TVariables>,\n    DeleteContext<TData>\n  >({\n    mutationFn: ({\n      resource: resourceName,\n      ids,\n      mutationMode,\n      undoableTimeout,\n      onCancel,\n      meta,\n      metaData,\n      dataProviderName,\n      values,\n    }: DeleteManyParams<TData, TError, TVariables>) => {\n      const { resource, identifier } = select(resourceName);\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const mutationModePropOrContext = mutationMode ?? mutationModeContext;\n\n      const undoableTimeoutPropOrContext =\n        undoableTimeout ?? undoableTimeoutContext;\n\n      const selectedDataProvider = dataProvider(\n        pickDataProvider(identifier, dataProviderName, resources),\n      );\n\n      const mutationFn = () => {\n        if (selectedDataProvider.deleteMany) {\n          return selectedDataProvider.deleteMany<TData, TVariables>({\n            resource: resource.name,\n            ids,\n            meta: combinedMeta,\n            metaData: combinedMeta,\n            variables: values,\n          });\n        }\n        return handleMultiple(\n          ids.map((id) =>\n            selectedDataProvider.deleteOne<TData, TVariables>({\n              resource: resource.name,\n              id,\n              meta: combinedMeta,\n              metaData: combinedMeta,\n              variables: values,\n            }),\n          ),\n        );\n      };\n\n      if (!(mutationModePropOrContext === \"undoable\")) {\n        return mutationFn();\n      }\n\n      const updatePromise = new Promise<DeleteManyResponse<TData>>(\n        (resolve, reject) => {\n          const doMutation = () => {\n            mutationFn()\n              .then((result) => resolve(result))\n              .catch((err) => reject(err));\n          };\n\n          const cancelMutation = () => {\n            reject({ message: \"mutationCancelled\" });\n          };\n\n          if (onCancel) {\n            onCancel(cancelMutation);\n          }\n\n          notificationDispatch({\n            type: ActionTypes.ADD,\n            payload: {\n              id: ids,\n              resource: identifier,\n              cancelMutation: cancelMutation,\n              doMutation: doMutation,\n              seconds: undoableTimeoutPropOrContext,\n              isSilent: !!onCancel,\n            },\n          });\n        },\n      );\n      return updatePromise;\n    },\n    onMutate: async ({\n      ids,\n      resource: resourceName,\n      mutationMode,\n      dataProviderName,\n      meta,\n      metaData,\n    }) => {\n      const { identifier } = select(resourceName);\n\n      const {\n        gqlMutation: _,\n        gqlQuery: __,\n        ...preferredMeta\n      } = pickNotDeprecated(meta, metaData) ?? {};\n\n      const queryKey = queryKeysReplacement(preferLegacyKeys)(\n        identifier,\n        pickDataProvider(identifier, dataProviderName, resources),\n        preferredMeta,\n      );\n\n      const resourceKeys = keys()\n        .data(pickDataProvider(identifier, dataProviderName, resources))\n        .resource(identifier);\n\n      const mutationModePropOrContext = mutationMode ?? mutationModeContext;\n\n      await queryClient.cancelQueries(\n        resourceKeys.get(preferLegacyKeys),\n        undefined,\n        {\n          silent: true,\n        },\n      );\n\n      const previousQueries: PreviousQuery<TData>[] =\n        queryClient.getQueriesData(resourceKeys.get(preferLegacyKeys));\n\n      if (mutationModePropOrContext !== \"pessimistic\") {\n        // Set the previous queries to the new ones:\n        queryClient.setQueriesData(\n          resourceKeys\n            .action(\"list\")\n            .params(preferredMeta ?? {})\n            .get(preferLegacyKeys),\n          (previous?: GetListResponse<TData> | null) => {\n            if (!previous) {\n              return null;\n            }\n\n            const data = previous.data.filter(\n              (item) =>\n                item.id && !ids.map(String).includes(item.id.toString()),\n            );\n\n            return {\n              data,\n              total: previous.total - 1,\n            };\n          },\n        );\n\n        queryClient.setQueriesData(\n          resourceKeys.action(\"many\").get(preferLegacyKeys),\n          (previous?: GetListResponse<TData> | null) => {\n            if (!previous) {\n              return null;\n            }\n\n            const data = previous.data.filter((record: TData) => {\n              if (record.id) {\n                return !ids.map(String).includes(record.id.toString());\n              }\n              return false;\n            });\n\n            return {\n              ...previous,\n              data,\n            };\n          },\n        );\n\n        for (const id of ids) {\n          queryClient.setQueriesData(\n            resourceKeys\n              .action(\"one\")\n              .id(id)\n              .params(preferredMeta)\n              .get(preferLegacyKeys),\n            (previous?: any | null) => {\n              if (!previous || previous.data.id === id) {\n                return null;\n              }\n              return {\n                ...previous,\n              };\n            },\n          );\n        }\n      }\n\n      return {\n        previousQueries,\n        queryKey,\n      };\n    },\n    // Always refetch after error or success:\n    onSettled: (\n      _data,\n      _error,\n      {\n        resource: resourceName,\n        ids,\n        dataProviderName,\n        invalidates = [\"list\", \"many\"],\n      },\n    ) => {\n      const { identifier } = select(resourceName);\n\n      // invalidate the cache for the list and many queries:\n      invalidateStore({\n        resource: identifier,\n        dataProviderName: pickDataProvider(\n          identifier,\n          dataProviderName,\n          resources,\n        ),\n        invalidates,\n      });\n\n      notificationDispatch({\n        type: ActionTypes.REMOVE,\n        payload: { id: ids, resource: identifier },\n      });\n    },\n    onSuccess: (\n      _data,\n      {\n        ids,\n        resource: resourceName,\n        meta,\n        metaData,\n        dataProviderName: dataProviderNameFromProp,\n        successNotification,\n      },\n      context,\n    ) => {\n      const { resource, identifier } = select(resourceName);\n\n      const dataProviderName = pickDataProvider(\n        identifier,\n        dataProviderNameFromProp,\n        resources,\n      );\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      // Remove the queries from the cache:\n      ids.forEach((id) =>\n        queryClient.removeQueries(context?.queryKey.detail(id)),\n      );\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(_data, ids, identifier)\n          : successNotification;\n\n      handleNotification(notificationConfig, {\n        key: `${ids}-${identifier}-notification`,\n        description: translate(\"notifications.success\", \"Success\"),\n        message: translate(\n          \"notifications.deleteSuccess\",\n          {\n            resource: translate(`${identifier}.${identifier}`, identifier),\n          },\n          `Successfully deleted ${identifier}`,\n        ),\n        type: \"success\",\n      });\n\n      publish?.({\n        channel: `resources/${resource.name}`,\n        type: \"deleted\",\n        payload: { ids },\n        date: new Date(),\n        meta: {\n          ...combinedMeta,\n          dataProviderName,\n        },\n      });\n\n      const {\n        fields: _fields,\n        operation: _operation,\n        variables: _variables,\n        ...rest\n      } = combinedMeta || {};\n      log?.mutate({\n        action: \"deleteMany\",\n        resource: resource.name,\n        meta: {\n          ids,\n          dataProviderName,\n          ...rest,\n        },\n      });\n\n      // Remove the queries from the cache:\n      ids.forEach((id) =>\n        queryClient.removeQueries(context?.queryKey.detail(id)),\n      );\n    },\n    onError: (\n      err,\n      { ids, resource: resourceName, errorNotification },\n      context,\n    ) => {\n      const { identifier } = select(resourceName);\n\n      // set back the queries to the context:\n      if (context) {\n        for (const query of context.previousQueries) {\n          queryClient.setQueryData(query[0], query[1]);\n        }\n      }\n\n      if (err.message !== \"mutationCancelled\") {\n        checkError(err);\n        const resourceSingular = textTransformers.singular(identifier);\n\n        const notificationConfig =\n          typeof errorNotification === \"function\"\n            ? errorNotification(err, ids, identifier)\n            : errorNotification;\n\n        handleNotification(notificationConfig, {\n          key: `${ids}-${identifier}-notification`,\n          message: translate(\n            \"notifications.deleteError\",\n            {\n              resource: resourceSingular,\n              statusCode: err.statusCode,\n            },\n            `Error (status code: ${err.statusCode})`,\n          ),\n          description: err.message,\n          type: \"error\",\n        });\n      }\n    },\n    mutationKey: keys().data().mutation(\"deleteMany\").get(preferLegacyKeys),\n    ...mutationOptions,\n    meta: {\n      ...mutationOptions?.meta,\n      ...getXRay(\"useDeleteMany\", preferLegacyKeys),\n    },\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: mutation.isLoading,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  return { ...mutation, overtime: { elapsedTime } };\n};\n","import { pickNotDeprecated } from \"@definitions/index\";\nimport { useDataProvider, useResource } from \"@hooks\";\n\nexport const useApiUrl = (dataProviderName?: string): string => {\n  const dataProvider = useDataProvider();\n  const { resource } = useResource();\n\n  const { getApiUrl } = dataProvider(\n    dataProviderName ??\n      pickNotDeprecated(resource?.meta, resource?.options)?.dataProviderName,\n  );\n\n  return getApiUrl();\n};\n","import {\n  QueryObserverResult,\n  useQuery,\n  UseQueryOptions,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { pickNotDeprecated, useActiveAuthProvider } from \"@definitions/helpers\";\nimport {\n  useDataProvider,\n  useHandleNotification,\n  useMeta,\n  useOnError,\n  useTranslate,\n} from \"@hooks\";\nimport {\n  BaseRecord,\n  CrudFilters,\n  CrudSorting,\n  CustomResponse,\n  HttpError,\n  MetaQuery,\n  Prettify,\n  SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n  useLoadingOvertime,\n  UseLoadingOvertimeOptionsProps,\n  UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\ninterface UseCustomConfig<TQuery, TPayload> {\n  /**\n   * @deprecated `sort` is deprecated, use `sorters` instead.\n   */\n  sort?: CrudSorting;\n  sorters?: CrudSorting;\n  filters?: CrudFilters;\n  query?: TQuery;\n  payload?: TPayload;\n  headers?: {};\n}\n\nexport type UseCustomProps<TQueryFnData, TError, TQuery, TPayload, TData> = {\n  /**\n   * request's URL\n   */\n  url: string;\n  /**\n   * request's method (`GET`, `POST`, etc.)\n   */\n  method: \"get\" | \"delete\" | \"head\" | \"options\" | \"post\" | \"put\" | \"patch\";\n  /**\n   * The config of your request. You can send headers, payload, query, filters and sorters using this field\n   */\n  config?: UseCustomConfig<TQuery, TPayload>;\n  /**\n   * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\"\n   */\n  queryOptions?: UseQueryOptions<\n    CustomResponse<TQueryFnData>,\n    TError,\n    CustomResponse<TData>\n  >;\n  /**\n   * meta data for `dataProvider`\n   */\n  meta?: MetaQuery;\n  /**\n   * meta data for `dataProvider`\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   */\n  dataProviderName?: string;\n} & SuccessErrorNotification<\n  CustomResponse<TData>,\n  TError,\n  Prettify<UseCustomConfig<TQuery, TPayload> & MetaQuery>\n> &\n  UseLoadingOvertimeOptionsProps;\n\n/**\n * `useCustom` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for custom requests.\n *\n * It uses the `custom` method from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCustom} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TQuery - Values for query params\n * @typeParam TPayload - Values for params\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useCustom = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TQuery = unknown,\n  TPayload = unknown,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  url,\n  method,\n  config,\n  queryOptions,\n  successNotification,\n  errorNotification,\n  meta,\n  metaData,\n  dataProviderName,\n  overtimeOptions,\n}: UseCustomProps<\n  TQueryFnData,\n  TError,\n  TQuery,\n  TPayload,\n  TData\n>): QueryObserverResult<CustomResponse<TData>, TError> &\n  UseLoadingOvertimeReturnType => {\n  const dataProvider = useDataProvider();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const translate = useTranslate();\n  const handleNotification = useHandleNotification();\n  const getMeta = useMeta();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const preferredMeta = pickNotDeprecated(meta, metaData);\n\n  const { custom } = dataProvider(dataProviderName);\n\n  const combinedMeta = getMeta({ meta: preferredMeta });\n\n  if (custom) {\n    const queryResponse = useQuery<\n      CustomResponse<TQueryFnData>,\n      TError,\n      CustomResponse<TData>\n    >({\n      queryKey: keys()\n        .data(dataProviderName)\n        .mutation(\"custom\")\n        .params({\n          method,\n          url,\n          ...config,\n          ...(preferredMeta || {}),\n        })\n        .get(preferLegacyKeys),\n      queryFn: ({ queryKey, pageParam, signal }) =>\n        custom<TQueryFnData>({\n          url,\n          method,\n          ...config,\n          meta: {\n            ...combinedMeta,\n            queryContext: {\n              queryKey,\n              pageParam,\n              signal,\n            },\n          },\n          metaData: {\n            ...combinedMeta,\n            queryContext: {\n              queryKey,\n              pageParam,\n              signal,\n            },\n          },\n        }),\n      ...queryOptions,\n      onSuccess: (data) => {\n        queryOptions?.onSuccess?.(data);\n\n        const notificationConfig =\n          typeof successNotification === \"function\"\n            ? successNotification(data, {\n                ...config,\n                ...combinedMeta,\n              })\n            : successNotification;\n\n        handleNotification(notificationConfig);\n      },\n      onError: (err: TError) => {\n        checkError(err);\n        queryOptions?.onError?.(err);\n\n        const notificationConfig =\n          typeof errorNotification === \"function\"\n            ? errorNotification(err, {\n                ...config,\n                ...combinedMeta,\n              })\n            : errorNotification;\n\n        handleNotification(notificationConfig, {\n          key: `${method}-notification`,\n          message: translate(\n            \"notifications.error\",\n            { statusCode: err.statusCode },\n            `Error (status code: ${err.statusCode})`,\n          ),\n          description: err.message,\n          type: \"error\",\n        });\n      },\n      meta: {\n        ...queryOptions?.meta,\n        ...getXRay(\"useCustom\", preferLegacyKeys),\n      },\n    });\n    const { elapsedTime } = useLoadingOvertime({\n      isLoading: queryResponse.isFetching,\n      interval: overtimeOptions?.interval,\n      onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...queryResponse, overtime: { elapsedTime } };\n  }\n  throw Error(\"Not implemented custom on data provider.\");\n};\n","import {\n  useMutation,\n  UseMutationOptions,\n  UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport {\n  useDataProvider,\n  useHandleNotification,\n  useTranslate,\n  useOnError,\n  useMeta,\n} from \"@hooks\";\nimport {\n  CreateResponse,\n  BaseRecord,\n  HttpError,\n  SuccessErrorNotification,\n  MetaQuery,\n  Prettify,\n} from \"../../interfaces\";\nimport { pickNotDeprecated, useActiveAuthProvider } from \"@definitions/helpers\";\nimport {\n  useLoadingOvertime,\n  UseLoadingOvertimeOptionsProps,\n  UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\ninterface UseCustomMutationConfig {\n  headers?: {};\n}\n\ntype useCustomMutationParams<TData, TError, TVariables> = {\n  url: string;\n  method: \"post\" | \"put\" | \"patch\" | \"delete\";\n  values: TVariables;\n  /**\n   * Meta data for `dataProvider`\n   */\n  meta?: MetaQuery;\n  /**\n   * Meta data for `dataProvider`\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  dataProviderName?: string;\n  config?: UseCustomMutationConfig;\n} & SuccessErrorNotification<\n  CreateResponse<TData>,\n  TError,\n  Prettify<UseCustomMutationConfig & MetaQuery>\n>;\n\nexport type UseCustomMutationReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = UseMutationResult<\n  CreateResponse<TData>,\n  TError,\n  useCustomMutationParams<TData, TError, TVariables>,\n  unknown\n>;\n\nexport type UseCustomMutationProps<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = {\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      CreateResponse<TData>,\n      TError,\n      useCustomMutationParams<TData, TError, TVariables>,\n      unknown\n    >,\n    \"mutationFn\" | \"onError\" | \"onSuccess\"\n  >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useCustomMutation` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for create mutations.\n *\n * It uses the `custom` method from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCustomMutation} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\n\nexport const useCustomMutation = <\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n>({\n  mutationOptions,\n  overtimeOptions,\n}: UseCustomMutationProps<\n  TData,\n  TError,\n  TVariables\n> = {}): UseCustomMutationReturnType<TData, TError, TVariables> &\n  UseLoadingOvertimeReturnType => {\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const handleNotification = useHandleNotification();\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  const getMeta = useMeta();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutation = useMutation<\n    CreateResponse<TData>,\n    TError,\n    useCustomMutationParams<TData, TError, TVariables>,\n    unknown\n  >(\n    ({\n      url,\n      method,\n      values,\n      meta,\n      metaData,\n      dataProviderName,\n      config,\n    }: useCustomMutationParams<TData, TError, TVariables>) => {\n      const combinedMeta = getMeta({\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const { custom } = dataProvider(dataProviderName);\n\n      if (custom) {\n        return custom<TData>({\n          url,\n          method,\n          payload: values,\n          meta: combinedMeta,\n          metaData: combinedMeta,\n          headers: { ...config?.headers },\n        });\n      }\n\n      throw Error(\"Not implemented custom on data provider.\");\n    },\n    {\n      onSuccess: (\n        data,\n        {\n          successNotification: successNotificationFromProp,\n          config,\n          meta,\n          metaData,\n        },\n      ) => {\n        const notificationConfig =\n          typeof successNotificationFromProp === \"function\"\n            ? successNotificationFromProp(data, {\n                ...config,\n                ...(pickNotDeprecated(meta, metaData) || {}),\n              })\n            : successNotificationFromProp;\n\n        handleNotification(notificationConfig);\n      },\n      onError: (\n        err: TError,\n        {\n          errorNotification: errorNotificationFromProp,\n          method,\n          config,\n          meta,\n          metaData,\n        },\n      ) => {\n        checkError(err);\n\n        const notificationConfig =\n          typeof errorNotificationFromProp === \"function\"\n            ? errorNotificationFromProp(err, {\n                ...config,\n                ...(pickNotDeprecated(meta, metaData) || {}),\n              })\n            : errorNotificationFromProp;\n\n        handleNotification(notificationConfig, {\n          key: `${method}-notification`,\n          message: translate(\n            \"notifications.error\",\n            { statusCode: err.statusCode },\n            `Error (status code: ${err.statusCode})`,\n          ),\n          description: err.message,\n          type: \"error\",\n        });\n      },\n      mutationKey: keys()\n        .data()\n        .mutation(\"customMutation\")\n        .get(preferLegacyKeys),\n      ...mutationOptions,\n      meta: {\n        ...mutationOptions?.meta,\n        ...getXRay(\"useCustomMutation\", preferLegacyKeys),\n      },\n    },\n  );\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: mutation.isLoading,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  return { ...mutation, overtime: { elapsedTime } };\n};\n","import { useCallback, useContext } from \"react\";\n\nimport { DataContext } from \"@contexts/data\";\nimport {\n  IDataContextProvider,\n  IDataMultipleContextProvider,\n} from \"../../interfaces\";\n\nexport const useDataProvider = (): ((\n  /**\n   * The name of the `data provider` you want to access\n   */\n  dataProviderName?: string,\n) => IDataContextProvider) => {\n  const context =\n    useContext<Partial<IDataMultipleContextProvider>>(DataContext);\n\n  const handleDataProvider = useCallback(\n    (dataProviderName?: string) => {\n      if (dataProviderName) {\n        const dataProvider = context?.[dataProviderName];\n        if (!dataProvider) {\n          throw new Error(`\"${dataProviderName}\" Data provider not found`);\n        }\n        return context[dataProviderName];\n      }\n      if (context.default) {\n        return context.default;\n      }\n      throw new Error(\n        `There is no \"default\" data provider. Please pass dataProviderName.`,\n      );\n    },\n    [context],\n  );\n\n  return handleDataProvider;\n};\n","import React from \"react\";\nimport { ReactNode } from \"react\";\n\nimport {\n  IDataContextProvider,\n  IDataMultipleContextProvider,\n} from \"../../interfaces\";\n\nexport const defaultDataProvider = () => {\n  return {};\n};\n\nexport const DataContext = React.createContext<\n  Partial<IDataMultipleContextProvider>\n>(defaultDataProvider());\n\ntype Props = React.PropsWithChildren<\n  Partial<IDataMultipleContextProvider> | IDataContextProvider\n>;\n\nexport const DataContextProvider: React.FC<Props> = ({ children, ...rest }) => {\n  let dataProviders;\n  if (!rest.getList || !rest.getOne) {\n    dataProviders = rest as IDataMultipleContextProvider;\n  } else {\n    dataProviders = {\n      default: rest,\n    } as IDataMultipleContextProvider;\n  }\n  return (\n    <DataContext.Provider value={dataProviders}>\n      {children}\n    </DataContext.Provider>\n  );\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  InfiniteData,\n  InfiniteQueryObserverResult,\n  useInfiniteQuery,\n  UseInfiniteQueryOptions,\n} from \"@tanstack/react-query\";\n\nimport {\n  getNextPageParam,\n  getPreviousPageParam,\n  handlePaginationParams,\n  pickDataProvider,\n  pickNotDeprecated,\n  useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n  useDataProvider,\n  useHandleNotification,\n  useMeta,\n  useOnError,\n  useResource,\n  useResourceSubscription,\n  useTranslate,\n} from \"@hooks\";\nimport {\n  BaseRecord,\n  CrudFilters,\n  CrudSorting,\n  GetListResponse,\n  HttpError,\n  LiveModeProps,\n  MetaQuery,\n  Pagination,\n  Prettify,\n  SuccessErrorNotification,\n} from \"../../interfaces\";\n\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n  useLoadingOvertime,\n  UseLoadingOvertimeOptionsProps,\n  UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport interface UseInfiniteListConfig {\n  pagination?: Pagination;\n  hasPagination?: boolean;\n  sort?: CrudSorting;\n  filters?: CrudFilters;\n}\n\ntype BaseInfiniteListProps = {\n  /**\n   *  Metadata query for `dataProvider`\n   */\n  meta?: MetaQuery;\n  /**\n   *  Metadata query for `dataProvider`\n   *  @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * Configuration for pagination, sorting and filtering\n   * @type [`useInfiniteListConfig`](/docs/api-reference/core/hooks/data/useInfiniteList/#config-parameters)\n   * @deprecated `config` property is deprecated. Use `pagination`, `hasPagination`, `sorters` and `filters` instead.\n   */\n  config?: UseInfiniteListConfig;\n  /**\n   * Pagination properties\n   */\n  pagination?: Pagination;\n  /**\n   * Whether to use server-side pagination or not\n   * @deprecated `hasPagination` property is deprecated. Use `pagination.mode` instead.\n   */\n  hasPagination?: boolean;\n  /**\n   * Sorter parameters\n   */\n  sorters?: CrudSorting;\n  /**\n   * Filter parameters\n   */\n  filters?: CrudFilters;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use\n   */\n  dataProviderName?: string;\n};\n\nexport type UseInfiniteListProps<TQueryFnData, TError, TData> = {\n  /**\n   * Resource name for API data interactions\n   */\n  resource: string;\n  /**\n   * Tanstack Query's [useInfiniteQuery](https://tanstack.com/query/v4/docs/react/reference/useInfiniteQuery) options\n   */\n  queryOptions?: UseInfiniteQueryOptions<\n    GetListResponse<TQueryFnData>,\n    TError,\n    GetListResponse<TData>\n  >;\n} & BaseInfiniteListProps &\n  SuccessErrorNotification<\n    InfiniteData<GetListResponse<TData>>,\n    TError,\n    Prettify<BaseInfiniteListProps>\n  > &\n  LiveModeProps &\n  UseLoadingOvertimeOptionsProps;\n\n/**\n * `useInfiniteList` is a modified version of `react-query`'s {@link https://tanstack.com/query/latest/docs/react/guides/infinite-queries `useInfiniteQuery`} used for retrieving items from a `resource` with pagination, sort, and filter configurations.\n *\n * It uses the `getList` method as the query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useInfiniteList} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useInfiniteList = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  resource: resourceFromProp,\n  config,\n  filters,\n  hasPagination,\n  pagination,\n  sorters,\n  queryOptions,\n  successNotification,\n  errorNotification,\n  meta,\n  metaData,\n  liveMode,\n  onLiveEvent,\n  liveParams,\n  dataProviderName,\n  overtimeOptions,\n}: UseInfiniteListProps<\n  TQueryFnData,\n  TError,\n  TData\n>): InfiniteQueryObserverResult<GetListResponse<TData>, TError> &\n  UseLoadingOvertimeReturnType => {\n  const { resources, resource, identifier } = useResource(resourceFromProp);\n\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const handleNotification = useHandleNotification();\n  const getMeta = useMeta();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const pickedDataProvider = pickDataProvider(\n    identifier,\n    dataProviderName,\n    resources,\n  );\n  const preferredMeta = pickNotDeprecated(meta, metaData);\n  const prefferedFilters = pickNotDeprecated(filters, config?.filters);\n  const prefferedSorters = pickNotDeprecated(sorters, config?.sort);\n  const prefferedHasPagination = pickNotDeprecated(\n    hasPagination,\n    config?.hasPagination,\n  );\n  const prefferedPagination = handlePaginationParams({\n    pagination,\n    configPagination: config?.pagination,\n    hasPagination: prefferedHasPagination,\n  });\n  const isServerPagination = prefferedPagination.mode === \"server\";\n  const notificationValues = {\n    meta: preferredMeta,\n    metaData: preferredMeta,\n    filters: prefferedFilters,\n    hasPagination: isServerPagination,\n    pagination: prefferedPagination,\n    sorters: prefferedSorters,\n    config: {\n      ...config,\n      sort: prefferedSorters,\n    },\n  };\n\n  const isEnabled =\n    queryOptions?.enabled === undefined || queryOptions?.enabled === true;\n\n  const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n  const { getList } = dataProvider(pickedDataProvider);\n\n  useResourceSubscription({\n    resource: identifier,\n    types: [\"*\"],\n    params: {\n      meta: combinedMeta,\n      metaData: combinedMeta,\n      pagination: prefferedPagination,\n      hasPagination: isServerPagination,\n      sort: prefferedSorters,\n      sorters: prefferedSorters,\n      filters: prefferedFilters,\n      subscriptionType: \"useList\",\n      ...liveParams,\n    },\n    channel: `resources/${resource.name}`,\n    enabled: isEnabled,\n    liveMode,\n    onLiveEvent,\n    dataProviderName: pickedDataProvider,\n    meta: {\n      ...combinedMeta,\n      dataProviderName,\n    },\n  });\n\n  const queryResponse = useInfiniteQuery<\n    GetListResponse<TQueryFnData>,\n    TError,\n    GetListResponse<TData>\n  >({\n    queryKey: keys()\n      .data(pickedDataProvider)\n      .resource(identifier)\n      .action(\"infinite\")\n      .params({\n        ...(preferredMeta || {}),\n        filters: prefferedFilters,\n        hasPagination: isServerPagination,\n        ...(isServerPagination && {\n          pagination: prefferedPagination,\n        }),\n        ...(sorters && {\n          sorters,\n        }),\n        ...(config?.sort && {\n          sort: config?.sort,\n        }),\n      })\n      .get(preferLegacyKeys),\n    queryFn: ({ queryKey, pageParam, signal }) => {\n      const paginationProperties = {\n        ...prefferedPagination,\n        current: pageParam,\n      };\n\n      return getList<TQueryFnData>({\n        resource: resource.name,\n        pagination: paginationProperties,\n        hasPagination: isServerPagination,\n        filters: prefferedFilters,\n        sort: prefferedSorters,\n        sorters: prefferedSorters,\n        meta: {\n          ...combinedMeta,\n          queryContext: {\n            queryKey,\n            pageParam,\n            signal,\n          },\n        },\n        metaData: {\n          ...combinedMeta,\n          queryContext: {\n            queryKey,\n            pageParam,\n            signal,\n          },\n        },\n      }).then(({ data, total, ...rest }) => {\n        return {\n          data,\n          total,\n          pagination: paginationProperties,\n          ...rest,\n        };\n      });\n    },\n    getNextPageParam: (lastPage) => getNextPageParam(lastPage),\n    getPreviousPageParam: (lastPage) => getPreviousPageParam(lastPage),\n    ...queryOptions,\n    onSuccess: (data) => {\n      queryOptions?.onSuccess?.(data);\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(data, notificationValues, identifier)\n          : successNotification;\n\n      handleNotification(notificationConfig);\n    },\n    onError: (err: TError) => {\n      checkError(err);\n      queryOptions?.onError?.(err);\n\n      const notificationConfig =\n        typeof errorNotification === \"function\"\n          ? errorNotification(err, notificationValues, identifier)\n          : errorNotification;\n\n      handleNotification(notificationConfig, {\n        key: `${identifier}-useInfiniteList-notification`,\n        message: translate(\n          \"notifications.error\",\n          { statusCode: err.statusCode },\n          `Error (status code: ${err.statusCode})`,\n        ),\n        description: err.message,\n        type: \"error\",\n      });\n    },\n    meta: {\n      ...queryOptions?.meta,\n      ...getXRay(\"useInfiniteList\", preferLegacyKeys),\n    },\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: queryResponse.isFetching,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  return { ...queryResponse, overtime: { elapsedTime } };\n};\n","import React from \"react\";\n\nimport { ILiveContext, ILiveContextProvider } from \"./ILiveContext\";\n\nexport const LiveContext = React.createContext<ILiveContext>(undefined);\n\nexport const LiveContextProvider: React.FC<ILiveContextProvider> = ({\n  liveProvider,\n  children,\n}) => {\n  return (\n    <LiveContext.Provider value={liveProvider}>{children}</LiveContext.Provider>\n  );\n};\n","import { useCallback } from \"react\";\nimport {\n  InvalidateOptions,\n  InvalidateQueryFilters,\n  useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { useResource } from \"@hooks/resource\";\nimport { pickDataProvider } from \"@definitions\";\nimport { BaseKey, IQueryKeys } from \"../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseInvalidateProp = {\n  resource?: string;\n  id?: BaseKey;\n  dataProviderName?: string;\n  invalidates: Array<keyof IQueryKeys> | false;\n  invalidationFilters?: InvalidateQueryFilters;\n  invalidationOptions?: InvalidateOptions;\n};\n\nexport const useInvalidate = (): ((\n  props: UseInvalidateProp,\n) => Promise<void>) => {\n  const { resources } = useResource();\n  const queryClient = useQueryClient();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const invalidate = useCallback(\n    async ({\n      resource,\n      dataProviderName,\n      invalidates,\n      id,\n      invalidationFilters = { type: \"all\", refetchType: \"active\" },\n      invalidationOptions = { cancelRefetch: false },\n    }: UseInvalidateProp) => {\n      if (invalidates === false) {\n        return;\n      }\n      const dp = pickDataProvider(resource, dataProviderName, resources);\n\n      const queryKey = keys()\n        .data(dp)\n        .resource(resource ?? \"\");\n\n      await Promise.all(\n        invalidates.map((key) => {\n          switch (key) {\n            case \"all\":\n              return queryClient.invalidateQueries(\n                keys().data(dp).get(preferLegacyKeys),\n                invalidationFilters,\n                invalidationOptions,\n              );\n            case \"list\":\n              return queryClient.invalidateQueries(\n                queryKey.action(\"list\").get(preferLegacyKeys),\n                invalidationFilters,\n                invalidationOptions,\n              );\n            case \"many\":\n              return queryClient.invalidateQueries(\n                queryKey.action(\"many\").get(preferLegacyKeys),\n                invalidationFilters,\n                invalidationOptions,\n              );\n            case \"resourceAll\":\n              return queryClient.invalidateQueries(\n                queryKey.get(preferLegacyKeys),\n                invalidationFilters,\n                invalidationOptions,\n              );\n            case \"detail\":\n              return queryClient.invalidateQueries(\n                queryKey\n                  .action(\"one\")\n                  .id(id || \"\")\n                  .get(preferLegacyKeys),\n                invalidationFilters,\n                invalidationOptions,\n              );\n            default:\n              return;\n          }\n        }),\n      );\n\n      return;\n    },\n    [],\n  );\n\n  return invalidate;\n};\n","import { useContext } from \"react\";\n\nimport { ResourceContext } from \"@contexts/resource\";\nimport {\n  Action,\n  BaseKey,\n  IResourceItem,\n  ResourceRouterParams,\n} from \"../../../interfaces\";\nimport { useRouterContext, useResourceWithRoute } from \"@hooks\";\nimport { useRouterType } from \"../../../contexts/router-picker\";\nimport { useParsed } from \"../../router/use-parsed\";\nimport { pickResource } from \"../../../definitions/helpers/pick-resource\";\n\nexport type UseResourceLegacyProps = {\n  /**\n   * Determines which resource to use for redirection\n   * @deprecated resourceName deprecated. Use resourceNameOrRouteName instead # https://github.com/refinedev/refine/issues/1618\n   */\n  resourceName?: string;\n  /**\n   * Determines which resource to use for redirection\n   * @default Resource name that it reads from route\n   */\n  resourceNameOrRouteName?: string;\n  /**\n   * Adds id to the end of the URL\n   * @deprecated resourceName deprecated. Use resourceNameOrRouteName instead # https://github.com/refinedev/refine/issues/1618\n   */\n  recordItemId?: BaseKey;\n};\n\n/**\n * Matches the resource by identifier.\n * If not provided, the resource from the route will be returned.\n * If your resource does not explicitly define an identifier, the resource name will be used.\n */\nexport type UseResourceParam = string | undefined;\n\ntype SelectReturnType<T extends boolean> = T extends true\n  ? { resource: IResourceItem; identifier: string }\n  : { resource: IResourceItem; identifier: string } | undefined;\n\nexport type UseResourceReturnType = {\n  resources: IResourceItem[];\n  resource?: IResourceItem;\n  /**\n   * @deprecated Use `resource.name` instead when you need to get the resource name.\n   */\n  resourceName?: string;\n  id?: BaseKey;\n  action?: Action;\n  select: <T extends boolean = true>(\n    resourceName: string,\n    force?: T,\n  ) => SelectReturnType<T>;\n  identifier?: string;\n};\n\ntype UseResourceReturnTypeWithResource = UseResourceReturnType & {\n  resource: IResourceItem;\n  identifier: string;\n};\n\n/**\n * @deprecated Use `useResource` with `identifier` property instead. (`identifier` does not check by route name in new router)\n */\nexport function useResource(\n  props: UseResourceLegacyProps,\n): UseResourceReturnType;\nexport function useResource(): UseResourceReturnType;\nexport function useResource<TIdentifier = UseResourceParam>(\n  identifier: TIdentifier,\n): TIdentifier extends NonNullable<UseResourceParam>\n  ? UseResourceReturnTypeWithResource\n  : UseResourceReturnType;\n/**\n * `useResource` is used to get `resources` that are defined as property of the `<Refine>` component.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/resource/useResource} for more details.\n */\nexport function useResource(\n  args?: UseResourceLegacyProps | UseResourceParam,\n): UseResourceReturnType {\n  const { resources } = useContext(ResourceContext);\n\n  const routerType = useRouterType();\n\n  const params = useParsed();\n\n  const oldProps = {\n    resourceName: args && typeof args !== \"string\" ? args.resourceName : args,\n    resourceNameOrRouteName:\n      args && typeof args !== \"string\" ? args.resourceNameOrRouteName : args,\n    recordItemId:\n      args && typeof args !== \"string\" ? args.recordItemId : undefined,\n  };\n\n  const select = <T extends boolean = true>(\n    resourceName: string,\n    force = true,\n  ): SelectReturnType<T> => {\n    const isLegacy = routerType === \"legacy\";\n    const pickedResource = pickResource(resourceName, resources, isLegacy);\n\n    if (pickedResource) {\n      return {\n        resource: pickedResource,\n        identifier: pickedResource.identifier ?? pickedResource.name,\n      } as SelectReturnType<T>;\n    }\n\n    if (force) {\n      const resource: IResourceItem = {\n        name: resourceName,\n        identifier: resourceName,\n      };\n\n      const identifier = resource.identifier ?? resource.name;\n\n      return {\n        resource,\n        identifier,\n      } as SelectReturnType<T>;\n    }\n\n    return undefined as SelectReturnType<T>;\n  };\n\n  /**\n   * Legacy Router - Start\n   *\n   * using `useParams` and `route` to match resource and get params.\n   */\n  const resourceWithRoute = useResourceWithRoute();\n\n  const { useParams } = useRouterContext();\n\n  const legacyParams = useParams<Partial<ResourceRouterParams>>();\n\n  if (routerType === \"legacy\") {\n    const resourceKeyToCheck = oldProps.resourceNameOrRouteName\n      ? oldProps.resourceNameOrRouteName\n      : legacyParams.resource;\n\n    const legacyResource = resourceKeyToCheck\n      ? resourceWithRoute(resourceKeyToCheck)\n      : undefined;\n    const legacyId = oldProps?.recordItemId ?? legacyParams.id;\n    const legacyAction = legacyParams.action;\n    const legacyResourceName = oldProps?.resourceName ?? legacyResource?.name;\n    const legacyIdentifier = legacyResource?.identifier ?? legacyResource?.name;\n\n    return {\n      resources,\n      resource: legacyResource,\n      resourceName: legacyResourceName,\n      id: legacyId,\n      action: legacyAction,\n      select,\n      identifier: legacyIdentifier,\n    };\n  }\n  /** Legacy Router - End */\n\n  /** New Router */\n  let resource: IResourceItem | undefined = undefined;\n  // we try to pick the resource from props first\n  const identifier =\n    typeof args === \"string\" ? args : oldProps?.resourceNameOrRouteName;\n  if (identifier) {\n    const pickedFromProps = pickResource(identifier, resources);\n    if (pickedFromProps) {\n      resource = pickedFromProps;\n    } else {\n      resource = {\n        name: identifier as string,\n      };\n    }\n  } else if (params?.resource) {\n    resource = params.resource;\n  }\n\n  return {\n    resources,\n    resource,\n    resourceName: resource?.name,\n    id: params.id,\n    action: params.action,\n    select,\n    identifier: resource?.identifier ?? resource?.name,\n  };\n}\n","import React from \"react\";\n\nimport { IResourceContext } from \"./IResourceContext\";\nimport {\n  IResourceItem,\n  ResourceProps,\n} from \"../../interfaces/bindings/resource\";\nimport { useDeepMemo } from \"@hooks/deepMemo\";\nimport { legacyResourceTransform } from \"@definitions/helpers\";\n\nexport {\n  IResourceItem,\n  IResourceComponents,\n  IResourceComponentsProps,\n  IResourceContext,\n} from \"../../interfaces/bindings/resource\";\n\nexport const ResourceContext = React.createContext<IResourceContext>({\n  resources: [],\n});\n\nexport const ResourceContextProvider: React.FC<\n  React.PropsWithChildren<{ resources: ResourceProps[] }>\n> = ({ resources: providedResources, children }) => {\n  const resources: IResourceItem[] = useDeepMemo(() => {\n    return legacyResourceTransform(providedResources ?? []);\n  }, [providedResources]);\n\n  return (\n    <ResourceContext.Provider value={{ resources }}>\n      {children}\n    </ResourceContext.Provider>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport { useMemoized } from \"@hooks/memoized\";\n\n/**\n * Hook that memoizes the given dependency array and checks the consecutive calls with deep equality and returns the same value as the first call if dependencies are not changed.\n * @internal\n */\nexport const useDeepMemo = <T,>(\n  fn: () => T,\n  dependencies: React.DependencyList,\n): T => {\n  const memoizedDependencies = useMemoized(dependencies);\n\n  const value = useMemo(fn, memoizedDependencies);\n\n  return value;\n};\n","import { useRef } from \"react\";\nimport isEqual from \"lodash-es/isEqual.js\";\n\n/**\n * Hook that memoizes the given value with deep equality.\n * @internal\n */\nexport const useMemoized = <T = unknown>(value: T): T => {\n  const ref = useRef(value);\n\n  if (!isEqual(ref.current, value)) {\n    ref.current = value;\n  }\n\n  return ref.current;\n};\n","import React from \"react\";\n\n/**\n * This context is used to determine which router to use.\n *\n * This is a temporary solution until we remove the legacy router.\n */\n\nexport const RouterPickerContext = React.createContext<\"legacy\" | \"new\">(\"new\");\n\nexport const RouterPickerProvider = RouterPickerContext.Provider;\n\n/**\n * This is a temporary hook to determine which router to use.\n * It will be removed once the legacy router is removed.\n * @internal This is an internal hook.\n */\nexport const useRouterType = () => {\n  const value = React.useContext(RouterPickerContext);\n  return value;\n};\n","import React from \"react\";\nimport { useParse } from \"../use-parse\";\n\nexport const useParsed = <\n  TParams extends Record<string, any> = Record<string, any>,\n>() => {\n  const parse = useParse();\n\n  const parsed = React.useMemo(() => parse<TParams>(), [parse]);\n\n  return parsed;\n};\n","import React, { createContext, PropsWithChildren } from \"react\";\nimport { RouterBindings } from \"src/interfaces\";\n\nconst defaultBindings = {};\n\nexport const RouterBindingsContext =\n  createContext<RouterBindings>(defaultBindings);\n\nexport const RouterBindingsProvider: React.FC<\n  PropsWithChildren<{ router?: RouterBindings }>\n> = ({ children, router }) => {\n  return (\n    <RouterBindingsContext.Provider value={router ?? defaultBindings}>\n      {children}\n    </RouterBindingsContext.Provider>\n  );\n};\n","import { RouterBindingsContext } from \"@contexts/router\";\nimport React, { useContext } from \"react\";\nimport { ParseFunction, ParseResponse } from \"src/interfaces\";\n\ntype UseParseType = () => <\n  TParams extends Record<string, any> = Record<string, any>,\n>() => ParseResponse<TParams>;\n\nexport const useParse: UseParseType = () => {\n  const bindings = useContext(RouterBindingsContext);\n\n  const useParse = React.useMemo(\n    () =>\n      bindings?.parse ??\n      (() =>\n        (() => {\n          return {};\n        }) as ParseFunction),\n    [bindings?.parse],\n  );\n\n  const parse = useParse();\n\n  return parse as ReturnType<UseParseType>;\n};\n","import { useContext, useCallback } from \"react\";\nimport { ResourceContext } from \"@contexts/resource\";\nimport { IResourceItem } from \"../../../interfaces\";\nimport { pickResource } from \"@definitions/helpers/pick-resource\";\n\nexport type UseResourceWithRouteReturnType = (route: string) => IResourceItem;\n\n/**\n * @deprecated Use `useResource` hook instead.\n * @internal This hook is for internal use only. And is kept for backward compatibility.\n */\nexport const useResourceWithRoute = (): UseResourceWithRouteReturnType => {\n  const { resources } = useContext(ResourceContext);\n\n  const resourceWithRoute = useCallback(\n    (route: string) => {\n      const picked = pickResource(route, resources, true);\n      if (picked) {\n        return picked;\n      }\n      return { name: route, route: route } as IResourceItem;\n    },\n    [resources],\n  );\n\n  return resourceWithRoute;\n};\n","import { LiveContext } from \"@contexts/live\";\nimport { RefineContext } from \"@contexts/refine\";\nimport { useInvalidate } from \"@hooks/invalidate\";\nimport { useResource } from \"@hooks/resource\";\nimport { useContext, useEffect } from \"react\";\nimport {\n  BaseKey,\n  CrudFilters,\n  CrudSorting,\n  ILiveContext,\n  IRefineContext,\n  LiveEvent,\n  LiveModeProps,\n  MetaQuery,\n  Pagination,\n} from \"../../../interfaces\";\n\nexport type UseResourceSubscriptionProps = {\n  channel: string;\n  params?: {\n    ids?: BaseKey[];\n    id?: BaseKey;\n    /**\n     * @deprecated `params.meta` is depcerated. Use `meta` directly from the root level instead.\n     */\n    meta?: MetaQuery;\n    /**\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    pagination?: Pagination;\n    /**\n     * @deprecated `hasPagination` is deprecated, use `pagination.mode` instead.\n     */\n    hasPagination?: boolean;\n    /**\n     * @deprecated `sort` is deprecated. Use `sorters` instead.\n     */\n    sort?: CrudSorting;\n    sorters?: CrudSorting;\n    filters?: CrudFilters;\n    subscriptionType: \"useList\" | \"useOne\" | \"useMany\";\n    [key: string]: any;\n  };\n  types: LiveEvent[\"type\"][];\n  resource?: string;\n  enabled?: boolean;\n  /**\n   * @deprecated use `meta.dataProviderName` instead.\n   */\n  dataProviderName?: string;\n  meta?: MetaQuery & { dataProviderName?: string };\n} & LiveModeProps;\n\nexport type PublishType = {\n  (event: LiveEvent): void;\n};\n\nexport const useResourceSubscription = ({\n  resource: resourceFromProp,\n  params,\n  channel,\n  types,\n  enabled = true,\n  liveMode: liveModeFromProp,\n  onLiveEvent,\n  dataProviderName: dataProviderNameFromProps,\n  meta,\n}: UseResourceSubscriptionProps): void => {\n  const { resource, identifier } = useResource(resourceFromProp);\n\n  const liveDataContext = useContext<ILiveContext>(LiveContext);\n  const {\n    liveMode: liveModeFromContext,\n    onLiveEvent: onLiveEventContextCallback,\n  } = useContext<IRefineContext>(RefineContext);\n\n  const liveMode = liveModeFromProp ?? liveModeFromContext;\n\n  const invalidate = useInvalidate();\n\n  const dataProviderName =\n    dataProviderNameFromProps ??\n    meta?.dataProviderName ??\n    resource?.meta?.dataProviderName;\n\n  useEffect(() => {\n    let subscription: any;\n\n    const callback = (event: LiveEvent) => {\n      if (liveMode === \"auto\") {\n        invalidate({\n          resource: identifier,\n          dataProviderName,\n          invalidates: [\"resourceAll\"],\n          invalidationFilters: {\n            type: \"active\",\n            refetchType: \"active\",\n          },\n          invalidationOptions: { cancelRefetch: false },\n        });\n      }\n\n      onLiveEvent?.(event);\n      onLiveEventContextCallback?.(event);\n    };\n\n    if (liveMode && liveMode !== \"off\" && enabled) {\n      subscription = liveDataContext?.subscribe({\n        channel,\n        params: {\n          resource: resource?.name,\n          ...params,\n        },\n        types,\n        callback,\n        dataProviderName,\n        meta: {\n          ...meta,\n          dataProviderName,\n        },\n      });\n    }\n\n    return () => {\n      if (subscription) {\n        liveDataContext?.unsubscribe(subscription);\n      }\n    };\n  }, [enabled]);\n};\n","import { useContext } from \"react\";\nimport { LiveModeProps, IRefineContext } from \"../../../interfaces\";\nimport { RefineContext } from \"@contexts/refine\";\n\nexport const useLiveMode = (\n  liveMode: LiveModeProps[\"liveMode\"],\n): LiveModeProps[\"liveMode\"] => {\n  const { liveMode: liveModeFromContext } =\n    useContext<IRefineContext>(RefineContext);\n\n  return liveMode ?? liveModeFromContext;\n};\n","import { useContext, useEffect } from \"react\";\n\nimport { LiveContext } from \"@contexts/live\";\nimport {\n  BaseKey,\n  CrudFilters,\n  CrudSorting,\n  ILiveContext,\n  LiveEvent,\n  MetaQuery,\n  Pagination,\n} from \"../../../interfaces\";\n\nexport type UseSubscriptionProps = {\n  /**\n   * Channel name to subscribe.\n   */\n  channel: string;\n  /**\n   * Callback that is run when new events from subscription arrive.\n   */\n  onLiveEvent: (event: LiveEvent) => void;\n  /**\n   * Type of events to subscribe. `\"*\"` means all events.\n   * @type Array<\"deleted\" | \"updated\" | \"created\" | \"*\" | string>\n   */\n  types?: LiveEvent[\"type\"][];\n  /**\n   * Determines subscription should subscribe or not.\n   * @type Array<\"deleted\" | \"updated\" | \"created\" | \"*\" | string>\n   */\n  enabled?: boolean;\n  params?: {\n    ids?: BaseKey[];\n    id?: BaseKey;\n    /**\n     * @deprecated `params.meta` is depcerated. Use `meta` directly from the root level instead.\n     */\n    meta?: MetaQuery;\n    /**\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    pagination?: Pagination;\n    /**\n     * @deprecated `hasPagination` is deprecated, use `pagination.mode` instead.\n     */\n    hasPagination?: boolean;\n    /**\n     * @deprecated `sort` is deprecated, use `sorters` instead.\n     */\n    sort?: CrudSorting;\n    sorters?: CrudSorting;\n    filters?: CrudFilters;\n    subscriptionType?: \"useList\" | \"useOne\" | \"useMany\";\n    resource?: string;\n    [key: string]: any;\n  };\n  /**\n   * @deprecated use `meta.dataProviderName` instead.\n   */\n  dataProviderName?: string;\n  meta?: MetaQuery & { dataProviderName?: string };\n};\n\nexport const useSubscription = ({\n  params,\n  channel,\n  types = [\"*\"],\n  enabled = true,\n  onLiveEvent,\n  dataProviderName = \"default\",\n  meta,\n}: UseSubscriptionProps): void => {\n  const liveDataContext = useContext<ILiveContext>(LiveContext);\n\n  useEffect(() => {\n    let subscription: any;\n\n    if (enabled) {\n      subscription = liveDataContext?.subscribe({\n        channel,\n        params,\n        types,\n        callback: onLiveEvent,\n        dataProviderName,\n        meta: {\n          ...meta,\n          dataProviderName,\n        },\n      });\n    }\n\n    return () => {\n      if (subscription) {\n        liveDataContext?.unsubscribe(subscription);\n      }\n    };\n  }, [enabled]);\n};\n","import { useContext } from \"react\";\n\nimport { LiveContext } from \"@contexts/live\";\nimport { ILiveContext } from \"../../../interfaces\";\n\nexport const usePublish: () => NonNullable<ILiveContext>[\"publish\"] = () => {\n  const liveContext = useContext<ILiveContext>(LiveContext);\n\n  return liveContext?.publish;\n};\n","import { useContext } from \"react\";\n\nimport { UndoableQueueContext } from \"@contexts/undoableQueue\";\nimport { IUndoableQueue, IUndoableQueueContext } from \"../../../interfaces\";\n\nexport type UseCancelNotificationType = () => {\n  notifications: IUndoableQueue[];\n  notificationDispatch: React.Dispatch<any>;\n};\n\nexport const useCancelNotification: UseCancelNotificationType = () => {\n  const { notifications, notificationDispatch } =\n    useContext<IUndoableQueueContext>(UndoableQueueContext);\n\n  return { notifications, notificationDispatch };\n};\n","import { useContext } from \"react\";\n\nimport { NotificationContext } from \"@contexts/notification\";\nimport { INotificationContext } from \"../../../interfaces\";\n\nexport const useNotification = (): INotificationContext => {\n  const { open, close } = useContext(NotificationContext);\n\n  return { open, close };\n};\n","import React, { createContext } from \"react\";\n\nimport { INotificationContext } from \"./INotificationContext\";\n\n/** @deprecated default value for notification context has no use and is an empty object.  */\nexport const defaultNotificationProvider: INotificationContext = {};\n\nexport const NotificationContext = createContext<INotificationContext>({});\n\nexport const NotificationContextProvider: React.FC<\n  INotificationContext & {\n    children?: React.ReactNode;\n  }\n> = ({ open, close, children }) => {\n  return (\n    <NotificationContext.Provider value={{ open, close }}>\n      {children}\n    </NotificationContext.Provider>\n  );\n};\n","import { useCallback } from \"react\";\n\nimport { OpenNotificationParams } from \"../../../interfaces\";\nimport { useNotification } from \"@hooks\";\n\nexport const useHandleNotification = (): typeof handleNotification => {\n  const { open } = useNotification();\n\n  const handleNotification = useCallback(\n    (\n      notification: OpenNotificationParams | false | undefined,\n      fallbackNotification?: OpenNotificationParams,\n    ) => {\n      if (notification !== false) {\n        if (notification) {\n          open?.(notification);\n        } else if (fallbackNotification) {\n          open?.(fallbackNotification);\n        }\n      }\n    },\n    [],\n  );\n\n  return handleNotification;\n};\n","import { useCallback, useContext } from \"react\";\nimport { TranslationContext } from \"@contexts/translation\";\n\n/**\n * If you need to change the locale at runtime, refine provides the `useSetLocale` hook.\n * It returns the changeLocale method from `i18nProvider` under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/translate/useSetLocale} for more details.\n */\nexport const useSetLocale = () => {\n  const { i18nProvider } = useContext(TranslationContext);\n\n  return useCallback((lang: string) => i18nProvider?.changeLocale(lang), []);\n};\n","import React from \"react\";\n\nimport { ITranslationContext } from \"../../interfaces\";\n\n/** @deprecated default value for translation context has no use and is an empty object.  */\nexport const defaultProvider: ITranslationContext = {};\n\nexport const TranslationContext = React.createContext<ITranslationContext>({});\n\nexport const TranslationContextProvider: React.FC<\n  ITranslationContext & {\n    children?: React.ReactNode;\n  }\n> = ({ children, i18nProvider }) => {\n  return (\n    <TranslationContext.Provider\n      value={{\n        i18nProvider: i18nProvider,\n      }}\n    >\n      {children}\n    </TranslationContext.Provider>\n  );\n};\n","import { useContext, useMemo } from \"react\";\nimport { TranslationContext } from \"@contexts/translation\";\n\n/**\n * If you need to translate the texts in your own components, refine provides the `useTranslate` hook.\n * It returns the translate method from `i18nProvider` under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/translate/useTranslate} for more details.\n */\nexport const useTranslate = () => {\n  const { i18nProvider } = useContext(TranslationContext);\n\n  const fn = useMemo(() => {\n    function translate(\n      key: string,\n      options?: any,\n      defaultMessage?: string,\n    ): string;\n    function translate(key: string, defaultMessage?: string): string;\n\n    function translate(\n      key: string,\n      options?: string | any,\n      defaultMessage?: string,\n    ) {\n      return (\n        i18nProvider?.translate(key, options, defaultMessage) ??\n        defaultMessage ??\n        (typeof options === \"string\" && typeof defaultMessage === \"undefined\"\n          ? options\n          : key)\n      );\n    }\n\n    return translate;\n  }, [i18nProvider]);\n\n  return fn;\n};\n","import { useContext, useCallback } from \"react\";\nimport { TranslationContext } from \"@contexts/translation\";\n\nexport type UseGetLocaleType = () => () => string | undefined;\n\n/**\n * If you need to know the current locale, refine provides the `useGetLocale` hook.\n * It returns the `getLocale` method from `i18nProvider` under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/translate/useGetLocale} for more details.\n */\nexport const useGetLocale: UseGetLocaleType = () => {\n  const { i18nProvider } = useContext(TranslationContext);\n\n  return useCallback(() => i18nProvider?.getLocale(), []);\n};\n","import { useState } from \"react\";\nimport papaparsePkg from 'papaparse';\nconst { unparse } = papaparsePkg;\nimport type { UnparseConfig } from \"papaparse\";\nimport warnOnce from \"warn-once\";\nimport { useResource, useDataProvider, useMeta } from \"@hooks\";\nimport {\n  BaseRecord,\n  MapDataFn,\n  CrudSorting,\n  CrudFilters,\n  MetaQuery,\n} from \"../../interfaces\";\nimport {\n  useUserFriendlyName,\n  pickDataProvider,\n  pickNotDeprecated,\n  downloadInBrowser,\n} from \"@definitions\";\n\n// Old options interface taken from export-to-csv-fix-source-map@0.2.1\n// Kept here to ensure backward compatibility\nexport interface ExportOptions {\n  filename?: string;\n  fieldSeparator?: string;\n  quoteStrings?: string;\n  decimalSeparator?: string;\n  showLabels?: boolean;\n  showTitle?: boolean;\n  title?: string;\n  useTextFile?: boolean;\n  useBom?: boolean;\n  headers?: string[];\n  useKeysAsHeaders?: boolean;\n}\n\ntype UseExportOptionsType<\n  TData extends BaseRecord = BaseRecord,\n  TVariables = any,\n> = {\n  /**\n   * Resource name for API data interactions\n   * @default Resource name that it reads from route\n   * @deprecated `resourceName` is deprecated. Use `resource` instead.\n   */\n  resourceName?: string;\n  /**\n   * Resource name for API data interactions\n   * @default Resource name that it reads from route\n   */\n  resource?: string;\n  /**\n   * A mapping function that runs for every record. Mapped data will be included in the file contents\n   */\n  mapData?: MapDataFn<TData, TVariables>;\n  /**\n   *  Sorts records\n   *  @deprecated `sorter` is deprecated. Use `sorters` instead.\n   */\n  sorter?: CrudSorting;\n  /**\n   *  Sorts records\n   */\n  sorters?: CrudSorting;\n  /**\n   *  Filters records\n   */\n  filters?: CrudFilters;\n  maxItemCount?: number;\n  /**\n   *  Requests to fetch data are made as batches by page size. By default, it is 20. Used for `getList` method of `DataProvider`\n   */\n  pageSize?: number;\n  /**\n   *  Used for exporting options\n   *  @type [Options](https://github.com/alexcaza/export-to-csv)\n   * @deprecated `exportOptions` is deprecated. Use `unparseConfig` instead.\n   */\n  exportOptions?: ExportOptions;\n  /**\n   *  Used for exporting options\n   *  @type [UnparseConfig](https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/papaparse)\n   */\n  unparseConfig?: UnparseConfig;\n  /**\n   *  Metadata query for `dataProvider`\n   */\n  meta?: MetaQuery;\n  /**\n   *  Metadata query for `dataProvider`\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   */\n  dataProviderName?: string;\n  /**\n   *  Callback to handle error events of this hook\n   */\n  onError?: (error: any) => void;\n  /**\n   *  Whether to generate download of the CSV in browser environments, defaults to true.\n   */\n  download?: boolean;\n};\n\ntype UseExportReturnType = {\n  isLoading: boolean;\n  triggerExport: () => Promise<string | undefined>;\n};\n\n/**\n * `useExport` hook allows you to make your resources exportable.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/import-export/useExport} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TVariables - Values for params.\n *\n */\nexport const useExport = <\n  TData extends BaseRecord = BaseRecord,\n  TVariables = any,\n>({\n  resourceName,\n  resource: resourceFromProps,\n  sorter,\n  sorters,\n  filters,\n  maxItemCount,\n  pageSize = 20,\n  mapData = (item) => item as any,\n  exportOptions,\n  unparseConfig,\n  meta,\n  metaData,\n  dataProviderName,\n  onError,\n  download,\n}: UseExportOptionsType<TData, TVariables> = {}): UseExportReturnType => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const dataProvider = useDataProvider();\n  const getMeta = useMeta();\n  const { resource, resources, identifier } = useResource(\n    pickNotDeprecated(resourceFromProps, resourceName),\n  );\n  const getFriendlyName = useUserFriendlyName();\n\n  const filename = `${getFriendlyName(\n    identifier,\n    \"plural\",\n  )}-${new Date().toLocaleString()}`;\n\n  const { getList } = dataProvider(\n    pickDataProvider(identifier, dataProviderName, resources),\n  );\n\n  const combinedMeta = getMeta({\n    resource,\n    meta: pickNotDeprecated(meta, metaData),\n  });\n\n  const triggerExport = async () => {\n    setIsLoading(true);\n\n    let rawData: BaseRecord[] = [];\n\n    let current = 1;\n    let preparingData = true;\n    while (preparingData) {\n      try {\n        const { data, total } = await getList<TData>({\n          resource: resource?.name ?? \"\",\n          filters,\n          sort: pickNotDeprecated(sorters, sorter),\n          sorters: pickNotDeprecated(sorters, sorter),\n          pagination: {\n            current,\n            pageSize,\n            mode: \"server\",\n          },\n          meta: combinedMeta,\n          metaData: combinedMeta,\n        });\n\n        current++;\n\n        rawData.push(...data);\n\n        if (maxItemCount && rawData.length >= maxItemCount) {\n          rawData = rawData.slice(0, maxItemCount);\n          preparingData = false;\n        }\n\n        if (total === rawData.length) {\n          preparingData = false;\n        }\n      } catch (error) {\n        setIsLoading(false);\n        preparingData = false;\n\n        onError?.(error);\n\n        return;\n      }\n    }\n\n    const hasUnparseConfig =\n      typeof unparseConfig !== \"undefined\" && unparseConfig !== null;\n\n    warnOnce(\n      hasUnparseConfig &&\n        typeof exportOptions !== \"undefined\" &&\n        exportOptions !== null,\n      `[useExport]: resource: \"${identifier}\" \\n\\nBoth \\`unparseConfig\\` and \\`exportOptions\\` are set, \\`unparseConfig\\` will take precedence`,\n    );\n\n    const options: ExportOptions = {\n      filename,\n      useKeysAsHeaders: true,\n      useBom: true, // original default\n      title: \"My Generated Report\", // original default\n      quoteStrings: '\"', // original default\n      ...exportOptions,\n    };\n\n    warnOnce(\n      exportOptions?.decimalSeparator !== undefined,\n      `[useExport]: resource: \"${identifier}\" \\n\\nUse of \\`decimalSeparator\\` no longer supported, please use \\`mapData\\` instead.\\n\\nSee https://refine.dev/docs/api-reference/core/hooks/import-export/useExport/`,\n    );\n\n    if (!hasUnparseConfig) {\n      unparseConfig = {\n        // useKeysAsHeaders takes priority over options.headers\n        columns: options.useKeysAsHeaders ? undefined : options.headers,\n        delimiter: options.fieldSeparator,\n        header: options.showLabels || options.useKeysAsHeaders,\n        quoteChar: options.quoteStrings,\n        quotes: true,\n      };\n    } else {\n      unparseConfig = {\n        // Set to force quote for better compatibility\n        quotes: true,\n        ...unparseConfig,\n      };\n    }\n\n    let csv = unparse(rawData.map(mapData as any), unparseConfig);\n    if (options.showTitle) {\n      csv = `${options.title}\\r\\n\\n${csv}`;\n    }\n\n    // Backward compatibility support for downloadInBrowser of the exported file, only works for browsers.\n    if (typeof window !== \"undefined\" && csv.length > 0 && (download ?? true)) {\n      const fileExtension = options.useTextFile ? \".txt\" : \".csv\";\n      const fileType = `text/${\n        options.useTextFile ? \"plain\" : \"csv\"\n      };charset=utf8;`;\n      const downloadFilename = `${(options.filename ?? \"download\").replace(\n        / /g,\n        \"_\",\n      )}${fileExtension}`;\n\n      downloadInBrowser(\n        downloadFilename,\n        `${options?.useBom ? \"\\ufeff\" : \"\"}${csv}`,\n        fileType,\n      );\n    }\n\n    setIsLoading(false);\n    return csv;\n  };\n\n  return {\n    isLoading,\n    triggerExport,\n  };\n};\n","import React, { Dispatch, SetStateAction } from \"react\";\nimport { QueryObserverResult, UseQueryOptions } from \"@tanstack/react-query\";\nimport warnOnce from \"warn-once\";\nimport debounce from \"lodash-es/debounce.js\";\n\nimport {\n  useWarnAboutChange,\n  useCreate,\n  useUpdate,\n  useRedirectionAfterSubmission,\n  useMutationMode,\n  useOne,\n  useRefineContext,\n  useMeta,\n  useInvalidate,\n} from \"@hooks\";\n\nimport {\n  BaseRecord,\n  CreateResponse,\n  GetOneResponse,\n  HttpError,\n  LiveModeProps,\n  RedirectAction,\n  SuccessErrorNotification,\n  UpdateResponse,\n  MutationMode,\n  BaseKey,\n  IQueryKeys,\n  FormAction,\n  MetaQuery,\n  AutoSaveProps,\n  AutoSaveReturnType,\n  OptimisticUpdateMapType,\n} from \"../../interfaces\";\nimport {\n  UpdateParams,\n  UseUpdateProps,\n  UseUpdateReturnType,\n} from \"../data/useUpdate\";\nimport { UseCreateProps, UseCreateReturnType } from \"../data/useCreate\";\nimport { redirectPage } from \"@definitions/helpers\";\nimport { useResource } from \"../resource/useResource\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\nimport {\n  useLoadingOvertime,\n  UseLoadingOvertimeOptionsProps,\n  UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type ActionParams = {\n  /**\n   * Type of the form mode\n   * @default Action that it reads from route otherwise \"create\" is used\n   */\n  action?: FormAction;\n};\n\ntype ActionFormProps<\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n  TData extends BaseRecord = TQueryFnData,\n  TResponse extends BaseRecord = TData,\n  TResponseError extends HttpError = TError,\n> = {\n  /**\n   * Resource name for API data interactions\n   * @default Resource name that it reads from route\n   */\n  resource?: string;\n  /**\n   * Record id for fetching\n   * @default Id that it reads from the URL\n   */\n  id?: BaseKey;\n  /**\n   * Page to redirect after a succesfull mutation\n   * @type `\"show\" | \"edit\" | \"list\" | \"create\" | false`\n   * @default `\"list\"`\n   */\n  redirect?: RedirectAction;\n  /**\n   * Metadata query for dataProvider\n   */\n  meta?: MetaQuery;\n  /**\n   * Metadata query for dataProvider\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * Metadata to pass for the `useOne` query\n   */\n  queryMeta?: MetaQuery;\n  /**\n   * Metadata to pass for the mutation (`useCreate` for `create` and `clone` actions, `useUpdate` for `edit` action)\n   */\n  mutationMeta?: MetaQuery;\n  /**\n   * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n   * @default `\"pessimistic\"*`\n   */\n  mutationMode?: MutationMode;\n  /**\n   * Called when a mutation is successful\n   */\n  onMutationSuccess?: (\n    data: CreateResponse<TResponse> | UpdateResponse<TResponse>,\n    variables: TVariables,\n    context: any,\n    isAutoSave?: boolean,\n  ) => void;\n  /**\n   * Called when a mutation encounters an error\n   */\n  onMutationError?: (\n    error: TResponseError,\n    variables: TVariables,\n    context: any,\n    isAutoSave?: boolean,\n  ) => void;\n  /**\n   * Duration to wait before executing mutations when `mutationMode = \"undoable\"`\n   * @default `5000*`\n   */\n  undoableTimeout?: number;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   */\n  dataProviderName?: string;\n  /**\n   * You can use it to manage the invalidations that will occur at the end of the mutation.\n   * @type  `all`, `resourceAll`, `list`, `many`, `detail`, `false`\n   * @default `[\"list\", \"many\", \"detail\"]`\n   */\n  invalidates?: Array<keyof IQueryKeys>;\n  /**\n   * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options of useOne hook used while in edit mode.\n   */\n  queryOptions?: UseQueryOptions<\n    GetOneResponse<TQueryFnData>,\n    TError,\n    GetOneResponse<TData>\n  >;\n  /**\n   * react-query's [useMutation](https://tanstack.com/query/v4/docs/reference/useMutation) options of useCreate hook used while submitting in create and clone modes.\n   */\n  createMutationOptions?: UseCreateProps<\n    TResponse,\n    TResponseError,\n    TVariables\n  >[\"mutationOptions\"];\n  /**\n   * react-query's [useMutation](https://tanstack.com/query/v4/docs/reference/useMutation) options of useUpdate hook used while submitting in edit mode.\n   */\n  updateMutationOptions?: UseUpdateProps<\n    TResponse,\n    TResponseError,\n    TVariables\n  >[\"mutationOptions\"];\n  /**\n   * If you customize the [`optimisticUpdateMap`](https://refine.dev/docs/api-reference/core/hooks/data/useUpdateMany/#optimisticupdatemap) option, you can use it to manage the invalidations that will occur at the end of the mutation.\n   * @default {\n   *   list: true,\n   *   many: true,\n   *   detail: true,\n   * }\n   */\n  optimisticUpdateMap?: OptimisticUpdateMapType<TResponse, TVariables>;\n} & SuccessErrorNotification<\n  UpdateResponse<TResponse> | CreateResponse<TResponse>,\n  TResponseError,\n  { id: BaseKey; values: TVariables } | TVariables\n> &\n  ActionParams &\n  LiveModeProps;\n\nexport type UseFormProps<\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n  TData extends BaseRecord = TQueryFnData,\n  TResponse extends BaseRecord = TData,\n  TResponseError extends HttpError = TError,\n> = ActionFormProps<\n  TQueryFnData,\n  TError,\n  TVariables,\n  TData,\n  TResponse,\n  TResponseError\n> &\n  ActionParams &\n  LiveModeProps &\n  UseLoadingOvertimeOptionsProps &\n  AutoSaveProps<TVariables>;\n\nexport type UseFormReturnType<\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n  TData extends BaseRecord = TQueryFnData,\n  TResponse extends BaseRecord = TData,\n  TResponseError extends HttpError = TError,\n> = {\n  id?: BaseKey;\n  setId: Dispatch<SetStateAction<BaseKey | undefined>>;\n  queryResult?: QueryObserverResult<GetOneResponse<TData>, TError>;\n  mutationResult:\n    | UseUpdateReturnType<TResponse, TResponseError, TVariables>\n    | UseCreateReturnType<TResponse, TResponseError, TVariables>;\n  formLoading: boolean;\n  onFinish: (\n    values: TVariables,\n  ) => Promise<CreateResponse<TResponse> | UpdateResponse<TResponse> | void>;\n  redirect: (\n    redirect: RedirectAction,\n    idFromFunction?: BaseKey | undefined,\n    routeParams?: Record<string, string | number>,\n  ) => void;\n} & UseLoadingOvertimeReturnType &\n  AutoSaveReturnType<TResponse, TResponseError, TVariables>;\n\n/**\n * `useForm` is used to manage forms. It uses Ant Design {@link https://ant.design/components/form/ Form} data scope management under the hood and returns the required props for managing the form actions.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/useForm} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n * @typeParam TResponse - Result data returned by the mutation function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TData`\n * @typeParam TResponseError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}. Defaults to `TError`\n *\n */\nexport const useForm = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n  TData extends BaseRecord = TQueryFnData,\n  TResponse extends BaseRecord = TData,\n  TResponseError extends HttpError = TError,\n>({\n  resource: resourceFromProps,\n  action: actionFromProps,\n  id: idFromProps,\n  onMutationSuccess,\n  onMutationError,\n  redirect: redirectFromProps,\n  successNotification,\n  errorNotification,\n  meta,\n  metaData,\n  queryMeta,\n  mutationMeta,\n  mutationMode: mutationModeProp,\n  liveMode,\n  onLiveEvent,\n  liveParams,\n  undoableTimeout,\n  dataProviderName,\n  invalidates,\n  queryOptions,\n  createMutationOptions,\n  updateMutationOptions,\n  overtimeOptions,\n  autoSave,\n  optimisticUpdateMap,\n}: UseFormProps<\n  TQueryFnData,\n  TError,\n  TVariables,\n  TData,\n  TResponse,\n  TResponseError\n> = {}): UseFormReturnType<\n  TQueryFnData,\n  TError,\n  TVariables,\n  TData,\n  TResponse,\n  TResponseError\n> => {\n  const invalidate = useInvalidate();\n  const { options } = useRefineContext();\n  const getMeta = useMeta();\n\n  const {\n    resource,\n    id: idFromRoute,\n    action: actionFromRoute,\n    identifier,\n  } = useResource(resourceFromProps);\n  const { identifier: inferredIdentifier } = useResource();\n\n  /** We only accept `id` from URL params if `resource` is not explicitly passed. */\n  /** This is done to avoid sending wrong requests for custom `resource` and an async `id` */\n  const getDefaultId = () => {\n    const idFromPropsOrRoute = idFromProps ?? idFromRoute;\n\n    if (resourceFromProps && resourceFromProps !== inferredIdentifier) {\n      return idFromProps;\n    }\n\n    return idFromPropsOrRoute;\n  };\n  const defaultId = getDefaultId();\n\n  // id state is needed to determine selected record in a context for example useModal\n  const [id, setId] = React.useState<BaseKey | undefined>(defaultId);\n\n  /**\n   * In some cases, `id` from the router params is not available at the first render.\n   *\n   * (e.g. when using `Next.js` and client-side-rendering, `router` is not ready to use at the first render)\n   *\n   * We're watching for `defaultId` changes and setting `id` state if it's not equal to `defaultId`.\n   */\n  React.useEffect(() => {\n    setId(defaultId);\n  }, [defaultId]);\n\n  const getAction = () => {\n    if (actionFromProps) return actionFromProps;\n    if (actionFromRoute === \"edit\" || actionFromRoute === \"clone\")\n      return actionFromRoute;\n    return \"create\";\n  };\n  const action = getAction();\n\n  const combinedMeta = getMeta({\n    resource,\n    meta: pickNotDeprecated(meta, metaData),\n  });\n\n  const { mutationMode: mutationModeContext } = useMutationMode();\n  const mutationMode = mutationModeProp ?? mutationModeContext;\n\n  const isCreate = action === \"create\";\n  const isEdit = action === \"edit\";\n  const isClone = action === \"clone\";\n\n  warnOnce(\n    (isClone || isEdit) &&\n      Boolean(resourceFromProps) &&\n      !idFromProps &&\n      queryOptions?.enabled !== false,\n    `[useForm]: action: \"${action}\", resource: \"${identifier}\", id: ${id} \\n\\nIf you don't use the \\`setId\\` method to set the \\`id\\`, you should pass the \\`id\\` prop to \\`useForm\\`. Otherwise, \\`useForm\\` will not be able to infer the \\`id\\` from the current URL. \\n\\nSee https://refine.dev/docs/api-reference/core/hooks/useForm/#resource`,\n  );\n\n  /**\n   * Designated `redirect` route\n   */\n  const designatedRedirectAction = redirectPage({\n    redirectFromProps,\n    action,\n    redirectOptions: options.redirect,\n  });\n\n  const enableQuery = id !== undefined && (isEdit || isClone);\n\n  const queryResult = useOne<TQueryFnData, TError, TData>({\n    resource: identifier,\n    id: id ?? \"\",\n    queryOptions: {\n      enabled: enableQuery,\n      ...queryOptions,\n    },\n    liveMode,\n    onLiveEvent,\n    liveParams,\n    meta: { ...combinedMeta, ...queryMeta },\n    metaData: { ...combinedMeta, ...queryMeta },\n    dataProviderName,\n  });\n\n  const { isFetching: isFetchingQuery } = queryResult;\n\n  const mutationResultCreate = useCreate<TResponse, TResponseError, TVariables>(\n    {\n      mutationOptions: createMutationOptions,\n    },\n  );\n  const { mutate: mutateCreate, isLoading: isLoadingCreate } =\n    mutationResultCreate;\n\n  const mutationResultUpdate = useUpdate<TResponse, TResponseError, TVariables>(\n    {\n      mutationOptions: updateMutationOptions,\n    },\n  );\n  const { mutate: mutateUpdate, isLoading: isLoadingUpdate } =\n    mutationResultUpdate;\n\n  const autoSaveMutation = useUpdate<TResponse, TResponseError, TVariables>({});\n\n  const { setWarnWhen } = useWarnAboutChange();\n\n  const handleSubmitWithRedirect = useRedirectionAfterSubmission();\n\n  const onFinishCreate = async (values: TVariables) => {\n    setWarnWhen(false);\n\n    const onSuccess = (id?: BaseKey) => {\n      handleSubmitWithRedirect({\n        redirect: designatedRedirectAction,\n        resource,\n        id,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n    };\n\n    if (mutationMode !== \"pessimistic\") {\n      setTimeout(() => {\n        onSuccess();\n      });\n    }\n\n    return new Promise<CreateResponse<TResponse> | void>((resolve, reject) => {\n      if (mutationMode !== \"pessimistic\") {\n        resolve();\n      }\n\n      if (!resource) return;\n\n      return mutateCreate(\n        {\n          values,\n          resource: identifier ?? resource.name,\n          successNotification,\n          errorNotification,\n          meta: { ...combinedMeta, ...mutationMeta },\n          metaData: { ...combinedMeta, ...mutationMeta },\n          dataProviderName,\n          invalidates,\n        },\n        {\n          onSuccess: (data, _, context) => {\n            if (onMutationSuccess) {\n              onMutationSuccess(data, values, context);\n            }\n\n            const responseId = data?.data?.id;\n\n            onSuccess(responseId);\n\n            resolve(data);\n          },\n          onError: (error: TResponseError, _, context) => {\n            if (onMutationError) {\n              return onMutationError(error, values, context);\n            }\n            reject();\n          },\n        },\n      );\n    });\n  };\n\n  React.useEffect(() => {\n    return () => {\n      if (\n        autoSave?.invalidateOnUnmount &&\n        autoSaveMutation.status === \"success\"\n      ) {\n        invalidate({\n          id,\n          invalidates: invalidates || [\"list\", \"many\", \"detail\"],\n          dataProviderName,\n          resource: identifier,\n        });\n      }\n    };\n  }, [autoSave?.invalidateOnUnmount, autoSaveMutation.status]);\n\n  const onFinishAutoSaveMutation = (\n    values: TVariables,\n  ): Promise<UpdateResponse<TResponse> | void> | void => {\n    if (!resource || !isEdit) return;\n\n    const variables: UpdateParams<TResponse, TResponseError, TVariables> = {\n      id: id ?? \"\",\n      values,\n      resource: identifier ?? resource.name,\n      successNotification: false,\n      errorNotification: false,\n      meta: { ...combinedMeta, ...mutationMeta },\n      metaData: { ...combinedMeta, ...mutationMeta },\n      dataProviderName,\n      invalidates: [],\n      mutationMode: \"pessimistic\",\n    };\n\n    return autoSaveMutation.mutate(variables, {\n      onSuccess: (data, _, context) => {\n        if (onMutationSuccess) {\n          onMutationSuccess(data, values, context, true);\n        }\n      },\n      onError: (error: TResponseError, _, context) => {\n        if (onMutationError) {\n          return onMutationError(error, values, context, true);\n        }\n      },\n    });\n  };\n\n  const onFinishAutoSave = debounce((allValues) => {\n    return onFinishAutoSaveMutation(allValues);\n  }, autoSave?.debounce || 1000);\n\n  const onFinishUpdate = async (values: TVariables) => {\n    setWarnWhen(false);\n\n    if (!resource) return;\n\n    const variables: UpdateParams<TResponse, TResponseError, TVariables> = {\n      id: id ?? \"\",\n      values,\n      resource: identifier ?? resource.name,\n      mutationMode,\n      undoableTimeout,\n      successNotification,\n      errorNotification,\n      meta: { ...combinedMeta, ...mutationMeta },\n      metaData: { ...combinedMeta, ...mutationMeta },\n      dataProviderName,\n      invalidates,\n      optimisticUpdateMap,\n    };\n\n    const onSuccess = () => {\n      handleSubmitWithRedirect({\n        redirect: designatedRedirectAction,\n        resource,\n        id,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n    };\n\n    // setWarnWhen is set to \"false\" at the start of the mutation. With the help of setTimeout we guarantee that the value false is set.\n    if (mutationMode !== \"pessimistic\") {\n      setTimeout(() => {\n        onSuccess();\n      });\n    }\n\n    // setTimeout is required to make onSuccess e.g. callbacks to work if component unmounts i.e. on route change\n    return new Promise<UpdateResponse<TResponse> | void>((resolve, reject) => {\n      if (mutationMode !== \"pessimistic\") {\n        resolve();\n      }\n      return setTimeout(() => {\n        mutateUpdate(variables, {\n          onSuccess: (data, _, context) => {\n            if (onMutationSuccess) {\n              onMutationSuccess(data, values, context);\n            }\n\n            if (mutationMode === \"pessimistic\") {\n              onSuccess();\n            }\n\n            resolve(data);\n          },\n          onError: (error: TResponseError, _, context) => {\n            if (onMutationError) {\n              return onMutationError(error, values, context);\n            }\n            reject();\n          },\n        });\n      });\n    });\n  };\n\n  const createResult = {\n    formLoading: isFetchingQuery || isLoadingCreate,\n    mutationResult: mutationResultCreate,\n    onFinish: onFinishCreate,\n  };\n\n  const editResult = {\n    formLoading: isFetchingQuery || isLoadingUpdate,\n    mutationResult: mutationResultUpdate,\n    onFinish: onFinishUpdate,\n  };\n\n  const result = isCreate || isClone ? createResult : editResult;\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: result.mutationResult.isLoading || queryResult.isFetching,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  return {\n    ...result,\n    queryResult,\n    onFinishAutoSave,\n    autoSaveProps: {\n      status: autoSaveMutation.status,\n      data: autoSaveMutation.data,\n      error: autoSaveMutation.error,\n    },\n    id,\n    setId,\n    redirect: (redirect, idFromFunction?: BaseKey | undefined) => {\n      handleSubmitWithRedirect({\n        redirect: redirect !== undefined ? redirect : isEdit ? \"list\" : \"edit\",\n        resource,\n        id: idFromFunction ?? id,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n    },\n    overtime: {\n      elapsedTime,\n    },\n  };\n};\n","import { useCallback } from \"react\";\n\nimport {\n  BaseKey,\n  IResourceItem,\n  MetaDataQuery,\n  RedirectAction,\n} from \"../../interfaces\";\nimport { useNavigation } from \"@hooks\";\n\nexport type UseRedirectionAfterSubmissionType = () => (options: {\n  redirect: RedirectAction;\n  resource?: IResourceItem;\n  id?: BaseKey;\n  meta?: MetaDataQuery;\n}) => void;\n\nexport const useRedirectionAfterSubmission: UseRedirectionAfterSubmissionType =\n  () => {\n    const { show, edit, list, create } = useNavigation();\n\n    const handleSubmitWithRedirect = useCallback(\n      ({\n        redirect,\n        resource,\n        id,\n        meta = {},\n      }: {\n        redirect: RedirectAction;\n        resource?: IResourceItem;\n        id?: BaseKey;\n        meta?: MetaDataQuery;\n      }) => {\n        if (redirect && resource) {\n          if (!!resource.show && redirect === \"show\" && id) {\n            return show(resource, id, undefined, meta);\n          }\n\n          if (!!resource.edit && redirect === \"edit\" && id) {\n            return edit(resource, id, undefined, meta);\n          }\n\n          if (!!resource.create && redirect === \"create\") {\n            return create(resource, undefined, meta);\n          }\n\n          return list(resource, \"push\", meta);\n        }\n        return;\n      },\n      [],\n    );\n\n    return handleSubmitWithRedirect;\n  };\n","import { RouterBindingsContext } from \"@contexts/router\";\nimport { useResource } from \"@hooks/resource\";\nimport React, { useCallback, useContext } from \"react\";\nimport type {\n  Action,\n  BaseKey,\n  GoConfig as GoConfigBase,\n  IResourceItem,\n} from \"../../../interfaces\";\nimport { useGetToPath } from \"../use-get-to-path\";\n\ntype ResourceWithoutId = {\n  /**\n   *  The name or identifier of the resource.\n   */\n  resource: string;\n  action: Extract<Action, \"create\" | \"list\">;\n  id?: never;\n  meta?: Record<string, unknown>;\n};\n\ntype ResourceWithId = {\n  /**\n   *  The name or identifier of the resource.\n   */\n  resource: string;\n  action: Extract<Action, \"edit\" | \"show\" | \"clone\">;\n  id: BaseKey;\n  meta?: Record<string, unknown>;\n};\n\nexport type Resource = ResourceWithoutId | ResourceWithId;\n\nexport type GoConfigWithResource = Omit<GoConfigBase, \"to\"> & {\n  to?: GoConfigBase[\"to\"] | Resource;\n};\n\nexport const useGo = () => {\n  const bindings = useContext(RouterBindingsContext);\n  const { select: resourceSelect } = useResource();\n  const getToPath = useGetToPath();\n\n  const useGo = React.useMemo(\n    () => bindings?.go ?? (() => () => undefined),\n    [bindings?.go],\n  );\n\n  const goFromRouter = useGo();\n\n  const go = useCallback(\n    (config: GoConfigWithResource | GoConfigBase) => {\n      if (typeof config.to !== \"object\") {\n        return goFromRouter({ ...config, to: config.to });\n      }\n\n      // when config.to is an object, it means that we want to go to a resource.\n      // so we need to find the path for the resource.\n      const { resource } = resourceSelect(config.to.resource);\n      handleResourceErrors(config.to, resource);\n      const newTo = getToPath({\n        resource,\n        action: config.to.action,\n        meta: {\n          id: config.to.id,\n          ...config.to.meta,\n        },\n      });\n\n      return goFromRouter({\n        ...config,\n        to: newTo,\n      });\n    },\n    [resourceSelect, goFromRouter],\n  );\n\n  return go;\n};\n\n/**\n * handle errors for resource\n * @internal\n */\nexport const handleResourceErrors = (to: Resource, resource: IResourceItem) => {\n  if (!to?.action || !to?.resource) {\n    throw new Error(`[useGo]: \"action\" or \"resource\" is required.`);\n  }\n\n  if ([\"edit\", \"show\", \"clone\"].includes(to?.action) && !to.id) {\n    throw new Error(\n      `[useGo]: [action: ${to.action}] requires an \"id\" for resource [resource: ${to.resource}]`,\n    );\n  }\n\n  const actionUrl = resource[to.action];\n  if (!actionUrl) {\n    throw new Error(\n      `[useGo]: [action: ${to.action}] is not defined for [resource: ${to.resource}]`,\n    );\n  }\n};\n","import React from \"react\";\nimport { useResource } from \"../../resource\";\nimport { Action, IResourceItem } from \"../../../interfaces\";\nimport { getActionRoutesFromResource } from \"../../../definitions/helpers/router\";\nimport { useParsed } from \"../use-parsed\";\nimport { composeRoute } from \"../../../definitions/helpers/router/compose-route\";\nimport { useRouterType } from \"./../../../contexts/router-picker\";\n\ntype UseToPathParams = {\n  resource?: IResourceItem;\n  action: Action;\n  meta?: Record<string, unknown>;\n  legacy?: boolean;\n};\n\ntype GetToPathFn = (params: UseToPathParams) => string | undefined;\n\n/**\n * Returns a function to get the route for a given action and resource.\n * If resource is not provided, it will use the resource from the route.\n * If the resource is not found, it will return undefined.\n * If the action is not found, it will return undefined.\n * `meta` can be provided to compose the routes with parameters. (Can be used for nested routes.)\n */\nexport const useGetToPath = (): GetToPathFn => {\n  const routerType = useRouterType();\n  const { resource: resourceFromRoute, resources } = useResource();\n  const parsed = useParsed();\n\n  const fn = React.useCallback(\n    ({ resource, action, meta }: UseToPathParams): string | undefined => {\n      const selectedResource = resource || resourceFromRoute;\n\n      if (!selectedResource) {\n        return undefined;\n      }\n\n      const actionRoutes = getActionRoutesFromResource(\n        selectedResource,\n        resources,\n        routerType === \"legacy\",\n      );\n\n      const actionRoute = actionRoutes.find(\n        (item) => item.action === action,\n      )?.route;\n\n      if (!actionRoute) {\n        return undefined;\n      }\n\n      const composed = composeRoute(\n        actionRoute,\n        selectedResource?.meta,\n        parsed,\n        meta,\n      );\n\n      return composed;\n    },\n    [resources, resourceFromRoute, parsed],\n  );\n\n  return fn;\n};\n","import { RouterBindingsContext } from \"@contexts/router\";\nimport React, { useContext } from \"react\";\n\nexport const useBack = () => {\n  const bindings = useContext(RouterBindingsContext);\n\n  const useBack = React.useMemo(\n    () => bindings?.back ?? (() => () => undefined),\n    [bindings?.back],\n  );\n\n  const back = useBack();\n\n  return back;\n};\n","import { useRouterContext, useResource } from \"@hooks\";\nimport { BaseKey, IResourceItem, MetaDataQuery } from \"../../interfaces\";\nimport { useGo } from \"@hooks/router/use-go\";\nimport { useParsed } from \"@hooks/router/use-parsed\";\nimport { useRouterType } from \"@contexts/router-picker\";\nimport { getActionRoutesFromResource } from \"@definitions/helpers/router\";\nimport { pickResource } from \"@definitions/helpers/pick-resource\";\nimport { composeRoute } from \"@definitions/helpers/router/compose-route\";\nimport { useBack } from \"@hooks/router/use-back\";\n\nexport type HistoryType = \"push\" | \"replace\";\n\n/**\n * `refine` uses {@link https://reactrouter.com/en/hooks/use-navigate `React Router`} and comes with all redirects out of the box.\n * It allows you to manage your routing operations in refine.\n * Using this hook, you can manage all the routing operations of your application very easily.\n *\n * @internal This is an internal hook of refine. Do not use it directly.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation} for more details.\n */\nexport const useNavigation = () => {\n  const { resources } = useResource();\n  const routerType = useRouterType();\n  const { useHistory } = useRouterContext();\n  const history = useHistory();\n  const parsed = useParsed();\n  const go = useGo();\n  const back = useBack();\n\n  const handleUrl = (url: string, type: HistoryType = \"push\") => {\n    if (routerType === \"legacy\") {\n      history[type](url);\n    } else {\n      go({ to: url, type });\n    }\n  };\n\n  const createUrl = (\n    resource: string | IResourceItem,\n    meta: MetaDataQuery = {},\n  ) => {\n    if (routerType === \"legacy\") {\n      const resourceItem =\n        typeof resource === \"string\"\n          ? pickResource(resource, resources, true) ?? {\n              name: resource,\n              route: resource,\n            }\n          : resource;\n\n      const createActionRoute = getActionRoutesFromResource(\n        resourceItem,\n        resources,\n        true,\n      ).find((r) => r.action === \"create\");\n\n      if (!createActionRoute) {\n        return \"\";\n      }\n\n      return composeRoute(\n        createActionRoute.route,\n        resourceItem?.meta,\n        parsed,\n        meta,\n      );\n    }\n    const resourceItem =\n      typeof resource === \"string\"\n        ? pickResource(resource, resources) ?? { name: resource }\n        : resource;\n\n    const createActionRoute = getActionRoutesFromResource(\n      resourceItem,\n      resources,\n    ).find((r) => r.action === \"create\")?.route;\n\n    if (!createActionRoute) {\n      return \"\";\n    }\n\n    return go({\n      to: composeRoute(createActionRoute, resourceItem?.meta, parsed, meta),\n      type: \"path\",\n    }) as string;\n  };\n\n  const editUrl = (\n    resource: string | IResourceItem,\n    id: BaseKey,\n    meta: MetaDataQuery = {},\n  ) => {\n    const encodedId = encodeURIComponent(id);\n    if (routerType === \"legacy\") {\n      const resourceItem =\n        typeof resource === \"string\"\n          ? pickResource(resource, resources, true) ?? {\n              name: resource,\n              route: resource,\n            }\n          : resource;\n\n      const editActionRoute = getActionRoutesFromResource(\n        resourceItem,\n        resources,\n        true,\n      ).find((r) => r.action === \"edit\");\n\n      if (!editActionRoute) {\n        return \"\";\n      }\n\n      return composeRoute(editActionRoute.route, resourceItem?.meta, parsed, {\n        ...meta,\n        id: encodedId,\n      });\n    }\n    const resourceItem =\n      typeof resource === \"string\"\n        ? pickResource(resource, resources) ?? { name: resource }\n        : resource;\n\n    const editActionRoute = getActionRoutesFromResource(\n      resourceItem,\n      resources,\n    ).find((r) => r.action === \"edit\")?.route;\n\n    if (!editActionRoute) {\n      return \"\";\n    }\n\n    return go({\n      to: composeRoute(editActionRoute, resourceItem?.meta, parsed, {\n        ...meta,\n        id: encodedId,\n      }),\n      type: \"path\",\n    }) as string;\n  };\n\n  const cloneUrl = (\n    resource: string | IResourceItem,\n    id: BaseKey,\n    meta: MetaDataQuery = {},\n  ) => {\n    const encodedId = encodeURIComponent(id);\n\n    if (routerType === \"legacy\") {\n      const resourceItem =\n        typeof resource === \"string\"\n          ? pickResource(resource, resources, true) ?? {\n              name: resource,\n              route: resource,\n            }\n          : resource;\n\n      const cloneActionRoute = getActionRoutesFromResource(\n        resourceItem,\n        resources,\n        true,\n      ).find((r) => r.action === \"clone\");\n\n      if (!cloneActionRoute) {\n        return \"\";\n      }\n\n      return composeRoute(cloneActionRoute.route, resourceItem?.meta, parsed, {\n        ...meta,\n        id: encodedId,\n      });\n    }\n    const resourceItem =\n      typeof resource === \"string\"\n        ? pickResource(resource, resources) ?? { name: resource }\n        : resource;\n\n    const cloneActionRoute = getActionRoutesFromResource(\n      resourceItem,\n      resources,\n    ).find((r) => r.action === \"clone\")?.route;\n\n    if (!cloneActionRoute) {\n      return \"\";\n    }\n\n    return go({\n      to: composeRoute(cloneActionRoute, resourceItem?.meta, parsed, {\n        ...meta,\n        id: encodedId,\n      }),\n      type: \"path\",\n    }) as string;\n  };\n\n  const showUrl = (\n    resource: string | IResourceItem,\n    id: BaseKey,\n    meta: MetaDataQuery = {},\n  ) => {\n    const encodedId = encodeURIComponent(id);\n    if (routerType === \"legacy\") {\n      const resourceItem =\n        typeof resource === \"string\"\n          ? pickResource(resource, resources, true) ?? {\n              name: resource,\n              route: resource,\n            }\n          : resource;\n\n      const showActionRoute = getActionRoutesFromResource(\n        resourceItem,\n        resources,\n        true,\n      ).find((r) => r.action === \"show\");\n\n      if (!showActionRoute) {\n        return \"\";\n      }\n\n      return composeRoute(showActionRoute.route, resourceItem?.meta, parsed, {\n        ...meta,\n        id: encodedId,\n      });\n    }\n    const resourceItem =\n      typeof resource === \"string\"\n        ? pickResource(resource, resources) ?? { name: resource }\n        : resource;\n\n    const showActionRoute = getActionRoutesFromResource(\n      resourceItem,\n      resources,\n    ).find((r) => r.action === \"show\")?.route;\n\n    if (!showActionRoute) {\n      return \"\";\n    }\n\n    return go({\n      to: composeRoute(showActionRoute, resourceItem?.meta, parsed, {\n        ...meta,\n        id: encodedId,\n      }),\n      type: \"path\",\n    }) as string;\n  };\n\n  const listUrl = (\n    resource: string | IResourceItem,\n    meta: MetaDataQuery = {},\n  ) => {\n    if (routerType === \"legacy\") {\n      const resourceItem =\n        typeof resource === \"string\"\n          ? pickResource(resource, resources, true) ?? {\n              name: resource,\n              route: resource,\n            }\n          : resource;\n\n      const listActionRoute = getActionRoutesFromResource(\n        resourceItem,\n        resources,\n        true,\n      ).find((r) => r.action === \"list\");\n\n      if (!listActionRoute) {\n        return \"\";\n      }\n\n      return composeRoute(\n        listActionRoute.route,\n        resourceItem?.meta,\n        parsed,\n        meta,\n      );\n    }\n    const resourceItem =\n      typeof resource === \"string\"\n        ? pickResource(resource, resources) ?? { name: resource }\n        : resource;\n\n    const listActionRoute = getActionRoutesFromResource(\n      resourceItem,\n      resources,\n    ).find((r) => r.action === \"list\")?.route;\n\n    if (!listActionRoute) {\n      return \"\";\n    }\n\n    return go({\n      to: composeRoute(listActionRoute, resourceItem?.meta, parsed, meta),\n      type: \"path\",\n    }) as string;\n  };\n\n  const create = (\n    resource: string | IResourceItem,\n    type: HistoryType = \"push\",\n    meta: MetaDataQuery = {},\n  ) => {\n    handleUrl(createUrl(resource, meta), type);\n  };\n\n  const edit = (\n    resource: string | IResourceItem,\n    id: BaseKey,\n    type: HistoryType = \"push\",\n    meta: MetaDataQuery = {},\n  ) => {\n    handleUrl(editUrl(resource, id, meta), type);\n  };\n\n  const clone = (\n    resource: string | IResourceItem,\n    id: BaseKey,\n    type: HistoryType = \"push\",\n    meta: MetaDataQuery = {},\n  ) => {\n    handleUrl(cloneUrl(resource, id, meta), type);\n  };\n\n  const show = (\n    resource: string | IResourceItem,\n    id: BaseKey,\n    type: HistoryType = \"push\",\n    meta: MetaDataQuery = {},\n  ) => {\n    handleUrl(showUrl(resource, id, meta), type);\n  };\n\n  const list = (\n    resource: string | IResourceItem,\n    type: HistoryType = \"push\",\n    meta: MetaDataQuery = {},\n  ) => {\n    handleUrl(listUrl(resource, meta), type);\n  };\n\n  /**\n   * @deprecated Please use `useGo` hook instead.\n   */\n  const push = (path: string, ...rest: unknown[]) => {\n    if (routerType === \"legacy\") {\n      history.push(path, ...rest);\n    } else {\n      go({ to: path, type: \"push\" });\n    }\n  };\n\n  /**\n   * @deprecated Please use `useGo` hook instead.\n   */\n  const replace = (path: string, ...rest: unknown[]) => {\n    if (routerType === \"legacy\") {\n      history.replace(path, ...rest);\n    } else {\n      go({ to: path, type: \"replace\" });\n    }\n  };\n\n  /**\n   * @deprecated Please use `useBack` hook instead.\n   */\n  const goBack = () => {\n    if (routerType === \"legacy\") {\n      history.goBack();\n    } else {\n      back();\n    }\n  };\n\n  return {\n    create,\n    createUrl,\n    edit,\n    editUrl,\n    clone,\n    cloneUrl,\n    show,\n    showUrl,\n    list,\n    listUrl,\n    push,\n    replace,\n    goBack,\n  };\n};\n","import React, { useState } from \"react\";\nimport { QueryObserverResult, UseQueryOptions } from \"@tanstack/react-query\";\nimport warnOnce from \"warn-once\";\n\nimport { useMeta, useOne } from \"@hooks\";\n\nimport {\n  BaseRecord,\n  GetOneResponse,\n  SuccessErrorNotification,\n  MetaQuery,\n  LiveModeProps,\n  BaseKey,\n  HttpError,\n  Prettify,\n} from \"../../interfaces\";\nimport { useResource } from \"../resource/useResource\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\nimport {\n  useLoadingOvertime,\n  UseLoadingOvertimeOptionsProps,\n  UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type useShowReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n> = {\n  queryResult: QueryObserverResult<GetOneResponse<TData>, TError>;\n  showId?: BaseKey;\n  setShowId: React.Dispatch<React.SetStateAction<BaseKey | undefined>>;\n} & UseLoadingOvertimeReturnType;\n\nexport type useShowProps<\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n> = {\n  /**\n   * Resource name for API data interactions\n   * @default Reads `:resource` from the URL\n   */\n  resource?: string;\n  /**\n   * Data item ID for API data interactions\n   * @default Reads `:id` from the URL\n   */\n  id?: BaseKey;\n  /**\n   * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n   */\n  queryOptions?: UseQueryOptions<\n    GetOneResponse<TQueryFnData>,\n    TError,\n    GetOneResponse<TData>\n  >;\n  /**\n   * Additional meta data to pass to the data provider's `getOne`\n   */\n  meta?: MetaQuery;\n  /**\n   * Additional meta data to pass to the data provider's `getOne`\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * Target data provider name for API call to be made\n   * @default `\"default\"`\n   */\n  dataProviderName?: string;\n} & LiveModeProps &\n  SuccessErrorNotification<\n    GetOneResponse<TData>,\n    TError,\n    Prettify<{ id?: BaseKey } & MetaQuery>\n  > &\n  UseLoadingOvertimeOptionsProps;\n\n/**\n * `useShow` hook allows you to fetch the desired record.\n * It uses `getOne` method as query function from the dataProvider that is\n * passed to {@link https://refine.dev/docs/api-reference/core/components/refine-config/ `<Refine>`}.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/show/useShow} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useShow = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  resource: resourceFromProp,\n  id,\n  successNotification,\n  errorNotification,\n  meta,\n  metaData,\n  liveMode,\n  onLiveEvent,\n  dataProviderName,\n  queryOptions,\n  overtimeOptions,\n}: useShowProps<TQueryFnData, TError, TData> = {}): useShowReturnType<\n  TData,\n  TError\n> => {\n  const {\n    resource,\n    id: idFromRoute,\n    identifier,\n  } = useResource(resourceFromProp);\n  const { identifier: inferredIdentifier } = useResource();\n  const getMeta = useMeta();\n\n  const getDefaultId = () => {\n    const idFromPropsOrRoute = id ?? idFromRoute;\n\n    if (resourceFromProp && resourceFromProp !== inferredIdentifier) {\n      return id;\n    }\n\n    return idFromPropsOrRoute;\n  };\n  const defaultId = getDefaultId();\n\n  const [showId, setShowId] = useState<BaseKey | undefined>(defaultId);\n\n  React.useEffect(() => {\n    setShowId(defaultId);\n  }, [defaultId]);\n\n  const combinedMeta = getMeta({\n    resource,\n    meta: pickNotDeprecated(meta, metaData),\n  });\n\n  warnOnce(\n    Boolean(resourceFromProp) && !id,\n    `[useShow]: resource: \"${identifier}\", id: ${id} \\n\\nIf you don't use the \\`setShowId\\` method to set the \\`showId\\`, you should pass the \\`id\\` prop to \\`useShow\\`. Otherwise, \\`useShow\\` will not be able to infer the \\`id\\` from the current URL. \\n\\nSee https://refine.dev/docs/api-reference/core/hooks/show/useShow/#resource`,\n  );\n\n  const queryResult = useOne<TQueryFnData, TError, TData>({\n    resource: identifier,\n    id: showId ?? \"\",\n    queryOptions: {\n      enabled: showId !== undefined,\n      ...queryOptions,\n    },\n    successNotification,\n    errorNotification,\n    meta: combinedMeta,\n    metaData: combinedMeta,\n    liveMode,\n    onLiveEvent,\n    dataProviderName,\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: queryResult.isFetching,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  return {\n    queryResult,\n    showId,\n    setShowId,\n    overtime: { elapsedTime },\n  };\n};\n","import { useEffect, useState } from \"react\";\nimport papaparsePkg from 'papaparse';\nconst { parse } = papaparsePkg;\nimport type { ParseConfig } from \"papaparse\";\nimport chunk from \"lodash-es/chunk.js\";\n\nimport { useCreate, useCreateMany, useMeta, useResource } from \"@hooks\";\nimport { MapDataFn, BaseRecord, HttpError, MetaQuery } from \"../../interfaces\";\nimport {\n  importCSVMapper,\n  sequentialPromises,\n  pickNotDeprecated,\n} from \"@definitions\";\nimport { UseCreateReturnType } from \"../../hooks/data/useCreate\";\nimport { UseCreateManyReturnType } from \"../../hooks/data/useCreateMany\";\n\nexport type ImportSuccessResult<TVariables, TData> = {\n  request: TVariables[];\n  type: \"success\";\n  response: TData[];\n};\n\nexport type ImportErrorResult<TVariables> = {\n  request: TVariables[];\n  type: \"error\";\n  response: HttpError[];\n};\n\nexport type OnFinishParams<TVariables, TData> = {\n  succeeded: ImportSuccessResult<TVariables, TData>[];\n  errored: ImportErrorResult<TVariables>[];\n};\n\nexport type OnProgressParams = {\n  totalAmount: number;\n  processedAmount: number;\n};\n\nexport type ImportOptions<\n  TItem,\n  TVariables = any,\n  TData extends BaseRecord = BaseRecord,\n> = {\n  /**\n   * Resource name for API data interactions.\n   * @default Resource name that it reads from route\n   * @deprecated `resourceName` is deprecated. Use `resource` instead.\n   */\n  resourceName?: string;\n  /**\n   * Resource name for API data interactions.\n   * @default Resource name that it reads from route\n   */\n  resource?: string;\n  /**\n   * A mapping function that runs for every record. Mapped data will be included in the file contents.\n   */\n  mapData?: MapDataFn<TItem, TVariables>;\n  /**\n   * Custom Papa Parse options.\n   * @type [`ParseConfig`](https://www.papaparse.com/docs)\n   */\n  paparseOptions?: ParseConfig;\n  /**\n   * Requests batch size. If it is 1, all records are sent one by one. By default, it is [`Number.MAX_SAFE_INTEGER`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER) to send all records in one batch. If it is more than 1, `createMany` should be implemented on DataProvider.\n   */\n  batchSize?: number;\n  /**\n   * Called with errors and successful responses when all requests are sent.\n   */\n  onFinish?: (results: OnFinishParams<TVariables, TData>) => void;\n  /**\n   *  Metadata query for `dataProvider`\n   */\n  meta?: MetaQuery;\n  /**\n   *  Metadata query for `dataProvider`\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   *  A callback function that returns a current state of uploading process.\n   *\n   *  Ex: `percentage = onProgressParams.processedAmount / onProgressParams.totalAmount * 100`\n   */\n  onProgress?: (onProgressParams: OnProgressParams) => void;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   */\n  dataProviderName?: string;\n};\n\nexport type CreatedValuesType<TVariables, TData> =\n  | ImportSuccessResult<TVariables, TData>\n  | ImportErrorResult<TVariables>;\n\nexport type HandleChangeType<TVariables, TData> = (onChangeParams: {\n  file: Partial<File>;\n}) => Promise<CreatedValuesType<TVariables, TData>[]>;\n\nexport type UseImportInputPropsType = {\n  type: \"file\";\n  accept: string;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport type UseImportReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TVariables = {},\n  TError extends HttpError = HttpError,\n> = {\n  inputProps: UseImportInputPropsType;\n  mutationResult:\n    | UseCreateReturnType<TData, TError, TVariables>\n    | UseCreateManyReturnType<TData, TError, TVariables>;\n  isLoading: boolean;\n  handleChange: HandleChangeType<TVariables, TData>;\n};\n\n/**\n * `useImport` hook allows you to handle your csv import logic easily.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/import-export/useImport} for more details.\n *\n * @typeParam TItem - Interface of parsed csv data\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useImport = <\n  TItem = any,\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = any,\n>({\n  resourceName,\n  resource: resourceFromProps,\n  mapData = (item) => item as unknown as TVariables,\n  paparseOptions,\n  batchSize = Number.MAX_SAFE_INTEGER,\n  onFinish,\n  meta,\n  metaData,\n  onProgress,\n  dataProviderName,\n}: ImportOptions<TItem, TVariables, TData> = {}): UseImportReturnType<\n  TData,\n  TVariables,\n  TError\n> => {\n  const [processedAmount, setProcessedAmount] = useState<number>(0);\n  const [totalAmount, setTotalAmount] = useState<number>(0);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { resource, identifier } = useResource(\n    resourceFromProps ?? resourceName,\n  );\n\n  const getMeta = useMeta();\n\n  const createMany = useCreateMany<TData, TError, TVariables>();\n  const create = useCreate<TData, TError, TVariables>();\n\n  const combinedMeta = getMeta({\n    resource,\n    meta: pickNotDeprecated(meta, metaData),\n  });\n\n  let mutationResult:\n    | UseCreateReturnType<TData, TError, TVariables>\n    | UseCreateManyReturnType<TData, TError, TVariables>;\n\n  if (batchSize === 1) {\n    mutationResult = create;\n  } else {\n    mutationResult = createMany;\n  }\n\n  const handleCleanup = () => {\n    setTotalAmount(0);\n    setProcessedAmount(0);\n    setIsLoading(false);\n  };\n\n  const handleFinish = (\n    createdValues: CreatedValuesType<TVariables, TData>[],\n  ) => {\n    const result = {\n      succeeded: createdValues.filter(\n        (item) => item.type === \"success\",\n      ) as unknown as ImportSuccessResult<TVariables, TData>[],\n      errored: createdValues.filter(\n        (item) => item.type === \"error\",\n      ) as unknown as ImportErrorResult<TVariables>[],\n    };\n\n    onFinish?.(result);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    onProgress?.({ totalAmount, processedAmount });\n  }, [totalAmount, processedAmount]);\n\n  const handleChange: HandleChangeType<TVariables, TData> = ({ file }) => {\n    handleCleanup();\n    return new Promise<CreatedValuesType<TVariables, TData>[]>((resolve) => {\n      setIsLoading(true);\n      parse(file as any, {\n        complete: async ({ data }: { data: unknown[][] }) => {\n          const values = importCSVMapper(data, mapData);\n\n          setTotalAmount(values.length);\n\n          if (batchSize === 1) {\n            // Create Processor Functions\n            const valueFns = values.map((value) => {\n              const fn = async () => {\n                const response = await create.mutateAsync({\n                  resource: identifier ?? \"\",\n                  values: value,\n                  successNotification: false,\n                  errorNotification: false,\n                  dataProviderName,\n                  meta: combinedMeta,\n                  metaData: combinedMeta,\n                });\n\n                return { response, value };\n              };\n              return fn;\n            });\n            // Sequentially run processor functions and process resolves/rejects\n            const createdValues = await sequentialPromises(\n              valueFns,\n              ({ response, value }) => {\n                setProcessedAmount((currentAmount) => {\n                  return currentAmount + 1;\n                });\n\n                return {\n                  response: [response.data],\n                  type: \"success\",\n                  request: [value],\n                } as ImportSuccessResult<TVariables, TData>;\n              },\n              (error: HttpError, index) => {\n                return {\n                  response: [error],\n                  type: \"error\",\n                  request: [values[index]],\n                } as ImportErrorResult<TVariables>;\n              },\n            );\n            // Resolve with created values\n            resolve(createdValues);\n          } else {\n            // Create Chunks\n            const chunks = chunk(values, batchSize);\n            // Create Chunk Processor Functions\n            const chunkedFns = chunks.map((chunkedValues) => {\n              const fn = async () => {\n                const response = await createMany.mutateAsync({\n                  resource: identifier ?? \"\",\n                  values: chunkedValues,\n                  successNotification: false,\n                  errorNotification: false,\n                  dataProviderName,\n                  meta: combinedMeta,\n                  metaData: combinedMeta,\n                });\n\n                return {\n                  response,\n                  value: chunkedValues,\n                  currentBatchLength: chunkedValues.length,\n                };\n              };\n\n              return fn;\n            });\n            // Sequentially run chunked functions and process resolves/rejects\n            const createdValues = await sequentialPromises(\n              chunkedFns,\n              ({ response, currentBatchLength, value }) => {\n                setProcessedAmount((currentAmount) => {\n                  return currentAmount + currentBatchLength;\n                });\n\n                return {\n                  response: response.data,\n                  type: \"success\",\n                  request: value,\n                } as ImportSuccessResult<TVariables, TData>;\n              },\n              (error: HttpError, index) => {\n                return {\n                  response: [error],\n                  type: \"error\",\n                  request: chunks[index],\n                } as ImportErrorResult<TVariables>;\n              },\n            );\n            // resolve with all created values\n            resolve(createdValues);\n          }\n        },\n\n        ...paparseOptions,\n      });\n    }).then((createdValues) => {\n      handleFinish(createdValues);\n      return createdValues;\n    });\n  };\n\n  return {\n    inputProps: {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.files && event.target.files.length > 0) {\n          handleChange({ file: event.target.files[0] });\n        }\n      },\n    },\n    mutationResult,\n    isLoading,\n    handleChange,\n  };\n};\n","import { useCallback, useState } from \"react\";\n\nexport type useModalReturnType = {\n  visible: boolean;\n  show: () => void;\n  close: () => void;\n};\n\nexport type useModalProps = {\n  /**\n   * Initial state of the modal\n   */\n  defaultVisible?: boolean;\n};\n\nexport const useModal = ({\n  defaultVisible = false,\n}: useModalProps = {}): useModalReturnType => {\n  const [visible, setVisible] = useState(defaultVisible);\n\n  const show = useCallback(() => setVisible(true), [visible]);\n  const close = useCallback(() => setVisible(false), [visible]);\n\n  return {\n    visible,\n    show,\n    close,\n  };\n};\n","import { Action, IResourceItem } from \"../../../interfaces\";\nimport { useGetToPath } from \"../use-get-to-path\";\n\ntype UseToPathParams = {\n  resource?: IResourceItem;\n  action: Action;\n  meta?: Record<string, unknown>;\n  legacy?: boolean;\n};\n\n/**\n * Returns the route for a given action and resource.\n * If resource is not provided, it will use the resource from the route.\n * If the resource is not found, it will return undefined.\n * If the action is not found, it will return undefined.\n * `meta` can be provided to compose the routes with parameters. (Can be used for nested routes.)\n */\nexport const useToPath = ({\n  resource,\n  action,\n  meta,\n  legacy,\n}: UseToPathParams): string | undefined => {\n  const getToPath = useGetToPath();\n\n  return getToPath({ resource, action, meta, legacy });\n};\n","import { RouterBindingsContext } from \"@contexts/router\";\nimport React, { useContext } from \"react\";\n\nexport const useLink = () => {\n  const bindings = useContext(RouterBindingsContext);\n\n  if (bindings?.Link) {\n    return bindings.Link;\n  }\n\n  const FallbackLink: Required<typeof bindings>[\"Link\"] = ({ to, ...rest }) => (\n    <a href={to} {...rest} />\n  );\n\n  return FallbackLink;\n};\n","import { useContext } from \"react\";\nimport { RouterContext, defaultProvider } from \"@contexts/legacy-router\";\n\nexport const useRouterContext = () => {\n  const routerContextValues = useContext(RouterContext);\n\n  const { useHistory, useLocation, useParams, Prompt, Link, routes } =\n    routerContextValues ?? defaultProvider;\n\n  return {\n    useHistory,\n    useLocation,\n    useParams,\n    Prompt,\n    Link,\n    routes,\n  };\n};\n","import React from \"react\";\n\nimport { IRouterContext } from \"../../interfaces\";\n\nexport const defaultProvider: IRouterContext = {\n  useHistory: () => false,\n  useLocation: () => false,\n  useParams: () => ({}) as any,\n  Prompt: () => null,\n  Link: () => null,\n};\n\nexport const LegacyRouterContext =\n  React.createContext<IRouterContext>(defaultProvider);\n\nexport const RouterContext = LegacyRouterContext;\n\nexport const LegacyRouterContextProvider: React.FC<\n  Partial<IRouterContext> & {\n    children?: React.ReactNode;\n  }\n> = ({\n  children,\n  useHistory,\n  useLocation,\n  useParams,\n  Prompt,\n  Link,\n  routes,\n}) => {\n  return (\n    <RouterContext.Provider\n      value={{\n        useHistory: useHistory ?? defaultProvider.useHistory,\n        useLocation: useLocation ?? defaultProvider.useLocation,\n        useParams: useParams ?? defaultProvider.useParams,\n        Prompt: Prompt ?? defaultProvider.Prompt,\n        Link: Link ?? defaultProvider.Link,\n        routes: routes ?? defaultProvider.routes,\n      }}\n    >\n      {children}\n    </RouterContext.Provider>\n  );\n};\n","import {\n  useQuery,\n  UseQueryOptions,\n  UseQueryResult,\n} from \"@tanstack/react-query\";\nimport { useContext } from \"react\";\n\nimport { AccessControlContext } from \"@contexts/accessControl\";\nimport { sanitizeResource } from \"@definitions/helpers/sanitize-resource\";\nimport { CanParams, CanReturnType } from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nexport type UseCanProps = CanParams & {\n  /**\n   * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n   */\n  queryOptions?: UseQueryOptions<CanReturnType>;\n};\n\n/**\n * `useCan` uses the `can` as the query function for `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`}. It takes the parameters that `can` takes. It can also be configured with `queryOptions` for `useQuery`. Returns the result of `useQuery`.\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/accessControl/useCan} for more details.\n *\n * @typeParam CanParams {@link https://refine.dev/docs/core/interfaceReferences#canparams}\n * @typeParam CanReturnType {@link https://refine.dev/docs/core/interfaceReferences#canreturntype}\n *\n */\nexport const useCan = ({\n  action,\n  resource,\n  params,\n  queryOptions: hookQueryOptions,\n}: UseCanProps): UseQueryResult<CanReturnType> => {\n  const { can, options: globalOptions } = useContext(AccessControlContext);\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const { queryOptions: globalQueryOptions } = globalOptions || {};\n\n  const mergedQueryOptions = {\n    ...globalQueryOptions,\n    ...hookQueryOptions,\n  };\n\n  /**\n   * Since `react-query` stringifies the query keys, it will throw an error for a circular dependency if we include `React.ReactNode` elements inside the keys.\n   * The feature in #2220(https://github.com/refinedev/refine/issues/2220) includes such change and to fix this, we need to remove `icon` property in the `resource`\n   */\n  const { resource: _resource, ...paramsRest } = params ?? {};\n\n  const sanitizedResource = sanitizeResource(_resource);\n\n  const queryResponse = useQuery<CanReturnType>({\n    queryKey: keys()\n      .access()\n      .resource(resource)\n      .action(action)\n      .params({\n        params: { ...paramsRest, resource: sanitizedResource },\n        enabled: mergedQueryOptions?.enabled,\n      })\n      .get(preferLegacyKeys),\n    // Enabled check for `can` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n    queryFn: () =>\n      can?.({\n        action,\n        resource,\n        params: { ...paramsRest, resource: sanitizedResource },\n      }) ?? Promise.resolve({ can: true }),\n    enabled: typeof can !== \"undefined\",\n    ...mergedQueryOptions,\n    meta: {\n      ...mergedQueryOptions?.meta,\n      ...getXRay(\"useCan\", preferLegacyKeys),\n    },\n    retry: false,\n  });\n\n  return typeof can === \"undefined\"\n    ? ({ data: { can: true } } as typeof queryResponse)\n    : queryResponse;\n};\n","import React from \"react\";\n\nimport {\n  IAccessControlContext,\n  IAccessControlContextReturnType,\n} from \"./IAccessControlContext\";\n\n/** @deprecated default value for access control context has no use and is an empty object. */\nexport const defaultAccessControlContext: IAccessControlContext = {};\n\nexport const AccessControlContext =\n  React.createContext<IAccessControlContextReturnType>({\n    options: {\n      buttons: { enableAccessControl: true, hideIfUnauthorized: false },\n    },\n  });\n\nexport { IAccessControlContext };\n\nexport const AccessControlContextProvider: React.FC<\n  IAccessControlContext & {\n    children?: React.ReactNode;\n  }\n> = ({ can, children, options }) => {\n  return (\n    <AccessControlContext.Provider\n      value={{\n        can,\n        options: options\n          ? {\n              ...options,\n              buttons: {\n                enableAccessControl: true,\n                hideIfUnauthorized: false,\n                ...options.buttons,\n              },\n            }\n          : {\n              buttons: {\n                enableAccessControl: true,\n                hideIfUnauthorized: false,\n              },\n              queryOptions: undefined,\n            },\n      }}\n    >\n      {children}\n    </AccessControlContext.Provider>\n  );\n};\n","import { IResourceItem } from \"../../../interfaces/bindings/resource\";\n\n/**\n * Remove all properties that are non-serializable from a resource object.\n */\nexport const sanitizeResource = (\n  resource?: Partial<IResourceItem> &\n    Required<Pick<IResourceItem, \"name\">> & { children?: unknown },\n):\n  | (Partial<IResourceItem> & Required<Pick<IResourceItem, \"name\">>)\n  | undefined => {\n  if (!resource) {\n    return undefined;\n  }\n\n  const {\n    icon,\n    list,\n    edit,\n    create,\n    show,\n    clone,\n    children,\n    meta,\n    options,\n    ...restResource\n  } = resource;\n\n  const { icon: _metaIcon, ...restMeta } = meta ?? {};\n  const { icon: _optionsIcon, ...restOptions } = options ?? {};\n\n  return {\n    ...restResource,\n    ...(meta ? { meta: restMeta } : {}),\n    ...(options ? { options: restOptions } : {}),\n  };\n};\n","import React from \"react\";\n\nimport { AccessControlContext } from \"@contexts/accessControl\";\nimport { sanitizeResource } from \"@definitions/helpers/sanitize-resource\";\nimport { IAccessControlContext } from \"../../interfaces\";\n\nexport const useCanWithoutCache = (): IAccessControlContext => {\n  const { can: canFromContext } = React.useContext(AccessControlContext);\n\n  const can = React.useMemo(() => {\n    if (!canFromContext) {\n      return undefined;\n    }\n\n    const canWithSanitizedResource: NonNullable<typeof canFromContext> =\n      async ({ params, ...rest }) => {\n        const sanitizedResource = params?.resource\n          ? sanitizeResource(params.resource)\n          : undefined;\n\n        return canFromContext({\n          ...rest,\n          ...(params\n            ? {\n                params: {\n                  ...params,\n                  resource: sanitizedResource,\n                },\n              }\n            : {}),\n        });\n      };\n\n    return canWithSanitizedResource;\n  }, [canFromContext]);\n\n  return { can };\n};\n","import { useCallback, useMemo, useState } from \"react\";\nimport { QueryObserverResult, UseQueryOptions } from \"@tanstack/react-query\";\nimport uniqBy from \"lodash-es/uniqBy.js\";\nimport debounce from \"lodash-es/debounce.js\";\nimport get from \"lodash-es/get.js\";\n\nimport { useList, useMany, useMeta } from \"@hooks\";\nimport {\n  CrudSorting,\n  BaseOption,\n  BaseRecord,\n  GetManyResponse,\n  GetListResponse,\n  CrudFilters,\n  SuccessErrorNotification,\n  HttpError,\n  LiveModeProps,\n  BaseKey,\n  Pagination,\n  MetaQuery,\n  Prettify,\n} from \"../../interfaces\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\nimport { useResource } from \"../resource/useResource/index\";\nimport { BaseListProps } from \"../data/useList\";\nimport {\n  useLoadingOvertime,\n  UseLoadingOvertimeOptionsProps,\n  UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type UseSelectProps<TQueryFnData, TError, TData> = {\n  /**\n   * Resource name for API data interactions\n   */\n  resource: string;\n  /**\n   * Set the option's label value\n   * @default `\"title\"`\n   */\n  optionLabel?: keyof TData extends string\n    ? keyof TData\n    : never | ((item: TData) => string);\n  /**\n   * Set the option's value\n   * @default `\"id\"`\n   */\n  optionValue?: keyof TData extends string\n    ? keyof TData\n    : never | ((item: TData) => string);\n  /**\n   * Field name to search for.\n   * @description If provided `optionLabel` is a string, uses `optionLabel`'s value.\n   * @default `\"title\"`\n   * @example\n   * // when optionLabel is string.\n   * useSelect({ optionLabel: \"name\" })\n   * // uses `name` field.\n   * @example\n   * // when optionLabel is function.\n   * useSelect({ optionLabel: (field) => field.description })\n   * // uses `title`, since `optionLabel` is a function.\n   */\n  searchField?: keyof TData extends string ? keyof TData : never;\n  /**\n   * Allow us to sort the options\n   * @deprecated Use `sorters` instead\n   */\n  sort?: CrudSorting;\n  /**\n   * Allow us to sort the options\n   */\n  sorters?: CrudSorting;\n  /**\n   * Resource name for API data interactions\n   */\n  filters?: CrudFilters;\n  /**\n   * Adds extra `options`\n   */\n  defaultValue?: BaseKey | BaseKey[];\n  /**\n   * The number of milliseconds to delay\n   * @default `300`\n   */\n  debounce?: number;\n  /**\n   * react-query [useQuery](https://react-query.tanstack.com/reference/useQuery) options\n   */\n  queryOptions?: UseQueryOptions<\n    GetListResponse<TQueryFnData>,\n    TError,\n    GetListResponse<TData>\n  >;\n  /**\n   * Pagination option from [`useList()`](/docs/api-reference/core/hooks/data/useList/)\n   * @type {  current?: number; pageSize?: number;}\n   * @default `undefined`\n   */\n  pagination?: Prettify<\n    Omit<Pagination, \"mode\"> & {\n      /**\n       * Whether to use server side pagination or not.\n       * @default \"off\"\n       */\n      mode?: Pagination[\"mode\"];\n    }\n  >;\n  /**\n   * Disabling pagination option from [`useList()`](/docs/api-reference/core/hooks/data/useList/)\n   * @type boolean\n   * @default `false`\n   * @deprecated `hasPagination` is deprecated, use `pagination.mode` instead.\n   */\n  hasPagination?: boolean;\n  /**\n   * react-query [useQuery](https://react-query.tanstack.com/reference/useQuery) options\n   */\n  defaultValueQueryOptions?: UseQueryOptions<\n    GetManyResponse<TQueryFnData>,\n    TError\n  >;\n  /**\n   * If defined, this callback allows us to override all filters for every search request.\n   * @default `undefined`\n   */\n  onSearch?: (value: string) => CrudFilters;\n  /**\n   * Additional meta data to pass to the `useMany` from the data provider\n   */\n  meta?: MetaQuery;\n  /**\n   * Additional meta data to pass to the `useMany` from the data provider\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   * @default `default`\n   */\n  dataProviderName?: string;\n  /**\n   * Amount of records to fetch in select box list.\n   * @deprecated use [`pagination`](https://refine.dev/docs/api-reference/core/interfaceReferences/#pagination) instead\n   * @default `undefined`\n   */\n  fetchSize?: number;\n} & SuccessErrorNotification<\n  GetListResponse<TData>,\n  TError,\n  Prettify<BaseListProps>\n> &\n  LiveModeProps &\n  UseLoadingOvertimeOptionsProps;\n\nexport type UseSelectReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TOption extends BaseOption = BaseOption,\n> = {\n  queryResult: QueryObserverResult<GetListResponse<TData>, TError>;\n  defaultValueQueryResult: QueryObserverResult<GetManyResponse<TData>>;\n  onSearch: (value: string) => void;\n  options: TOption[];\n} & UseLoadingOvertimeReturnType;\n\n/**\n * `useSelect` hook is used to fetch data from the dataProvider and return the options for the select box.\n *\n * It uses `getList` method as query function from the dataProvider that is\n * passed to {@link https://refine.dev/docs/api-reference/core/components/refine-config/ `<Refine>`}.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/useSelect} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useSelect = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n  TOption extends BaseOption = BaseOption,\n>(\n  props: UseSelectProps<TQueryFnData, TError, TData>,\n): UseSelectReturnType<TData, TError, TOption> => {\n  const [search, setSearch] = useState<CrudFilters>([]);\n  const [options, setOptions] = useState<TOption[]>([]);\n  const [selectedOptions, setSelectedOptions] = useState<TOption[]>([]);\n\n  const {\n    resource: resourceFromProps,\n    sort,\n    sorters,\n    filters = [],\n    optionLabel = \"title\",\n    optionValue = \"id\",\n    searchField = typeof optionLabel === \"string\" ? optionLabel : \"title\",\n    debounce: debounceValue = 300,\n    successNotification,\n    errorNotification,\n    defaultValueQueryOptions: defaultValueQueryOptionsFromProps,\n    queryOptions,\n    fetchSize,\n    pagination,\n    hasPagination = false,\n    liveMode,\n    defaultValue = [],\n    onLiveEvent,\n    onSearch: onSearchFromProp,\n    liveParams,\n    meta,\n    metaData,\n    dataProviderName,\n    overtimeOptions,\n  } = props;\n\n  const getOptionLabel = useCallback(\n    (item: TData) => {\n      if (typeof optionLabel === \"string\") {\n        return get(item, optionLabel);\n      }\n\n      return optionLabel(item);\n    },\n    [optionLabel],\n  );\n\n  const getOptionValue = useCallback(\n    (item: TData) => {\n      if (typeof optionValue === \"string\") {\n        return get(item, optionValue);\n      }\n\n      return optionValue(item);\n    },\n    [optionValue],\n  );\n\n  const { resource, identifier } = useResource(resourceFromProps);\n\n  const getMeta = useMeta();\n\n  const combinedMeta = getMeta({\n    resource,\n    meta: pickNotDeprecated(meta, metaData),\n  });\n\n  const defaultValues = Array.isArray(defaultValue)\n    ? defaultValue\n    : [defaultValue];\n\n  const defaultValueQueryOnSuccess = useCallback(\n    (data: GetManyResponse<TData>) => {\n      setSelectedOptions(\n        data.data.map(\n          (item) =>\n            ({\n              label: getOptionLabel(item),\n              value: getOptionValue(item),\n            }) as TOption,\n        ),\n      );\n    },\n    [optionLabel, optionValue],\n  );\n\n  const defaultValueQueryOptions =\n    defaultValueQueryOptionsFromProps ?? (queryOptions as any);\n\n  const defaultValueQueryResult = useMany<TQueryFnData, TError, TData>({\n    resource: identifier,\n    ids: defaultValues,\n    queryOptions: {\n      ...defaultValueQueryOptions,\n      enabled:\n        defaultValues.length > 0 && (defaultValueQueryOptions?.enabled ?? true),\n      onSuccess: (data) => {\n        defaultValueQueryOnSuccess(data);\n        defaultValueQueryOptions?.onSuccess?.(data);\n      },\n    },\n    meta: combinedMeta,\n    metaData: combinedMeta,\n    liveMode: \"off\",\n    dataProviderName,\n  });\n\n  const defaultQueryOnSuccess = useCallback(\n    (data: GetListResponse<TData>) => {\n      {\n        setOptions(\n          data.data.map(\n            (item) =>\n              ({\n                label: getOptionLabel(item),\n                value: getOptionValue(item),\n              }) as TOption,\n          ),\n        );\n      }\n    },\n    [optionLabel, optionValue],\n  );\n\n  const queryResult = useList<TQueryFnData, TError, TData>({\n    resource: identifier,\n    sorters: pickNotDeprecated(sorters, sort),\n    filters: filters.concat(search),\n    pagination: {\n      current: pagination?.current,\n      pageSize: pagination?.pageSize ?? fetchSize,\n      mode: pagination?.mode,\n    },\n    hasPagination,\n    queryOptions: {\n      ...queryOptions,\n      onSuccess: (data) => {\n        defaultQueryOnSuccess(data);\n        queryOptions?.onSuccess?.(data);\n      },\n    },\n    successNotification,\n    errorNotification,\n    meta: combinedMeta,\n    metaData: combinedMeta,\n    liveMode,\n    liveParams,\n    onLiveEvent,\n    dataProviderName,\n  });\n\n  const onSearch = (value: string) => {\n    if (onSearchFromProp) {\n      setSearch(onSearchFromProp(value));\n      return;\n    }\n\n    if (!value) {\n      setSearch([]);\n      return;\n    }\n\n    setSearch([\n      {\n        field: searchField,\n        operator: \"contains\",\n        value,\n      },\n    ]);\n  };\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: queryResult.isFetching || defaultValueQueryResult.isFetching,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  const combinedOptions = useMemo(\n    () => uniqBy([...options, ...selectedOptions], \"value\"),\n    [options, selectedOptions],\n  );\n\n  return {\n    queryResult,\n    defaultValueQueryResult,\n    options: combinedOptions,\n    onSearch: debounce(onSearch, debounceValue),\n    overtime: { elapsedTime },\n  };\n};\n","import React, { useState, useEffect } from \"react\";\nimport { QueryObserverResult, UseQueryOptions } from \"@tanstack/react-query\";\nimport qs from \"qs\";\nimport differenceWith from \"lodash-es/differenceWith.js\";\nimport isEqual from \"lodash-es/isEqual.js\";\nimport warnOnce from \"warn-once\";\n\nimport {\n  useRouterContext,\n  useSyncWithLocation,\n  useNavigation,\n  useList,\n  useLiveMode,\n  useRouterType,\n  useResource,\n  useParsed,\n  useMeta,\n} from \"@hooks\";\nimport {\n  stringifyTableParams,\n  parseTableParams,\n  unionFilters,\n  setInitialFilters,\n  setInitialSorters,\n  unionSorters,\n} from \"@definitions/table\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\n\nimport {\n  BaseRecord,\n  CrudFilters,\n  CrudSorting,\n  GetListResponse,\n  SuccessErrorNotification,\n  HttpError,\n  MetaQuery,\n  LiveModeProps,\n  Pagination,\n  Prettify,\n} from \"../../interfaces\";\nimport { useGo } from \"@hooks/router/use-go\";\nimport { BaseListProps } from \"../data/useList\";\nimport {\n  useLoadingOvertime,\n  UseLoadingOvertimeOptionsProps,\n  UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\ntype SetFilterBehavior = \"merge\" | \"replace\";\n\nexport type useTableProps<TQueryFnData, TError, TData> = {\n  /**\n   * Resource name for API data interactions\n   * @default Resource name that it reads from route\n   */\n  resource?: string;\n  /**\n   * Configuration for pagination\n   */\n  pagination?: Pagination;\n  /**\n   * Initial page index\n   * @default 1\n   * @deprecated `initialCurrent` property is deprecated. Use `pagination.current` instead.\n   */\n  initialCurrent?: number;\n  /**\n   * Initial number of items per page\n   * @default 10\n   * @deprecated `initialPageSize` property is deprecated. Use `pagination.pageSize` instead.\n   */\n  initialPageSize?: number;\n  /**\n   * Sort configs\n   */\n  sorters?: {\n    /**\n     * Initial sorter state\n     */\n    initial?: CrudSorting;\n    /**\n     * Default and unchangeable sorter state\n     *  @default `[]`\n     */\n    permanent?: CrudSorting;\n    /**\n     * Whether to use server side sorting or not.\n     * @default \"server\"\n     */\n    mode?: \"server\" | \"off\";\n  };\n  /**\n   * Initial sorter state\n   * @deprecated `initialSorter` property is deprecated. Use `sorters.initial` instead.\n   */\n  initialSorter?: CrudSorting;\n  /**\n   * Default and unchangeable sorter state\n   *  @default `[]`\n   *  @deprecated `permanentSorter` property is deprecated. Use `sorters.permanent` instead.\n   */\n  permanentSorter?: CrudSorting;\n  /**\n   * Filter configs\n   */\n  filters?: {\n    /**\n     * Initial filter state\n     */\n    initial?: CrudFilters;\n    /**\n     * Default and unchangeable filter state\n     *  @default `[]`\n     */\n    permanent?: CrudFilters;\n    /**\n     * Default behavior of the `setFilters` function\n     * @default `\"merge\"`\n     */\n    defaultBehavior?: SetFilterBehavior;\n    /**\n     * Whether to use server side filter or not.\n     * @default \"server\"\n     */\n    mode?: \"server\" | \"off\";\n  };\n  /**\n   * Initial filter state\n   * @deprecated `initialFilter` property is deprecated. Use `filters.initial` instead.\n   */\n  initialFilter?: CrudFilters;\n  /**\n   * Default and unchangeable filter state\n   * @default `[]`\n   * @deprecated `permanentFilter` property is deprecated. Use `filters.permanent` instead.\n   */\n  permanentFilter?: CrudFilters;\n  /**\n   * Default behavior of the `setFilters` function\n   * @default `\"merge\"`\n   * @deprecated `defaultSetFilterBehavior` property is deprecated. Use `filters.defaultBehavior` instead.\n   */\n  defaultSetFilterBehavior?: SetFilterBehavior;\n  /**\n   * Whether to use server side pagination or not.\n   * @default `true`\n   * @deprecated `hasPagination` property is deprecated. Use `pagination.mode` instead.\n   */\n  hasPagination?: boolean;\n  /**\n   * Sortings, filters, page index and records shown per page are tracked by browser history\n   * @default Value set in [Refine](/docs/api-reference/core/components/refine-config/#syncwithlocation). If a custom resource is given, it will be `false`\n   */\n  syncWithLocation?: boolean;\n  /**\n   * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n   */\n  queryOptions?: UseQueryOptions<\n    GetListResponse<TQueryFnData>,\n    TError,\n    GetListResponse<TData>\n  >;\n  /**\n   * Metadata query for dataProvider\n   */\n  meta?: MetaQuery;\n  /**\n   * Metadata query for dataProvider\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   */\n  dataProviderName?: string;\n} & SuccessErrorNotification<\n  GetListResponse<TData>,\n  TError,\n  Prettify<BaseListProps>\n> &\n  LiveModeProps &\n  UseLoadingOvertimeOptionsProps;\n\ntype ReactSetState<T> = React.Dispatch<React.SetStateAction<T>>;\n\ntype SyncWithLocationParams = {\n  pagination: { current?: number; pageSize?: number };\n  /**\n   * @deprecated `sorter` is deprecated. Use `sorters` instead.\n   */\n  sorter?: CrudSorting;\n  sorters: CrudSorting;\n  filters: CrudFilters;\n};\n\nexport type useTableReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n> = {\n  tableQueryResult: QueryObserverResult<GetListResponse<TData>, TError>;\n  /**\n   * @deprecated `sorter` is deprecated. Use `sorters` instead.\n   */\n  sorter: CrudSorting;\n  sorters: CrudSorting;\n  /**\n   * @deprecated `setSorter` is deprecated. Use `setSorters` instead.\n   */\n  setSorter: (sorter: CrudSorting) => void;\n  setSorters: (sorter: CrudSorting) => void;\n  filters: CrudFilters;\n  setFilters: ((filters: CrudFilters, behavior?: SetFilterBehavior) => void) &\n    ((setter: (prevFilters: CrudFilters) => CrudFilters) => void);\n  createLinkForSyncWithLocation: (params: SyncWithLocationParams) => string;\n  current: number;\n  setCurrent: ReactSetState<useTableReturnType[\"current\"]>;\n  pageSize: number;\n  setPageSize: ReactSetState<useTableReturnType[\"pageSize\"]>;\n  pageCount: number;\n} & UseLoadingOvertimeReturnType;\n\n/**\n * By using useTable, you are able to get properties that are compatible with\n * Ant Design {@link https://ant.design/components/table/ `<Table>`} component.\n * All features such as sorting, filtering and pagination comes as out of box.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/useTable} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nconst defaultPermanentFilter: CrudFilters = [];\nconst defaultPermanentSorter: CrudSorting = [];\n\nexport function useTable<\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  initialCurrent,\n  initialPageSize,\n  hasPagination = true,\n  pagination,\n  initialSorter,\n  permanentSorter = defaultPermanentSorter,\n  defaultSetFilterBehavior,\n  initialFilter,\n  permanentFilter = defaultPermanentFilter,\n  filters: filtersFromProp,\n  sorters: sortersFromProp,\n  syncWithLocation: syncWithLocationProp,\n  resource: resourceFromProp,\n  successNotification,\n  errorNotification,\n  queryOptions,\n  liveMode: liveModeFromProp,\n  onLiveEvent,\n  liveParams,\n  meta,\n  metaData,\n  dataProviderName,\n  overtimeOptions,\n}: useTableProps<TQueryFnData, TError, TData> = {}): useTableReturnType<\n  TData,\n  TError\n> {\n  const { syncWithLocation: syncWithLocationContext } = useSyncWithLocation();\n\n  const syncWithLocation = syncWithLocationProp ?? syncWithLocationContext;\n\n  const liveMode = useLiveMode(liveModeFromProp);\n\n  const routerType = useRouterType();\n  const { useLocation } = useRouterContext();\n  const { search, pathname } = useLocation();\n  const getMeta = useMeta();\n  const parsedParams = useParsed();\n\n  const isServerSideFilteringEnabled =\n    (filtersFromProp?.mode || \"server\") === \"server\";\n  const isServerSideSortingEnabled =\n    (sortersFromProp?.mode || \"server\") === \"server\";\n  const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n  const isPaginationEnabled =\n    (pagination?.mode ?? hasPaginationString) !== \"off\";\n  const prefferedCurrent = pickNotDeprecated(\n    pagination?.current,\n    initialCurrent,\n  );\n  const prefferedPageSize = pickNotDeprecated(\n    pagination?.pageSize,\n    initialPageSize,\n  );\n  const preferredMeta = pickNotDeprecated(meta, metaData);\n\n  /** `parseTableParams` is redundant with the new routing */\n  // We want to always parse the query string even when syncWithLocation is\n  // deactivated, for hotlinking to work properly\n  const { parsedCurrent, parsedPageSize, parsedSorter, parsedFilters } =\n    parseTableParams(search ?? \"?\");\n\n  const preferredInitialFilters = pickNotDeprecated(\n    filtersFromProp?.initial,\n    initialFilter,\n  );\n  const preferredPermanentFilters =\n    pickNotDeprecated(filtersFromProp?.permanent, permanentFilter) ??\n    defaultPermanentFilter;\n\n  const preferredInitialSorters = pickNotDeprecated(\n    sortersFromProp?.initial,\n    initialSorter,\n  );\n  const preferredPermanentSorters =\n    pickNotDeprecated(sortersFromProp?.permanent, permanentSorter) ??\n    defaultPermanentSorter;\n\n  const prefferedFilterBehavior =\n    pickNotDeprecated(\n      filtersFromProp?.defaultBehavior,\n      defaultSetFilterBehavior,\n    ) ?? \"merge\";\n\n  let defaultCurrent: number;\n  let defaultPageSize: number;\n  let defaultSorter: CrudSorting | undefined;\n  let defaultFilter: CrudFilters | undefined;\n\n  if (syncWithLocation) {\n    defaultCurrent =\n      parsedParams?.params?.current || parsedCurrent || prefferedCurrent || 1;\n    defaultPageSize =\n      parsedParams?.params?.pageSize ||\n      parsedPageSize ||\n      prefferedPageSize ||\n      10;\n    defaultSorter =\n      parsedParams?.params?.sorters ||\n      (parsedSorter.length ? parsedSorter : preferredInitialSorters);\n    defaultFilter =\n      parsedParams?.params?.filters ||\n      (parsedFilters.length ? parsedFilters : preferredInitialFilters);\n  } else {\n    defaultCurrent = prefferedCurrent || 1;\n    defaultPageSize = prefferedPageSize || 10;\n    defaultSorter = preferredInitialSorters;\n    defaultFilter = preferredInitialFilters;\n  }\n\n  const { replace } = useNavigation();\n  /** New way of `replace` calls to the router is using `useGo` */\n  const go = useGo();\n\n  const { resource, identifier } = useResource(resourceFromProp);\n\n  const combinedMeta = getMeta({\n    resource,\n    meta: preferredMeta,\n  });\n\n  React.useEffect(() => {\n    warnOnce(\n      typeof identifier === \"undefined\",\n      \"useTable: `resource` is not defined.\",\n    );\n  }, [identifier]);\n\n  const [sorters, setSorters] = useState<CrudSorting>(\n    setInitialSorters(preferredPermanentSorters, defaultSorter ?? []),\n  );\n  const [filters, setFilters] = useState<CrudFilters>(\n    setInitialFilters(preferredPermanentFilters, defaultFilter ?? []),\n  );\n  const [current, setCurrent] = useState<number>(defaultCurrent);\n  const [pageSize, setPageSize] = useState<number>(defaultPageSize);\n\n  const getCurrentQueryParams = (): object => {\n    if (routerType === \"new\") {\n      // We get QueryString parameters that are uncontrolled by refine.\n      const { sorters, filters, pageSize, current, ...rest } =\n        parsedParams?.params ?? {};\n\n      return rest;\n    }\n\n    // We get QueryString parameters that are uncontrolled by refine.\n    const { sorter, filters, pageSize, current, ...rest } = qs.parse(search, {\n      ignoreQueryPrefix: true,\n    });\n\n    return rest;\n  };\n\n  const createLinkForSyncWithLocation = ({\n    pagination: { current, pageSize },\n    sorter,\n    filters,\n  }: SyncWithLocationParams) => {\n    if (routerType === \"new\") {\n      return (\n        go({\n          type: \"path\",\n          options: {\n            keepHash: true,\n            keepQuery: true,\n          },\n          query: {\n            ...(isPaginationEnabled ? { current, pageSize } : {}),\n            sorters: sorter,\n            filters,\n            ...getCurrentQueryParams(),\n          },\n        }) ?? \"\"\n      );\n    }\n    const currentQueryParams = qs.parse(search?.substring(1)); // remove first ? character\n\n    const stringifyParams = stringifyTableParams({\n      pagination: {\n        pageSize,\n        current,\n      },\n      sorters: sorters ?? sorter,\n      filters,\n      ...currentQueryParams,\n    });\n\n    return `${pathname ?? \"\"}?${stringifyParams ?? \"\"}`;\n  };\n\n  useEffect(() => {\n    if (search === \"\") {\n      setCurrent(defaultCurrent);\n      setPageSize(defaultPageSize);\n      setSorters(\n        setInitialSorters(preferredPermanentSorters, defaultSorter ?? []),\n      );\n      setFilters(\n        setInitialFilters(preferredPermanentFilters, defaultFilter ?? []),\n      );\n    }\n  }, [search]);\n\n  useEffect(() => {\n    if (syncWithLocation) {\n      // Careful! This triggers render\n      const queryParams = getCurrentQueryParams();\n\n      if (routerType === \"new\") {\n        go({\n          type: \"replace\",\n          options: {\n            keepQuery: true,\n          },\n          query: {\n            ...(isPaginationEnabled ? { pageSize, current } : {}),\n            sorters: differenceWith(\n              sorters,\n              preferredPermanentSorters,\n              isEqual,\n            ),\n            filters: differenceWith(\n              filters,\n              preferredPermanentFilters,\n              isEqual,\n            ),\n            // ...queryParams,\n          },\n        });\n      } else {\n        const stringifyParams = stringifyTableParams({\n          ...(isPaginationEnabled\n            ? {\n                pagination: {\n                  pageSize,\n                  current,\n                },\n              }\n            : {}),\n          sorters: differenceWith(sorters, preferredPermanentSorters, isEqual),\n          filters: differenceWith(filters, preferredPermanentFilters, isEqual),\n          ...queryParams,\n        });\n        return replace?.(`${pathname}?${stringifyParams}`, undefined, {\n          shallow: true,\n        });\n      }\n    }\n  }, [syncWithLocation, current, pageSize, sorters, filters]);\n\n  const queryResult = useList<TQueryFnData, TError, TData>({\n    resource: identifier,\n    hasPagination,\n    pagination: { current, pageSize, mode: pagination?.mode },\n    filters: isServerSideFilteringEnabled\n      ? unionFilters(preferredPermanentFilters, filters)\n      : undefined,\n    sorters: isServerSideSortingEnabled\n      ? unionSorters(preferredPermanentSorters, sorters)\n      : undefined,\n    queryOptions,\n    successNotification,\n    errorNotification,\n    meta: combinedMeta,\n    metaData: combinedMeta,\n    liveMode,\n    liveParams,\n    onLiveEvent,\n    dataProviderName,\n  });\n\n  const setFiltersAsMerge = (newFilters: CrudFilters) => {\n    setFilters((prevFilters) =>\n      unionFilters(preferredPermanentFilters, newFilters, prevFilters),\n    );\n  };\n\n  const setFiltersAsReplace = (newFilters: CrudFilters) => {\n    setFilters(unionFilters(preferredPermanentFilters, newFilters));\n  };\n\n  const setFiltersWithSetter = (\n    setter: (prevFilters: CrudFilters) => CrudFilters,\n  ) => {\n    setFilters((prev) => unionFilters(preferredPermanentFilters, setter(prev)));\n  };\n\n  const setFiltersFn: useTableReturnType<TQueryFnData>[\"setFilters\"] = (\n    setterOrFilters,\n    behavior: SetFilterBehavior = prefferedFilterBehavior,\n  ) => {\n    if (typeof setterOrFilters === \"function\") {\n      setFiltersWithSetter(setterOrFilters);\n    } else {\n      if (behavior === \"replace\") {\n        setFiltersAsReplace(setterOrFilters);\n      } else {\n        setFiltersAsMerge(setterOrFilters);\n      }\n    }\n  };\n\n  const setSortWithUnion = (newSorter: CrudSorting) => {\n    setSorters(() => unionSorters(preferredPermanentSorters, newSorter));\n  };\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: queryResult.isFetching,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  return {\n    tableQueryResult: queryResult,\n    sorters,\n    setSorters: setSortWithUnion,\n    sorter: sorters,\n    setSorter: setSortWithUnion,\n    filters,\n    setFilters: setFiltersFn,\n    current,\n    setCurrent,\n    pageSize,\n    setPageSize,\n    pageCount: pageSize\n      ? Math.ceil((queryResult.data?.total ?? 0) / pageSize)\n      : 1,\n    createLinkForSyncWithLocation,\n    overtime: {\n      elapsedTime,\n    },\n  };\n}\n","import { useContext } from \"react\";\nimport {\n  useMutation,\n  UseMutationOptions,\n  UseMutationResult,\n  useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { AuditLogContext } from \"@contexts/auditLog\";\nimport { ResourceContext } from \"@contexts/resource\";\nimport { useGetIdentity } from \"@hooks/auth\";\nimport { BaseKey, LogParams } from \"../../../interfaces\";\nimport { hasPermission, pickNotDeprecated } from \"@definitions/helpers\";\nimport { pickResource } from \"@definitions/helpers/pick-resource\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\ntype LogRenameData =\n  | {\n      resource?: string;\n    }\n  | undefined;\n\nexport type UseLogReturnType<TLogData, TLogRenameData> = {\n  log: UseMutationResult<TLogData, Error, LogParams>;\n  rename: UseMutationResult<\n    TLogRenameData,\n    Error,\n    {\n      id: BaseKey;\n      name: string;\n    }\n  >;\n};\n\nexport type UseLogMutationProps<\n  TLogData,\n  TLogRenameData extends LogRenameData = LogRenameData,\n> = {\n  logMutationOptions?: Omit<\n    UseMutationOptions<TLogData, Error, LogParams, unknown>,\n    \"mutationFn\"\n  >;\n  renameMutationOptions?: Omit<\n    UseMutationOptions<\n      TLogRenameData,\n      Error,\n      { id: BaseKey; name: string },\n      unknown\n    >,\n    \"mutationFn\" | \"onSuccess\"\n  >;\n};\n\n/**\n * useLog is used to `create` a new and `rename` the existing audit log.\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/audit-log/useLog} for more details.\n */\n\nexport const useLog = <\n  TLogData,\n  TLogRenameData extends LogRenameData = LogRenameData,\n>({\n  logMutationOptions,\n  renameMutationOptions,\n}: UseLogMutationProps<TLogData, TLogRenameData> = {}): UseLogReturnType<\n  TLogData,\n  TLogRenameData\n> => {\n  const queryClient = useQueryClient();\n  const auditLogContext = useContext(AuditLogContext);\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const authProvider = useActiveAuthProvider();\n\n  const { resources } = useContext(ResourceContext);\n  const {\n    data: identityData,\n    refetch,\n    isLoading,\n  } = useGetIdentity({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    queryOptions: {\n      enabled: !!auditLogContext?.create,\n    },\n  });\n\n  const log = useMutation<TLogData, Error, LogParams, unknown>(\n    async (params) => {\n      const resource = pickResource(params.resource, resources);\n      const logPermissions = pickNotDeprecated(\n        resource?.meta?.audit,\n        resource?.options?.audit,\n        resource?.options?.auditLog?.permissions,\n      );\n\n      if (logPermissions) {\n        if (!hasPermission(logPermissions, params.action)) {\n          return;\n        }\n      }\n\n      let authorData;\n      if (isLoading && !!auditLogContext?.create) {\n        authorData = await refetch();\n      }\n\n      return await auditLogContext.create?.({\n        ...params,\n        author: identityData ?? authorData?.data,\n      });\n    },\n    {\n      mutationKey: keys().audit().action(\"log\").get(),\n      ...logMutationOptions,\n      meta: {\n        ...logMutationOptions?.meta,\n        ...getXRay(\"useLog\", preferLegacyKeys),\n      },\n    },\n  );\n\n  const rename = useMutation<\n    TLogRenameData,\n    Error,\n    { id: BaseKey; name: string },\n    unknown\n  >(\n    async (params) => {\n      return await auditLogContext.update?.(params);\n    },\n    {\n      onSuccess: (data) => {\n        if (data?.resource) {\n          queryClient.invalidateQueries(\n            keys()\n              .audit()\n              .resource(data?.resource ?? \"\")\n              .action(\"list\")\n              .get(preferLegacyKeys),\n          );\n        }\n      },\n      mutationKey: keys().audit().action(\"rename\").get(),\n      ...renameMutationOptions,\n      meta: {\n        ...renameMutationOptions?.meta,\n        ...getXRay(\"useLog\", preferLegacyKeys),\n      },\n    },\n  );\n\n  return { log, rename };\n};\n","import React from \"react\";\n\nimport { IAuditLogContext } from \"./IAuditLogContext\";\n\nexport const AuditLogContext = React.createContext<IAuditLogContext>({});\n\nexport const AuditLogContextProvider: React.FC<\n  IAuditLogContext & {\n    children: React.ReactNode;\n  }\n> = ({ create, get, update, children }) => {\n  return (\n    <AuditLogContext.Provider value={{ create, get, update }}>\n      {children}\n    </AuditLogContext.Provider>\n  );\n};\n","import { useContext } from \"react\";\nimport {\n  useQuery,\n  UseQueryResult,\n  UseQueryOptions,\n} from \"@tanstack/react-query\";\n\nimport { AuditLogContext } from \"@contexts/auditLog\";\nimport { HttpError, MetaQuery } from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nexport type UseLogProps<TQueryFnData, TError, TData> = {\n  resource: string;\n  action?: string;\n  meta?: Record<number | string, any>;\n  author?: Record<number | string, any>;\n  queryOptions?: UseQueryOptions<TQueryFnData, TError, TData>;\n  metaData?: MetaQuery;\n};\n\n/**\n * useLogList is used to get and filter audit logs.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/audit-log/useLogList} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function.\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Defaults to `TQueryFnData`\n *\n */\nexport const useLogList = <\n  TQueryFnData = any,\n  TError extends HttpError = HttpError,\n  TData = TQueryFnData,\n>({\n  resource,\n  action,\n  meta,\n  author,\n  metaData,\n  queryOptions,\n}: UseLogProps<TQueryFnData, TError, TData>): UseQueryResult<TData> => {\n  const { get } = useContext(AuditLogContext);\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const queryResponse = useQuery<TQueryFnData, TError, TData>({\n    queryKey: keys()\n      .audit()\n      .resource(resource)\n      .action(\"list\")\n      .params(meta)\n      .get(preferLegacyKeys),\n    queryFn: () =>\n      get?.({\n        resource,\n        action,\n        author,\n        meta,\n        metaData,\n      }) ?? Promise.resolve([]),\n    enabled: typeof get !== \"undefined\",\n    ...queryOptions,\n    retry: false,\n    meta: {\n      ...queryOptions?.meta,\n      ...getXRay(\"useLogList\", preferLegacyKeys),\n    },\n  });\n\n  return queryResponse;\n};\n","import React, { useContext } from \"react\";\nimport warnOnce from \"warn-once\";\n\nimport { useRefineContext, useResource, useTranslate } from \"@hooks\";\nimport { TranslationContext } from \"@contexts/translation\";\nimport { pickNotDeprecated } from \"@definitions\";\n\nimport { IResourceItem } from \"../../interfaces\";\nimport { useRouterType } from \"@contexts/router-picker\";\nimport { getActionRoutesFromResource } from \"@definitions/helpers/router\";\nimport { pickResource } from \"../../definitions/helpers/pick-resource/index\";\nimport { composeRoute } from \"@definitions/helpers/router/compose-route\";\nimport { useParsed } from \"@hooks/router/use-parsed\";\n\nexport type BreadcrumbsType = {\n  label: string;\n  href?: string;\n  icon?: React.ReactNode;\n};\n\ntype UseBreadcrumbReturnType = {\n  breadcrumbs: BreadcrumbsType[];\n};\n\ntype UseBreadcrumbProps = {\n  /**\n   * Additional params to be used in the route generation process.\n   */\n  meta?: Record<string, string | number>;\n};\n\nexport const useBreadcrumb = ({\n  meta: metaFromProps = {},\n}: UseBreadcrumbProps = {}): UseBreadcrumbReturnType => {\n  const routerType = useRouterType();\n  const { i18nProvider } = useContext(TranslationContext);\n  const parsed = useParsed();\n  const translate = useTranslate();\n  const { resources, resource, action } = useResource();\n  const {\n    options: { textTransformers },\n  } = useRefineContext();\n\n  const breadcrumbs: BreadcrumbsType[] = [];\n\n  if (!resource?.name) {\n    return { breadcrumbs };\n  }\n\n  const addBreadcrumb = (parentName: string | IResourceItem) => {\n    const parentResource =\n      typeof parentName === \"string\"\n        ? pickResource(parentName, resources, routerType === \"legacy\") ?? {\n            name: parentName,\n          }\n        : parentName;\n\n    if (parentResource) {\n      const grandParentName = pickNotDeprecated(\n        parentResource?.meta?.parent,\n        parentResource?.parentName,\n      );\n      if (grandParentName) {\n        addBreadcrumb(grandParentName);\n      }\n      const listActionOfResource = getActionRoutesFromResource(\n        parentResource,\n        resources,\n        routerType === \"legacy\",\n      ).find((r) => r.action === \"list\");\n\n      const hrefRaw = listActionOfResource?.resource?.list\n        ? listActionOfResource?.route\n        : undefined;\n\n      const href = hrefRaw\n        ? routerType === \"legacy\"\n          ? hrefRaw\n          : composeRoute(hrefRaw, parentResource?.meta, parsed, metaFromProps)\n        : undefined;\n\n      breadcrumbs.push({\n        label:\n          pickNotDeprecated(\n            parentResource.meta?.label,\n            parentResource.options?.label,\n          ) ??\n          translate(\n            `${parentResource.name}.${parentResource.name}`,\n            textTransformers.humanize(parentResource.name),\n          ),\n        href: href,\n        icon: pickNotDeprecated(\n          parentResource.meta?.icon,\n          parentResource.options?.icon,\n          parentResource.icon,\n        ),\n      });\n    }\n  };\n\n  addBreadcrumb(resource);\n\n  if (action && action !== \"list\") {\n    const key = `actions.${action}`;\n    const actionLabel = translate(key);\n    if (typeof i18nProvider !== \"undefined\" && actionLabel === key) {\n      warnOnce(\n        true,\n        `[useBreadcrumb]: Breadcrumb missing translate key for the \"${action}\" action. Please add \"actions.${action}\" key to your translation file.\\nFor more information, see https://refine.dev/docs/api-reference/core/hooks/useBreadcrumb/#i18n-support`,\n      );\n      breadcrumbs.push({\n        label: translate(\n          `buttons.${action}`,\n          textTransformers.humanize(action),\n        ),\n      });\n    } else {\n      breadcrumbs.push({\n        label: translate(key, textTransformers.humanize(action)),\n      });\n    }\n  }\n\n  return {\n    breadcrumbs,\n  };\n};\n","import React from \"react\";\nimport { useTranslate, useResource, useParsed, useRouterContext } from \"..\";\nimport { useUserFriendlyName, pickNotDeprecated } from \"@definitions\";\nimport { useRouterType } from \"../../contexts/router-picker\";\nimport { createResourceKey } from \"../../definitions/helpers/menu/create-resource-key\";\nimport { useGetToPath } from \"../router/use-get-to-path/index\";\nimport { getParentResource } from \"@definitions/helpers/router\";\nimport {\n  FlatTreeItem,\n  createTree,\n} from \"../../definitions/helpers/menu/create-tree\";\n\ntype UseMenuReturnType = {\n  defaultOpenKeys: string[];\n  selectedKey: string;\n  menuItems: TreeMenuItem[];\n};\n\nexport type UseMenuProps = {\n  meta?: Record<string, any>;\n  hideOnMissingParameter?: boolean;\n};\n\nexport type TreeMenuItem = FlatTreeItem & {\n  route?: string;\n  icon?: React.ReactNode;\n  label?: string;\n  children: TreeMenuItem[];\n};\n\nconst getCleanPath = (pathname: string) => {\n  return pathname\n    .split(\"?\")[0]\n    .split(\"#\")[0]\n    .replace(/(.+)(\\/$)/, \"$1\");\n};\n\n/**\n * `useMenu` is used to get menu items of the default sidebar.\n * These items include a link to dashboard page (if it exists) and links to the user defined resources\n * (passed as children to {@link https://refine.dev/docs/core/components/refine-config `<Refine>`}).\n * This hook can also be used to build custom menus, which is also used by default sidebar to show menu items.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/ui/useMenu} for more details.\n */\nexport const useMenu = (\n  { meta, hideOnMissingParameter }: UseMenuProps = {\n    hideOnMissingParameter: true,\n  },\n): UseMenuReturnType => {\n  const translate = useTranslate();\n\n  const getToPath = useGetToPath();\n  const routerType = useRouterType();\n  const { resource, resources } = useResource();\n  const { pathname } = useParsed();\n  const { useLocation } = useRouterContext();\n  const { pathname: legacyPath } = useLocation();\n  const getFriendlyName = useUserFriendlyName();\n\n  const cleanPathname =\n    routerType === \"legacy\"\n      ? getCleanPath(legacyPath)\n      : pathname\n        ? getCleanPath(pathname)\n        : undefined;\n\n  const cleanRoute = `/${(cleanPathname ?? \"\").replace(/^\\//, \"\")}`;\n\n  const selectedKey = resource\n    ? createResourceKey(resource, resources, routerType === \"legacy\")\n    : cleanRoute ?? \"\";\n\n  const defaultOpenKeys = React.useMemo(() => {\n    if (!resource) return [];\n    let parent = getParentResource(resource, resources);\n    const keys = [createResourceKey(resource, resources)];\n    while (parent) {\n      keys.push(createResourceKey(parent, resources));\n      parent = getParentResource(parent, resources);\n    }\n    return keys;\n  }, []);\n\n  const prepareItem = React.useCallback(\n    (item: FlatTreeItem): TreeMenuItem | undefined => {\n      if (item?.meta?.hide ?? item?.options?.hide) return undefined;\n      if (!item?.list && item.children.length === 0) return undefined;\n\n      const composed = item.list\n        ? getToPath({\n            resource: item,\n            action: \"list\",\n            legacy: routerType === \"legacy\",\n            meta,\n          })\n        : undefined;\n\n      if (\n        hideOnMissingParameter &&\n        composed &&\n        composed.match(/(\\/|^):(.+?)(\\/|$){1}/)\n      )\n        return undefined;\n\n      return {\n        ...item,\n        route: composed,\n        icon: pickNotDeprecated(item.meta?.icon, item.options?.icon, item.icon),\n        label:\n          pickNotDeprecated(item?.meta?.label, item?.options?.label) ??\n          translate(\n            `${item.name}.${item.name}`,\n            getFriendlyName(item.name, \"plural\"),\n          ),\n      };\n    },\n    [routerType, meta, getToPath, translate, hideOnMissingParameter],\n  );\n\n  const treeItems = React.useMemo(() => {\n    const treeMenuItems = createTree(resources, routerType === \"legacy\");\n\n    // add paths to items and their nodes recursively\n    const prepare = (items: TreeMenuItem[]): TreeMenuItem[] => {\n      return items.flatMap((item) => {\n        const preparedNodes = prepare(item.children);\n        const newItem = prepareItem({\n          ...item,\n          children: preparedNodes,\n        });\n\n        if (!newItem) return [];\n\n        return [newItem];\n      });\n    };\n\n    return prepare(treeMenuItems);\n  }, [resources, routerType, prepareItem]);\n\n  return {\n    defaultOpenKeys,\n    selectedKey,\n    menuItems: treeItems,\n  };\n};\n","import { IResourceItem } from \"../../../interfaces\";\nimport {\n  getParentResource,\n  removeLeadingTrailingSlashes,\n} from \"../../helpers/router\";\n\nexport const createResourceKey = (\n  resource: IResourceItem,\n  resources: IResourceItem[],\n  legacy = false,\n) => {\n  const parents: IResourceItem[] = [];\n\n  let currentParentResource = getParentResource(resource, resources);\n  while (currentParentResource) {\n    parents.push(currentParentResource);\n    currentParentResource = getParentResource(currentParentResource, resources);\n  }\n  parents.reverse();\n\n  const key = [...parents, resource]\n    .map((r) =>\n      removeLeadingTrailingSlashes(\n        (legacy ? r.route : undefined) ?? r.identifier ?? r.name,\n      ),\n    )\n    .join(\"/\");\n\n  return `/${key.replace(/^\\//, \"\")}`;\n};\n","import { IResourceItem } from \"../../../contexts/resource\";\nimport { getParentResource } from \"../router\";\nimport { createResourceKey } from \"./create-resource-key\";\n\nexport type Tree = {\n  item: IResourceItem;\n  children: { [key: string]: Tree };\n};\n\nexport type FlatTreeItem = IResourceItem & {\n  key: string;\n  children: FlatTreeItem[];\n};\n\nexport const createTree = (\n  resources: IResourceItem[],\n  legacy = false,\n): FlatTreeItem[] => {\n  const root: Tree = {\n    item: {\n      name: \"__root__\",\n    },\n    children: {},\n  };\n\n  resources.forEach((resource) => {\n    const parents: IResourceItem[] = [];\n\n    let currentParent = getParentResource(resource, resources);\n    while (currentParent) {\n      parents.push(currentParent);\n      currentParent = getParentResource(currentParent, resources);\n    }\n    parents.reverse();\n\n    let currentTree = root;\n\n    parents.forEach((parent) => {\n      const key =\n        (legacy ? parent.route : undefined) ?? parent.identifier ?? parent.name;\n\n      if (!currentTree.children[key]) {\n        currentTree.children[key] = {\n          item: parent,\n          children: {},\n        };\n      }\n      currentTree = currentTree.children[key];\n    });\n\n    const key =\n      (legacy ? resource.route : undefined) ??\n      resource.identifier ??\n      resource.name;\n\n    if (!currentTree.children[key]) {\n      currentTree.children[key] = {\n        item: resource,\n        children: {},\n      };\n    }\n  });\n\n  const flatten = (tree: Tree): FlatTreeItem[] => {\n    const items: FlatTreeItem[] = [];\n\n    Object.keys(tree.children).forEach((key) => {\n      const itemKey = createResourceKey(\n        tree.children[key].item,\n        resources,\n        legacy,\n      );\n      const item: FlatTreeItem = {\n        ...tree.children[key].item,\n        key: itemKey,\n        children: flatten(tree.children[key]),\n      };\n      items.push(item);\n    });\n\n    return items;\n  };\n\n  return flatten(root);\n};\n","import { useParsed } from \"@hooks/router\";\nimport { sanitizeResource } from \"@definitions/helpers/sanitize-resource\";\nimport { IResourceItem, MetaQuery } from \"../../interfaces\";\n\n/**\n * Hook that returns a function to get meta.\n * The meta is a combination of the resource meta, hook meta and query params.\n * @internal\n */\nexport const useMeta = () => {\n  const { params } = useParsed();\n\n  const getMetaFn = ({\n    resource,\n    meta: metaFromProp,\n  }: {\n    resource?: IResourceItem;\n    meta?: MetaQuery;\n  } = {}) => {\n    const { meta } = sanitizeResource(resource) ?? { meta: {} };\n\n    // this fields came from the query params and should be removed from the meta because they are not part of the meta.\n    const {\n      filters: _filters,\n      sorters: _sorters,\n      current: _current,\n      pageSize: _pageSize,\n      ...additionalParams\n    } = params ?? {};\n\n    return { ...meta, ...additionalParams, ...metaFromProp };\n  };\n\n  return getMetaFn;\n};\n","import React, { useState } from \"react\";\n\nimport { useLogin, useTranslate } from \"@hooks\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\nexport interface ILoginForm {\n  username: string;\n  password: string;\n}\n\n/**\n * @deprecated LoginPage is deprecated. Use AuthPage instead. @see {@link https://refine.dev/docs/core/components/auth-page} for more details.\n * **refine** has a default login page form which is served on `/login` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config/#loginpage} for more details.\n */\nexport const LoginPage: React.FC = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const translate = useTranslate();\n\n  const authProvider = useActiveAuthProvider();\n  const { mutate: login } = useLogin<ILoginForm>({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  return (\n    <>\n      <h1>{translate(\"pages.login.title\", \"Sign in your account\")}</h1>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          login({ username, password });\n        }}\n      >\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                {translate(\"pages.login.username\", undefined, \"username\")}:\n              </td>\n              <td>\n                <input\n                  type=\"text\"\n                  size={20}\n                  autoCorrect=\"off\"\n                  spellCheck={false}\n                  autoCapitalize=\"off\"\n                  autoFocus\n                  required\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                {translate(\"pages.login.password\", undefined, \"password\")}:\n              </td>\n              <td>\n                <input\n                  type=\"password\"\n                  required\n                  size={20}\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <br />\n        <input type=\"submit\" value=\"login\" />\n      </form>\n    </>\n  );\n};\n","import React, {\n  DetailedHTMLProps,\n  HTMLAttributes,\n  FormHTMLAttributes,\n} from \"react\";\n\nimport {\n  LoginPage,\n  RegisterPage,\n  ForgotPasswordPage,\n  UpdatePasswordPage,\n} from \"./components\";\n\nimport { AuthPageProps } from \"../../../interfaces\";\n\nexport type DivPropsType = DetailedHTMLProps<\n  HTMLAttributes<HTMLDivElement>,\n  HTMLDivElement\n>;\nexport type FormPropsType = DetailedHTMLProps<\n  FormHTMLAttributes<HTMLFormElement>,\n  HTMLFormElement\n>;\n\nexport type AuthProps = AuthPageProps<\n  DivPropsType,\n  DivPropsType,\n  FormPropsType\n>;\n\n/**\n * **refine** has a default auth page form which is served on `/login` route when the `authProvider` configuration is provided.\n * @param title is not implemented yet.\n * @see {@link https://refine.dev/docs/api-reference/core/components/auth-page/} for more details.\n */\nexport const AuthPage: React.FC<AuthProps> = (props) => {\n  const { type } = props;\n  const renderView = () => {\n    switch (type) {\n      case \"register\":\n        return <RegisterPage {...props} />;\n      case \"forgotPassword\":\n        return <ForgotPasswordPage {...props} />;\n      case \"updatePassword\":\n        return <UpdatePasswordPage {...props} />;\n      default:\n        return <LoginPage {...props} />;\n    }\n  };\n\n  return <>{renderView()}</>;\n};\n","import React, { useState } from \"react\";\nimport { LoginPageProps, LoginFormTypes } from \"../../../../../interfaces\";\n\nimport { useRouterContext, useLink, useRouterType, useLogin } from \"@hooks\";\nimport { useTranslate } from \"@hooks/translate\";\n\nimport { DivPropsType, FormPropsType } from \"../..\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\n\ntype LoginProps = LoginPageProps<DivPropsType, DivPropsType, FormPropsType>;\n\nexport const LoginPage: React.FC<LoginProps> = ({\n  providers,\n  registerLink,\n  forgotPasswordLink,\n  rememberMe,\n  contentProps,\n  wrapperProps,\n  renderContent,\n  formProps,\n  title = undefined,\n  hideForm,\n}) => {\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [remember, setRemember] = useState(false);\n\n  const translate = useTranslate();\n\n  const authProvider = useActiveAuthProvider();\n  const { mutate: login } = useLogin<LoginFormTypes>({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  const renderLink = (link: string, text?: string) => {\n    return <ActiveLink to={link}>{text}</ActiveLink>;\n  };\n\n  const renderProviders = () => {\n    if (providers) {\n      return providers.map((provider) => (\n        <div\n          key={provider.name}\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginBottom: \"1rem\",\n          }}\n        >\n          <button\n            onClick={() =>\n              login({\n                providerName: provider.name,\n              })\n            }\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n            }}\n          >\n            {provider?.icon}\n            {provider.label ?? <label>{provider.label}</label>}\n          </button>\n        </div>\n      ));\n    }\n    return null;\n  };\n\n  const content = (\n    <div {...contentProps}>\n      <h1 style={{ textAlign: \"center\" }}>\n        {translate(\"pages.login.title\", \"Sign in to your account\")}\n      </h1>\n      {renderProviders()}\n      {!hideForm && (\n        <>\n          <hr />\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              login({ email, password, remember });\n            }}\n            {...formProps}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                padding: 25,\n              }}\n            >\n              <label htmlFor=\"email-input\">\n                {translate(\"pages.login.fields.email\", \"Email\")}\n              </label>\n              <input\n                id=\"email-input\"\n                name=\"email\"\n                type=\"text\"\n                size={20}\n                autoCorrect=\"off\"\n                spellCheck={false}\n                autoCapitalize=\"off\"\n                required\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <label htmlFor=\"password-input\">\n                {translate(\"pages.login.fields.password\", \"Password\")}\n              </label>\n              <input\n                id=\"password-input\"\n                type=\"password\"\n                name=\"password\"\n                required\n                size={20}\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              {rememberMe ?? (\n                <>\n                  <label htmlFor=\"remember-me-input\">\n                    {translate(\"pages.login.buttons.rememberMe\", \"Remember me\")}\n                    <input\n                      id=\"remember-me-input\"\n                      name=\"remember\"\n                      type=\"checkbox\"\n                      size={20}\n                      checked={remember}\n                      value={remember.toString()}\n                      onChange={() => {\n                        setRemember(!remember);\n                      }}\n                    />\n                  </label>\n                </>\n              )}\n              <br />\n              {forgotPasswordLink ??\n                renderLink(\n                  \"/forgot-password\",\n                  translate(\n                    \"pages.login.buttons.forgotPassword\",\n                    \"Forgot password?\",\n                  ),\n                )}\n              <input\n                type=\"submit\"\n                value={translate(\"pages.login.signin\", \"Sign in\")}\n              />\n              {registerLink ?? (\n                <span>\n                  {translate(\n                    \"pages.login.buttons.noAccount\",\n                    \"Don’t have an account?\",\n                  )}{\" \"}\n                  {renderLink(\n                    \"/register\",\n                    translate(\"pages.login.register\", \"Sign up\"),\n                  )}\n                </span>\n              )}\n            </div>\n          </form>\n        </>\n      )}\n      {registerLink !== false && hideForm && (\n        <div style={{ textAlign: \"center\" }}>\n          {translate(\"pages.login.buttons.noAccount\", \"Don’t have an account?\")}{\" \"}\n          {renderLink(\n            \"/register\",\n            translate(\"pages.login.register\", \"Sign up\"),\n          )}\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div {...wrapperProps}>\n      {renderContent ? renderContent(content, title) : content}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { RegisterPageProps } from \"../../../../../interfaces\";\n\nimport {\n  useTranslate,\n  useRouterContext,\n  useLink,\n  useRouterType,\n  useRegister,\n} from \"@hooks\";\n\nimport { DivPropsType, FormPropsType } from \"../..\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\n\ntype RegisterProps = RegisterPageProps<\n  DivPropsType,\n  DivPropsType,\n  FormPropsType\n>;\n\nexport const RegisterPage: React.FC<RegisterProps> = ({\n  providers,\n  loginLink,\n  wrapperProps,\n  contentProps,\n  renderContent,\n  formProps,\n  title = undefined,\n  hideForm,\n}) => {\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const translate = useTranslate();\n\n  const authProvider = useActiveAuthProvider();\n  const { mutate: register, isLoading } = useRegister({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  const renderLink = (link: string, text?: string) => {\n    return <ActiveLink to={link}>{text}</ActiveLink>;\n  };\n\n  const renderProviders = () => {\n    if (providers) {\n      return providers.map((provider) => (\n        <div\n          key={provider.name}\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginBottom: \"1rem\",\n          }}\n        >\n          <button\n            onClick={() =>\n              register({\n                providerName: provider.name,\n              })\n            }\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n            }}\n          >\n            {provider?.icon}\n            {provider.label ?? <label>{provider.label}</label>}\n          </button>\n        </div>\n      ));\n    }\n    return null;\n  };\n\n  const content = (\n    <div {...contentProps}>\n      <h1 style={{ textAlign: \"center\" }}>\n        {translate(\"pages.register.title\", \"Sign up for your account\")}\n      </h1>\n      {renderProviders()}\n      {!hideForm && (\n        <>\n          <hr />\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              register({ email, password });\n            }}\n            {...formProps}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                padding: 25,\n              }}\n            >\n              <label htmlFor=\"email-input\">\n                {translate(\"pages.register.fields.email\", \"Email\")}\n              </label>\n              <input\n                id=\"email-input\"\n                name=\"email\"\n                type=\"email\"\n                size={20}\n                autoCorrect=\"off\"\n                spellCheck={false}\n                autoCapitalize=\"off\"\n                required\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <label htmlFor=\"password-input\">\n                {translate(\"pages.register.fields.password\", \"Password\")}\n              </label>\n              <input\n                id=\"password-input\"\n                name=\"password\"\n                type=\"password\"\n                required\n                size={20}\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <input\n                type=\"submit\"\n                value={translate(\"pages.register.buttons.submit\", \"Sign up\")}\n                disabled={isLoading}\n              />\n              {loginLink ?? (\n                <>\n                  <span>\n                    {translate(\n                      \"pages.login.buttons.haveAccount\",\n                      \"Have an account?\",\n                    )}{\" \"}\n                    {renderLink(\n                      \"/login\",\n                      translate(\"pages.login.signin\", \"Sign in\"),\n                    )}\n                  </span>\n                </>\n              )}\n            </div>\n          </form>\n        </>\n      )}\n      {loginLink !== false && hideForm && (\n        <div style={{ textAlign: \"center\" }}>\n          {translate(\"pages.login.buttons.haveAccount\", \"Have an account?\")}{\" \"}\n          {renderLink(\"/login\", translate(\"pages.login.signin\", \"Sign in\"))}\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div {...wrapperProps}>\n      {renderContent ? renderContent(content, title) : content}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport {\n  useTranslate,\n  useRouterContext,\n  useLink,\n  useRouterType,\n  useForgotPassword,\n} from \"@hooks\";\n\nimport { DivPropsType, FormPropsType } from \"../..\";\nimport {\n  ForgotPasswordFormTypes,\n  ForgotPasswordPageProps,\n} from \"../../../../../interfaces\";\n\ntype ForgotPasswordProps = ForgotPasswordPageProps<\n  DivPropsType,\n  DivPropsType,\n  FormPropsType\n>;\n\nexport const ForgotPasswordPage: React.FC<ForgotPasswordProps> = ({\n  loginLink,\n  wrapperProps,\n  contentProps,\n  renderContent,\n  formProps,\n  title = undefined,\n}) => {\n  const translate = useTranslate();\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n  const [email, setEmail] = useState(\"\");\n\n  const { mutate: forgotPassword, isLoading } =\n    useForgotPassword<ForgotPasswordFormTypes>();\n\n  const renderLink = (link: string, text?: string) => {\n    return <ActiveLink to={link}>{text}</ActiveLink>;\n  };\n\n  const content = (\n    <div {...contentProps}>\n      <h1 style={{ textAlign: \"center\" }}>\n        {translate(\"pages.forgotPassword.title\", \"Forgot your password?\")}\n      </h1>\n      <hr />\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          forgotPassword({ email });\n        }}\n        {...formProps}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            padding: 25,\n          }}\n        >\n          <label htmlFor=\"email-input\">\n            {translate(\"pages.forgotPassword.fields.email\", \"Email\")}\n          </label>\n          <input\n            id=\"email-input\"\n            name=\"email\"\n            type=\"mail\"\n            autoCorrect=\"off\"\n            spellCheck={false}\n            autoCapitalize=\"off\"\n            required\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <input\n            type=\"submit\"\n            disabled={isLoading}\n            value={translate(\n              \"pages.forgotPassword.buttons.submit\",\n              \"Send reset instructions\",\n            )}\n          />\n          <br />\n          {loginLink ?? (\n            <span>\n              {translate(\n                \"pages.register.buttons.haveAccount\",\n                \"Have an account? \",\n              )}{\" \"}\n              {renderLink(\"/login\", translate(\"pages.login.signin\", \"Sign in\"))}\n            </span>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n\n  return (\n    <div {...wrapperProps}>\n      {renderContent ? renderContent(content, title) : content}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  UpdatePasswordFormTypes,\n  UpdatePasswordPageProps,\n} from \"../../../../../interfaces\";\n\nimport { useTranslate, useUpdatePassword } from \"@hooks\";\n\nimport { DivPropsType, FormPropsType } from \"../..\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\n\ntype UpdatePasswordProps = UpdatePasswordPageProps<\n  DivPropsType,\n  DivPropsType,\n  FormPropsType\n>;\n\nexport const UpdatePasswordPage: React.FC<UpdatePasswordProps> = ({\n  wrapperProps,\n  contentProps,\n  renderContent,\n  formProps,\n  title = undefined,\n}) => {\n  const translate = useTranslate();\n\n  const authProvider = useActiveAuthProvider();\n  const { mutate: updatePassword, isLoading } =\n    useUpdatePassword<UpdatePasswordFormTypes>({\n      v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const content = (\n    <div {...contentProps}>\n      <h1 style={{ textAlign: \"center\" }}>\n        {translate(\"pages.updatePassword.title\", \"Update Password\")}\n      </h1>\n      <hr />\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          updatePassword({\n            password: newPassword,\n            confirmPassword,\n          });\n        }}\n        {...formProps}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            padding: 25,\n          }}\n        >\n          <label htmlFor=\"password-input\">\n            {translate(\"pages.updatePassword.fields.password\", \"New Password\")}\n          </label>\n          <input\n            id=\"password-input\"\n            name=\"password\"\n            type=\"password\"\n            required\n            size={20}\n            value={newPassword}\n            onChange={(e) => setNewPassword(e.target.value)}\n          />\n          <label htmlFor=\"confirm-password-input\">\n            {translate(\n              \"pages.updatePassword.fields.confirmPassword\",\n              \"Confirm New Password\",\n            )}\n          </label>\n          <input\n            id=\"confirm-password-input\"\n            name=\"confirmPassword\"\n            type=\"password\"\n            required\n            size={20}\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n          <input\n            type=\"submit\"\n            disabled={isLoading}\n            value={translate(\"pages.updatePassword.buttons.submit\", \"Update\")}\n          />\n        </div>\n      </form>\n    </div>\n  );\n\n  return (\n    <div {...wrapperProps}>\n      {renderContent ? renderContent(content, title) : content}\n    </div>\n  );\n};\n","import React from \"react\";\n\n/**\n * **refine** shows a default ready page on root route when no `resources` is passed to the `<Refine>` component as a property.\n *\n * @deprecated `ReadyPage` is deprecated and will be removed in the next major release.\n */\nexport const ReadyPage: React.FC = () => {\n  return (\n    <>\n      <h1>Welcome on board</h1>\n      <p>Your configuration is completed.</p>\n      <p>\n        Now you can get started by adding your resources to the{\" \"}\n        <code>`resources`</code> property of <code>{\"`<Refine>`\"}</code>\n      </p>\n      <div style={{ display: \"flex\", gap: 8 }}>\n        <a href=\"https://refine.dev\" target=\"_blank\" rel=\"noreferrer\">\n          <button>Documentation</button>\n        </a>\n        <a href=\"https://refine.dev/examples\" target=\"_blank\" rel=\"noreferrer\">\n          <button>Examples</button>\n        </a>\n        <a href=\"https://discord.gg/refine\" target=\"_blank\" rel=\"noreferrer\">\n          <button>Community</button>\n        </a>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { ConfigSuccessPage } from \"../config-success\";\nimport { useRefineContext } from \"@hooks/refine\";\nimport { ConfigErrorPage } from \"../config-error\";\n\nexport const WelcomePage = () => {\n  const { __initialized } = useRefineContext();\n\n  return (\n    <>\n      <ConfigSuccessPage />\n      {!__initialized && <ConfigErrorPage />}\n    </>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport { useMediaQuery } from \"@definitions/helpers\";\n\ntype CardInfo = {\n  title: string;\n  description: string;\n  link: string;\n  iconUrl: string;\n};\n\nconst cards: CardInfo[] = [\n  {\n    title: \"Documentation\",\n    description:\n      \"Learn about the technical details of using Refine in your projects.\",\n    link: \"https://refine.dev/docs\",\n    iconUrl:\n      \"https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/book.svg\",\n  },\n  {\n    title: \"Tutorial\",\n    description:\n      \"Learn how to use Refine by building a fully-functioning CRUD app, from scratch to full launch.\",\n    link: \"https://refine.dev/tutorial\",\n    iconUrl:\n      \"https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/hat.svg\",\n  },\n  {\n    title: \"Templates\",\n    description:\n      \"Explore a range of pre-built templates, perfect everything from admin panels to dashboards and CRMs.\",\n    link: \"https://refine.dev/templates\",\n    iconUrl:\n      \"https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/application.svg\",\n  },\n  {\n    title: \"Community\",\n    description: \"Join our Discord community and keep up with the latest news.\",\n    link: \"https://discord.gg/refine\",\n    iconUrl:\n      \"https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/discord.svg\",\n  },\n];\n\n/**\n * It is a page that welcomes you after the configuration is completed.\n */\nexport const ConfigSuccessPage: React.FC = () => {\n  const isTablet = useMediaQuery(\"(max-width: 1010px)\");\n  const isMobile = useMediaQuery(\"(max-width: 650px)\");\n\n  const getGridTemplateColumns = () => {\n    if (isMobile) {\n      return \"1, 280px\";\n    }\n    if (isTablet) {\n      return \"2, 280px\";\n    }\n    return \"4, 1fr\";\n  };\n\n  const getHeaderFontSize = () => {\n    if (isMobile) {\n      return \"32px\";\n    }\n    if (isTablet) {\n      return \"40px\";\n    }\n    return \"48px\";\n  };\n\n  const getSubHeaderFontSize = () => {\n    if (isMobile) {\n      return \"16px\";\n    }\n    if (isTablet) {\n      return \"20px\";\n    }\n    return \"24px\";\n  };\n\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        zIndex: 10,\n        inset: 0,\n        overflow: \"auto\",\n        width: \"100dvw\",\n        height: \"100dvh\",\n      }}\n    >\n      <div\n        style={{\n          overflow: \"hidden\",\n          position: \"relative\",\n          backgroundSize: \"cover\",\n          backgroundRepeat: \"no-repeat\",\n          background: isMobile\n            ? \"url(https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/landing-noise.webp), radial-gradient(88.89% 50% at 50% 100%, rgba(38, 217, 127, 0.10) 0%, rgba(38, 217, 127, 0.00) 100%), radial-gradient(88.89% 50% at 50% 0%, rgba(71, 235, 235, 0.15) 0%, rgba(71, 235, 235, 0.00) 100%), #1D1E30\"\n            : isTablet\n              ? \"url(https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/landing-noise.webp), radial-gradient(66.67% 50% at 50% 100%, rgba(38, 217, 127, 0.10) 0%, rgba(38, 217, 127, 0.00) 100%), radial-gradient(66.67% 50% at 50% 0%, rgba(71, 235, 235, 0.15) 0%, rgba(71, 235, 235, 0.00) 100%), #1D1E30\"\n              : \"url(https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/landing-noise.webp), radial-gradient(35.56% 50% at 50% 100%, rgba(38, 217, 127, 0.12) 0%, rgba(38, 217, 127, 0) 100%), radial-gradient(35.56% 50% at 50% 0%, rgba(71, 235, 235, 0.18) 0%, rgba(71, 235, 235, 0) 100%), #1D1E30\",\n          minHeight: \"100%\",\n          minWidth: \"100%\",\n          fontFamily: \"Arial\",\n          color: \"#FFFFFF\",\n        }}\n      >\n        <div\n          style={{\n            zIndex: 2,\n            position: \"absolute\",\n            width: isMobile ? \"400px\" : \"800px\",\n            height: \"552px\",\n            opacity: \"0.5\",\n            background:\n              \"url(https://refine.ams3.cdn.digitaloceanspaces.com/assets/welcome-page-hexagon.png)\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundSize: \"contain\",\n            top: \"0\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n          }}\n        />\n        <div style={{ height: isMobile ? \"40px\" : \"80px\" }} />\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <div\n            style={{\n              backgroundRepeat: \"no-repeat\",\n              backgroundSize: isMobile ? \"112px 58px\" : \"224px 116px\",\n              backgroundImage:\n                \"url(https://refine.ams3.cdn.digitaloceanspaces.com/assets/refine-logo.svg)\",\n              width: isMobile ? 112 : 224,\n              height: isMobile ? 58 : 116,\n            }}\n          />\n        </div>\n        <div\n          style={{\n            height: isMobile ? \"120px\" : isTablet ? \"200px\" : \"30vh\",\n            minHeight: isMobile ? \"120px\" : isTablet ? \"200px\" : \"200px\",\n          }}\n        />\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: \"16px\",\n            textAlign: \"center\",\n          }}\n        >\n          <h1\n            style={{\n              fontSize: getHeaderFontSize(),\n              fontWeight: 700,\n              margin: \"0px\",\n            }}\n          >\n            Welcome Aboard!\n          </h1>\n          <h4\n            style={{\n              fontSize: getSubHeaderFontSize(),\n              fontWeight: 400,\n              margin: \"0px\",\n            }}\n          >\n            Your configuration is completed.\n          </h4>\n        </div>\n        <div style={{ height: \"64px\" }} />\n        <div\n          style={{\n            display: \"grid\",\n            gridTemplateColumns: `repeat(${getGridTemplateColumns()})`,\n            justifyContent: \"center\",\n            gap: \"48px\",\n            paddingRight: \"16px\",\n            paddingLeft: \"16px\",\n            paddingBottom: \"32px\",\n            maxWidth: \"976px\",\n            margin: \"auto\",\n          }}\n        >\n          {cards.map((card) => (\n            <Card key={`welcome-page-${card.title}`} card={card} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype CardProps = {\n  card: CardInfo;\n};\n\nconst Card: React.FC<CardProps> = ({ card }) => {\n  const { title, description, iconUrl, link } = card;\n\n  const [isHover, setIsHover] = useState(false);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: \"16px\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <a\n          onPointerEnter={() => setIsHover(true)}\n          onPointerLeave={() => setIsHover(false)}\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            color: \"#fff\",\n            textDecoration: \"none\",\n          }}\n          href={link}\n        >\n          <div\n            style={{\n              width: \"16px\",\n              height: \"16px\",\n              backgroundPosition: \"center\",\n              backgroundSize: \"contain\",\n              backgroundRepeat: \"no-repeat\",\n              backgroundImage: `url(${iconUrl})`,\n            }}\n          />\n          <span\n            style={{\n              fontSize: \"16px\",\n              fontWeight: 700,\n              marginLeft: \"13px\",\n              marginRight: \"14px\",\n            }}\n          >\n            {title}\n          </span>\n          <svg\n            style={{\n              transition:\n                \"transform 0.5s ease-in-out, opacity 0.2s ease-in-out\",\n              ...(isHover && {\n                transform: \"translateX(4px)\",\n                opacity: 1,\n              }),\n            }}\n            width=\"12\"\n            height=\"8\"\n            fill=\"none\"\n            opacity=\"0.5\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M7.293.293a1 1 0 0 1 1.414 0l3 3a1 1 0 0 1 0 1.414l-3 3a1 1 0 0 1-1.414-1.414L8.586 5H1a1 1 0 0 1 0-2h7.586L7.293 1.707a1 1 0 0 1 0-1.414Z\"\n              fill=\"#fff\"\n            />\n          </svg>\n        </a>\n      </div>\n      <span\n        style={{\n          fontSize: \"12px\",\n          opacity: 0.5,\n          lineHeight: \"16px\",\n        }}\n      >\n        {description}\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const ConfigErrorPage = () => {\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        zIndex: 11,\n        inset: 0,\n        overflow: \"auto\",\n        width: \"100dvw\",\n        height: \"100dvh\",\n      }}\n    >\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          padding: \"24px\",\n          background: \"#14141FBF\",\n          backdropFilter: \"blur(3px)\",\n        }}\n      >\n        <div\n          style={{\n            maxWidth: \"640px\",\n            width: \"100%\",\n            background: \"#1D1E30\",\n            borderRadius: \"16px\",\n            border: \"1px solid #303450\",\n            boxShadow: \"0px 0px 120px -24px #000000\",\n          }}\n        >\n          <div\n            style={{\n              padding: \"16px 20px\",\n              borderBottom: \"1px solid #303450\",\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: \"8px\",\n              position: \"relative\",\n            }}\n          >\n            <ErrorGradient\n              style={{\n                position: \"absolute\",\n                left: 0,\n                top: 0,\n              }}\n            />\n            <div\n              style={{\n                lineHeight: \"24px\",\n                fontSize: \"16px\",\n                color: \"#FFFFFF\",\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: \"16px\",\n              }}\n            >\n              <ErrorIcon />\n              <span\n                style={{\n                  fontWeight: 400,\n                }}\n              >\n                Configuration Error\n              </span>\n            </div>\n          </div>\n          <div\n            style={{\n              padding: \"20px\",\n              color: \"#A3ADC2\",\n              lineHeight: \"20px\",\n              fontSize: \"14px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              gap: \"20px\",\n            }}\n          >\n            <p\n              style={{\n                margin: 0,\n                padding: 0,\n                lineHeight: \"28px\",\n                fontSize: \"16px\",\n              }}\n            >\n              <code\n                style={{\n                  display: \"inline-block\",\n                  background: \"#30345080\",\n                  padding: \"0 4px\",\n                  lineHeight: \"24px\",\n                  fontSize: \"16px\",\n                  borderRadius: \"4px\",\n                  color: \"#FFFFFF\",\n                }}\n              >\n                {\"<Refine />\"}\n              </code>{\" \"}\n              is not initialized. Please make sure you have it mounted in your\n              app and placed your components inside it.\n            </p>\n            <div>\n              <ExampleImplementation />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ExampleImplementation = () => {\n  return (\n    <pre\n      style={{\n        display: \"block\",\n        overflowX: \"auto\",\n        borderRadius: \"8px\",\n        fontSize: \"14px\",\n        lineHeight: \"24px\",\n        backgroundColor: \"#14141F\",\n        color: \"#E5ECF2\",\n        padding: \"16px\",\n        margin: \"0\",\n        maxHeight: \"400px\",\n        overflow: \"auto\",\n      }}\n    >\n      <span style={{ color: \"#FF7B72\" }}>import</span> {\"{\"} Refine, WelcomePage{\" \"}\n      {\"}\"} <span style={{ color: \"#FF7B72\" }}>from</span>{\" \"}\n      <span style={{ color: \"#A5D6FF\" }}>{'\"@refinedev/core\"'}</span>;{\"\\n\"}\n      {\"\\n\"}\n      <span style={{ color: \"#FF7B72\" }}>export</span>{\" \"}\n      <span style={{ color: \"#FF7B72\" }}>default</span>{\" \"}\n      <span>\n        <span style={{ color: \"#FF7B72\" }}>function</span>{\" \"}\n        <span style={{ color: \"#FFA657\" }}>App</span>\n        (\n        <span style={{ color: \"rgb(222, 147, 95)\" }} />){\" \"}\n      </span>\n      {\"{\"}\n      {\"\\n\"}\n      {\"  \"}\n      <span style={{ color: \"#FF7B72\" }}>return</span> ({\"\\n\"}\n      {\"    \"}\n      <span>\n        <span style={{ color: \"#79C0FF\" }}>\n          &lt;\n          <span style={{ color: \"#79C0FF\" }}>Refine</span>\n          {\"\\n\"}\n          {\"      \"}\n          <span style={{ color: \"#E5ECF2\", opacity: 0.6 }}>\n            {\"// \"}\n            <span>...</span>\n          </span>\n          {\"\\n\"}\n          {\"    \"}&gt;\n        </span>\n        {\"\\n\"}\n        {\"      \"}\n        <span style={{ opacity: 0.6 }}>\n          {\"{\"}\n          {\"/* ... */\"}\n          {\"}\"}\n        </span>\n        {\"\\n\"}\n        {\"      \"}\n        <span style={{ color: \"#79C0FF\" }}>\n          &lt;\n          <span style={{ color: \"#79C0FF\" }}>WelcomePage</span> /&gt;\n        </span>\n        {\"\\n\"}\n        {\"      \"}\n        <span style={{ opacity: 0.6 }}>\n          {\"{\"}\n          {\"/* ... */\"}\n          {\"}\"}\n        </span>\n        {\"\\n\"}\n        {\"    \"}\n        <span style={{ color: \"#79C0FF\" }}>\n          &lt;/\n          <span style={{ color: \"#79C0FF\" }}>Refine</span>\n          &gt;\n        </span>\n      </span>\n      {\"\\n\"}\n      {\"  \"});{\"\\n\"}\n      {\"}\"}\n    </pre>\n  );\n};\n\nconst ErrorGradient = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={204}\n    height={56}\n    viewBox=\"0 0 204 56\"\n    fill=\"none\"\n    {...props}\n  >\n    <path fill=\"url(#welcome-page-error-gradient-a)\" d=\"M12 0H0v12L12 0Z\" />\n    <path\n      fill=\"url(#welcome-page-error-gradient-b)\"\n      d=\"M28 0h-8L0 20v8L28 0Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-c)\"\n      d=\"M36 0h8L0 44v-8L36 0Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-d)\"\n      d=\"M60 0h-8L0 52v4h4L60 0Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-e)\"\n      d=\"M68 0h8L20 56h-8L68 0Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-f)\"\n      d=\"M92 0h-8L28 56h8L92 0Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-g)\"\n      d=\"M100 0h8L52 56h-8l56-56Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-h)\"\n      d=\"M124 0h-8L60 56h8l56-56Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-i)\"\n      d=\"M140 0h-8L76 56h8l56-56Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-j)\"\n      d=\"M132 0h8L84 56h-8l56-56Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-k)\"\n      d=\"M156 0h-8L92 56h8l56-56Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-l)\"\n      d=\"M164 0h8l-56 56h-8l56-56Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-m)\"\n      d=\"M188 0h-8l-56 56h8l56-56Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-n)\"\n      d=\"M204 0h-8l-56 56h8l56-56Z\"\n    />\n    <defs>\n      <radialGradient\n        id=\"welcome-page-error-gradient-a\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-b\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-c\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-d\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-e\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-f\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-g\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-h\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-i\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-j\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-k\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-l\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-m\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-n\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n    </defs>\n  </svg>\n);\n\nconst ErrorIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={16}\n    height={16}\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      fill=\"#FF4C4D\"\n      fillRule=\"evenodd\"\n      d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"#fff\"\n      fillRule=\"evenodd\"\n      d=\"M7 8a1 1 0 1 0 2 0V5a1 1 0 1 0-2 0v3Zm0 3a1 1 0 1 1 2 0 1 1 0 0 1-2 0Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\n","import React from \"react\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { useQuerySubscription } from \"@refinedev/devtools-internal\";\n\nimport { ReadyPage as DefaultReadyPage, RouteChangeHandler } from \"@components\";\nimport { Telemetry } from \"@components/telemetry\";\nimport { AccessControlContextProvider } from \"@contexts/accessControl\";\nimport { AuditLogContextProvider } from \"@contexts/auditLog\";\nimport {\n  AuthBindingsContextProvider,\n  LegacyAuthContextProvider,\n} from \"@contexts/auth\";\nimport { DataContextProvider } from \"@contexts/data\";\nimport { LegacyRouterContextProvider } from \"@contexts/legacy-router\";\nimport { LiveContextProvider } from \"@contexts/live\";\nimport { NotificationContextProvider } from \"@contexts/notification\";\nimport { RefineContextProvider } from \"@contexts/refine\";\nimport { ResourceContextProvider } from \"@contexts/resource\";\nimport { TranslationContextProvider } from \"@contexts/translation\";\nimport { UndoableQueueContextProvider } from \"@contexts/undoableQueue\";\nimport { UnsavedWarnContextProvider } from \"@contexts/unsavedWarn\";\nimport { handleRefineOptions } from \"@definitions\";\nimport { useDeepMemo } from \"@hooks/deepMemo\";\nimport { RouterBindings } from \"src/interfaces/bindings\";\n\nimport { RouterPickerProvider } from \"@contexts/router-picker\";\nimport { RouterBindingsProvider } from \"../../../contexts/router\";\nimport { useRouterMisuseWarning } from \"../../../hooks/router/use-router-misuse-warning/index\";\nimport {\n  AccessControlProvider,\n  AuditLogProvider,\n  AuthProvider,\n  DashboardPageProps,\n  I18nProvider,\n  IDataContextProvider,\n  IDataMultipleContextProvider,\n  ILiveContext,\n  INotificationContext,\n  IRefineOptions,\n  IRouterProvider,\n  LayoutProps,\n  LegacyAuthProvider,\n  LiveModeProps,\n  NotificationProvider,\n  TitleProps,\n} from \"../../../interfaces\";\nimport { ResourceProps } from \"../../../interfaces/bindings/resource\";\n\nexport interface RefineProps {\n  children?: React.ReactNode;\n  /**\n   * `resources` is the predefined interaction points for a refine app. A resource represents an entity in an endpoint in the API.\n   * While this is not a required property, it is used in resource detection and creation of routes for the app.\n   * @type [`ResourceProps[]`](https://refine.dev/docs/api-reference/core/components/refine-config/#resources)\n   */\n  resources?: ResourceProps[];\n  /**\n   * **refine** needs some router functions to create resource pages, handle navigation, etc. This provider allows you to use the router library you want\n   * @type [`IRouterProvider`](https://refine.dev/docs/api-reference/core/providers/router-provider/)\n   * @deprecated This property is deprecated and was the legacy way of routing. Please use `routerProvider` with new router bindings instead.\n   */\n  legacyRouterProvider?: IRouterProvider;\n  /**\n   * Router bindings for **refine**. A simple interface for **refine** to interact with your router in a flexible way.\n   * @type [`RouterBindings`](https://refine.dev/docs/api-reference/core/bindings/router/)\n   */\n  routerProvider?: RouterBindings;\n  /**\n   * A `dataProvider` is the place where a refine app communicates with an API. Data providers also act as adapters for refine, making it possible for it to consume different API's and data services.\n   * @type [`IDataContextProvider` | `IDataMultipleContextProvider`](https://refine.dev/docs/api-reference/core/providers/data-provider/)\n   */\n  dataProvider?: IDataContextProvider | IDataMultipleContextProvider;\n  /**\n   * `authProvider` handles authentication logic like login, logout flow and checking user credentials. It is an object with methods that refine uses when necessary.\n   * @type [`AuthProvider`](https://refine.dev/docs/api-reference/core/providers/auth-provider/)\n   */\n  authProvider?: AuthProvider;\n  /**\n   * `legacyAuthProvider` handles authentication logic like login, logout flow and checking user credentials. It is an object with methods that refine uses when necessary.\n   * @type [`AuthProvider`](https://refine.dev/docs/api-reference/core/providers/auth-provider/)\n   * @deprecated `legacyAuthProvider` is deprecated with refine@4, use `authProvider` instead.\n   */\n  legacyAuthProvider?: LegacyAuthProvider;\n  /**\n   * **refine** lets you add Realtime support to your app via `liveProvider`. It can be used to update and show data in Realtime throughout your app.\n   * @type [`ILiveContext`](https://refine.dev/docs/api-reference/core/providers/live-provider/)\n   */\n  liveProvider?: ILiveContext;\n  /**\n   * `notificationProvider` handles notification logics. It is an object with methods that refine uses when necessary.\n   * @type [`NotificationProvider` | `(() => NotificationProvider)`](https://refine.dev/docs/api-reference/core/providers/notification-provider/)\n   */\n  notificationProvider?: NotificationProvider | (() => NotificationProvider);\n  /**\n   * `accessControlProvider` is the entry point for implementing access control for refine apps.\n   * @type [`AccessControlProvider`](https://refine.dev/docs/api-reference/core/providers/accessControl-provider/)\n   */\n  accessControlProvider?: AccessControlProvider;\n  /**\n   * **refine** allows you to track changes in your data and keep track of who made the changes.\n   * @type [`AuditLogProvider`](https://refine.dev/docs/api-reference/core/providers/audit-log-provider#overview)\n   */\n  auditLogProvider?: AuditLogProvider;\n  /**\n   * `i18nProvider` property lets you add i18n support to your app. Making you able to use any i18n framework.\n   * @type [`i18nProvider`](https://refine.dev/docs/api-reference/core/providers/i18n-provider/)\n   */\n  i18nProvider?: I18nProvider;\n  /**\n   * A custom error component.\n   * @type [`ReactNode`](https://refine.dev/docs/api-reference/core/components/refine-config/#catchall)\n   * @deprecated Please use the `catchAll` element in your routes instead.\n   */\n  catchAll?: React.ReactNode;\n  /**\n   * Custom login component can be passed to the `LoginPage` property.\n   * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#loginpage)\n   * @deprecated Please use the `LoginPage` component in your routes instead.\n   */\n  LoginPage?: React.FC;\n  /**\n   * A custom dashboard page can be passed to the `DashboardPage` prop which is accessible on root route.\n   * @type [`React.FC<DashboardPageProps>`](https://refine.dev/docs/api-reference/core/components/refine-config/#dashboardpage)\n   * @deprecated Please use the `DashboardPage` component in your routes instead.\n   */\n  DashboardPage?: React.FC<DashboardPageProps>;\n  /**\n   * Custom ready page component can be set by passing to `ReadyPage` property.\n   * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#readypage)\n   * @deprecated This component is only used with the legacy router and will be removed in the future.\n   */\n  ReadyPage?: React.FC;\n  /**\n   * Default layout can be customized by passing the `Layout` property.\n   * @type [`React.FC<LayoutProps>`](https://refine.dev/docs/api-reference/core/components/refine-config/#layout)\n   * @deprecated Please use the `Layout` component as a children instead of a prop.\n   */\n  Layout?: React.FC<LayoutProps>;\n  /**\n   * The default sidebar can be customized by using refine hooks and passing custom components to `Sider` property.\n   * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#sider)\n   * @deprecated Please pass the `Sider` component to your `Layout` component.\n   */\n  Sider?: React.FC;\n  /**\n   * The default app header can be customized by passing the `Header` property.\n   * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#header)\n   * @deprecated Please pass the `Header` component to your `Layout` component.\n   */\n  Header?: React.FC;\n  /**\n   *The default app footer can be customized by passing the `Footer` property.\n   * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#footer)\n   * @deprecated Please pass the `Footer` component to your `Layout` component.\n   */\n  Footer?: React.FC;\n  /**\n   * The component wanted to be placed out of app layout structure can be set by passing to `OffLayoutArea` prop.\n   * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#offlayoutarea)\n   * @deprecated Please use your `OffLayoutArea` component as a children instead of a prop.\n   */\n  OffLayoutArea?: React.FC;\n  /**\n   * TThe app title can be set by passing the `Title` property.\n   * @type [`React.FC<TitleProps>`](https://refine.dev/docs/api-reference/core/components/refine-config/#title)\n   * @deprecated Please pass the `Title` component to your `Layout` component.\n   */\n  Title?: React.FC<TitleProps>;\n  /**\n   * Callback to handle all live events.\n   * @type [`(event: LiveEvent) => void`](https://refine.dev/docs/api-reference/core/providers/live-provider/#onliveevent)\n   */\n  onLiveEvent?: LiveModeProps[\"onLiveEvent\"];\n  /**\n   * `options` is used to configure the app.\n   * @type [`IRefineOptions`](https://refine.dev/docs/api-reference/core/components/refine-config/#options)\n   * */\n  options?: IRefineOptions;\n}\n\n/**\n * {@link https://refine.dev/docs/api-reference/core/components/refine-config `<Refine> component`} is the entry point of a refine app.\n * It is where the highest level of configuration of the app occurs.\n * Only a dataProvider is required to bootstrap the app. After adding a dataProvider, resources can be added as property.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config} for more details.\n */\nexport const Refine: React.FC<RefineProps> = ({\n  legacyAuthProvider,\n  authProvider,\n  dataProvider,\n  legacyRouterProvider,\n  routerProvider,\n  notificationProvider,\n  accessControlProvider,\n  auditLogProvider,\n  resources,\n  DashboardPage,\n  ReadyPage,\n  LoginPage,\n  catchAll,\n  children,\n  liveProvider,\n  i18nProvider,\n  Title,\n  Layout,\n  Sider,\n  Header,\n  Footer,\n  OffLayoutArea,\n  onLiveEvent,\n  options,\n}) => {\n  const {\n    optionsWithDefaults,\n    disableTelemetryWithDefault,\n    reactQueryWithDefaults,\n  } = handleRefineOptions({\n    options,\n  });\n\n  const queryClient = useDeepMemo(() => {\n    if (reactQueryWithDefaults.clientConfig instanceof QueryClient) {\n      return reactQueryWithDefaults.clientConfig;\n    }\n\n    return new QueryClient({\n      ...reactQueryWithDefaults.clientConfig,\n      defaultOptions: {\n        ...reactQueryWithDefaults.clientConfig.defaultOptions,\n        queries: {\n          refetchOnWindowFocus: false,\n          keepPreviousData: true,\n          ...reactQueryWithDefaults.clientConfig.defaultOptions?.queries,\n        },\n      },\n    });\n  }, [reactQueryWithDefaults.clientConfig]);\n\n  useQuerySubscription(queryClient);\n\n  const useNotificationProviderValues = React.useMemo(() => {\n    return typeof notificationProvider === \"function\"\n      ? notificationProvider\n      : () => notificationProvider ?? ({} as INotificationContext);\n  }, [notificationProvider]);\n\n  const notificationProviderContextValues = useNotificationProviderValues();\n\n  /**\n   * Warn our users if they are using the old way of routing in the wrong prop.\n   */\n  useRouterMisuseWarning(routerProvider);\n  /** */\n\n  /**\n   * `<ReadyPage />` is only used in the legacy routing and is not used in the new routing.\n   * If `legacyRouterProvider` is provided and `routerProvider` is not, we'll check for the `resources` prop to be empty.\n   * If `resources` is empty, then we'll render `<ReadyPage />` component.\n   */\n  if (\n    legacyRouterProvider &&\n    !routerProvider &&\n    (resources ?? []).length === 0\n  ) {\n    return ReadyPage ? <ReadyPage /> : <DefaultReadyPage />;\n  }\n\n  /** Router\n   *\n   * Handle routing from `RouterBindingsProvider` and `router` prop for the brand new way\n   * If `router` is not provided, then we'r checking for `routerProvider` prop\n   * If `routerProvider` is provided, then `RouterContextProvider` is used\n   * If none of them is provided, then `RouterBindingsProvider` is used because it supports undefined router\n   *\n   * `RouterContextProvider` is skipped whenever possible and by this way,\n   * we can achieve backward compability only when its provided by user\n   *\n   */\n  const { RouterComponent = React.Fragment } = !routerProvider\n    ? legacyRouterProvider ?? {}\n    : {};\n  /** */\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <NotificationContextProvider {...notificationProviderContextValues}>\n        <LegacyAuthContextProvider\n          {...(legacyAuthProvider ?? {})}\n          isProvided={Boolean(legacyAuthProvider)}\n        >\n          <AuthBindingsContextProvider\n            {...(authProvider ?? {})}\n            isProvided={Boolean(authProvider)}\n          >\n            <DataContextProvider {...dataProvider}>\n              <LiveContextProvider liveProvider={liveProvider}>\n                <RouterPickerProvider\n                  value={\n                    legacyRouterProvider && !routerProvider ? \"legacy\" : \"new\"\n                  }\n                >\n                  <RouterBindingsProvider router={routerProvider}>\n                    <LegacyRouterContextProvider {...legacyRouterProvider}>\n                      <ResourceContextProvider resources={resources ?? []}>\n                        <TranslationContextProvider i18nProvider={i18nProvider}>\n                          <AccessControlContextProvider\n                            {...(accessControlProvider ?? {})}\n                          >\n                            <AuditLogContextProvider\n                              {...(auditLogProvider ?? {})}\n                            >\n                              <UndoableQueueContextProvider>\n                                <RefineContextProvider\n                                  mutationMode={\n                                    optionsWithDefaults.mutationMode\n                                  }\n                                  warnWhenUnsavedChanges={\n                                    optionsWithDefaults.warnWhenUnsavedChanges\n                                  }\n                                  syncWithLocation={\n                                    optionsWithDefaults.syncWithLocation\n                                  }\n                                  Title={Title}\n                                  undoableTimeout={\n                                    optionsWithDefaults.undoableTimeout\n                                  }\n                                  catchAll={catchAll}\n                                  DashboardPage={DashboardPage}\n                                  LoginPage={LoginPage}\n                                  Layout={Layout}\n                                  Sider={Sider}\n                                  Footer={Footer}\n                                  Header={Header}\n                                  OffLayoutArea={OffLayoutArea}\n                                  hasDashboard={!!DashboardPage}\n                                  liveMode={optionsWithDefaults.liveMode}\n                                  onLiveEvent={onLiveEvent}\n                                  options={optionsWithDefaults}\n                                >\n                                  <UnsavedWarnContextProvider>\n                                    <RouterComponent>\n                                      {children}\n                                      {!disableTelemetryWithDefault && (\n                                        <Telemetry />\n                                      )}\n                                      <RouteChangeHandler />\n                                    </RouterComponent>\n                                  </UnsavedWarnContextProvider>\n                                </RefineContextProvider>\n                              </UndoableQueueContextProvider>\n                            </AuditLogContextProvider>\n                          </AccessControlContextProvider>\n                        </TranslationContextProvider>\n                      </ResourceContextProvider>\n                    </LegacyRouterContextProvider>\n                  </RouterBindingsProvider>\n                </RouterPickerProvider>\n              </LiveContextProvider>\n            </DataContextProvider>\n          </AuthBindingsContextProvider>\n        </LegacyAuthContextProvider>\n      </NotificationContextProvider>\n    </QueryClientProvider>\n  );\n};\n","import React from \"react\";\n\nimport { useTelemetryData } from \"@hooks/useTelemetryData\";\n\nimport { ITelemetryData } from \"../../interfaces/telemetry\";\n\nconst encode = (payload: ITelemetryData): string | undefined => {\n  try {\n    const stringifiedPayload = JSON.stringify(payload || {});\n\n    if (typeof btoa !== \"undefined\") {\n      return btoa(stringifiedPayload);\n    }\n\n    return Buffer.from(stringifiedPayload).toString(\"base64\");\n  } catch (err) {\n    return undefined;\n  }\n};\n\nconst throughImage = (src: string) => {\n  const img = new Image();\n\n  img.src = src;\n};\n\nconst throughFetch = (src: string) => {\n  fetch(src);\n};\n\nconst transport = (src: string) => {\n  if (typeof Image !== \"undefined\") {\n    throughImage(src);\n  } else if (typeof fetch !== \"undefined\") {\n    throughFetch(src);\n  }\n};\n\nexport const Telemetry: React.FC<{}> = () => {\n  const payload = useTelemetryData();\n  const sent = React.useRef(false);\n\n  React.useEffect(() => {\n    if (sent.current) {\n      return;\n    }\n    const encoded = encode(payload);\n\n    if (!encoded) {\n      return;\n    }\n\n    transport(`https://telemetry.refine.dev/telemetry?payload=${encoded}`);\n    sent.current = true;\n  }, []);\n\n  return null;\n};\n","import { useContext } from \"react\";\n\nimport { AuditLogContext } from \"@contexts/auditLog\";\nimport { LiveContext } from \"@contexts/live\";\nimport { RouterContext } from \"@contexts/legacy-router\";\nimport { DataContext } from \"@contexts/data\";\nimport { TranslationContext } from \"@contexts/translation\";\nimport { NotificationContext } from \"@contexts/notification\";\nimport { AccessControlContext } from \"@contexts/accessControl\";\nimport { useResource } from \"@hooks/resource\";\n\nimport { ITelemetryData } from \"../../interfaces/telemetry\";\nimport { useIsExistAuthentication, useRefineContext } from \"..\";\n\n// It reads and updates from package.json during build. ref: tsup.config.ts\nconst REFINE_VERSION = \"4.48.0\";\n\nexport const useTelemetryData = (): ITelemetryData => {\n  const auth = useIsExistAuthentication();\n  const auditLogContext = useContext(AuditLogContext);\n  const liveContext = useContext(LiveContext);\n  const routerContext = useContext(RouterContext);\n  const dataContext = useContext(DataContext);\n  const { i18nProvider } = useContext(TranslationContext);\n  const notificationContext = useContext(NotificationContext);\n  const accessControlContext = useContext(AccessControlContext);\n  const { resources } = useResource();\n  const refineOptions = useRefineContext();\n\n  const auditLog =\n    !!auditLogContext.create ||\n    !!auditLogContext.get ||\n    !!auditLogContext.update;\n\n  const live =\n    !!liveContext?.publish ||\n    !!liveContext?.subscribe ||\n    !!liveContext?.unsubscribe;\n\n  const router =\n    !!routerContext.useHistory ||\n    !!routerContext.Link ||\n    !!routerContext.Prompt ||\n    !!routerContext.useLocation ||\n    !!routerContext.useParams;\n\n  const data = !!dataContext;\n\n  const i18n =\n    !!i18nProvider?.changeLocale ||\n    !!i18nProvider?.getLocale ||\n    !!i18nProvider?.translate;\n\n  const notification =\n    !!notificationContext.close || !!notificationContext.open;\n\n  const accessControl = !!accessControlContext.can;\n\n  const projectId = refineOptions?.options?.projectId;\n\n  return {\n    providers: {\n      auth,\n      auditLog,\n      live,\n      router,\n      data,\n      i18n,\n      notification,\n      accessControl,\n    },\n    version: REFINE_VERSION,\n    resourceCount: resources.length,\n    projectId,\n  };\n};\n","import { IRouterProvider, RouterBindings } from \"src/interfaces\";\n\nexport const checkRouterPropMisuse = (\n  value: IRouterProvider | RouterBindings,\n) => {\n  // check if `routerProvider` prop is passed with legacy properties.\n  // If yes, console.warn the user to use `legacyRuterProvider` prop instead.\n  const bindings = [\"go\", \"parse\", \"back\", \"Link\"];\n\n  // check if `value` contains properties other than `bindings`\n  const otherProps = Object.keys(value).filter(\n    (key) => !bindings.includes(key),\n  );\n\n  const hasOtherProps = otherProps.length > 0;\n\n  if (hasOtherProps) {\n    console.warn(\n      `Unsupported properties are found in \\`routerProvider\\` prop. You provided \\`${otherProps.join(\n        \", \",\n      )}\\`. Supported properties are \\`${bindings.join(\n        \", \",\n      )}\\`. You may wanted to use \\`legacyRouterProvider\\` prop instead.`,\n    );\n\n    return true;\n  }\n\n  return false;\n};\n","import { checkRouterPropMisuse } from \"@definitions/helpers/check-router-prop-misuse\";\nimport React from \"react\";\nimport { RouterBindings } from \"src/interfaces\";\n\nexport const useRouterMisuseWarning = (value?: RouterBindings) => {\n  const warned = React.useRef(false);\n\n  React.useEffect(() => {\n    if (warned.current === false) {\n      if (value) {\n        const warn = checkRouterPropMisuse(value);\n        if (warn) {\n          warned.current = true;\n        }\n      }\n    }\n  }, [value]);\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport { ActionTypes } from \"@contexts/undoableQueue\";\nimport { useCancelNotification, useNotification, useTranslate } from \"@hooks\";\nimport { IUndoableQueue } from \"../../interfaces\";\n\nimport { userFriendlySecond } from \"@definitions/helpers\";\n\nexport const UndoableQueue: React.FC<{\n  notification: IUndoableQueue;\n}> = ({ notification }) => {\n  const translate = useTranslate();\n\n  const { notificationDispatch } = useCancelNotification();\n  const { open } = useNotification();\n\n  const [timeoutId, setTimeoutId] = useState<number | undefined>();\n\n  const cancelNotification = () => {\n    if (notification.isRunning === true) {\n      if (notification.seconds === 0) {\n        notification.doMutation();\n      }\n      if (!notification.isSilent) {\n        open?.({\n          key: `${notification.id}-${notification.resource}-notification`,\n          type: \"progress\",\n          message: translate(\n            \"notifications.undoable\",\n            {\n              seconds: userFriendlySecond(notification.seconds),\n            },\n            `You have ${userFriendlySecond(\n              notification.seconds,\n            )} seconds to undo`,\n          ),\n          cancelMutation: notification.cancelMutation,\n          undoableTimeout: userFriendlySecond(notification.seconds),\n        });\n      }\n\n      if (notification.seconds > 0) {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n\n        const newTimeoutId = setTimeout(() => {\n          notificationDispatch({\n            type: ActionTypes.DECREASE_NOTIFICATION_SECOND,\n            payload: {\n              id: notification.id,\n              seconds: notification.seconds,\n              resource: notification.resource,\n            },\n          });\n        }, 1000) as unknown as number;\n\n        setTimeoutId(newTimeoutId);\n      }\n    }\n  };\n\n  useEffect(() => {\n    cancelNotification();\n  }, [notification]);\n\n  return null;\n};\n","import React, { useEffect } from \"react\";\n\nimport {\n  useRefineContext,\n  useRouterContext,\n  useTranslate,\n  useWarnAboutChange,\n} from \"@hooks\";\nimport { LayoutProps, TitleProps } from \"../../interfaces\";\n\nexport interface LayoutWrapperProps {\n  /**\n   * Outer component that renders other components\n   * @default *\n   */\n  Layout?: React.FC<LayoutProps>;\n  /**\n   * [Custom sider to use](/api-reference/core/components/refine-config.md#sider)\n   * @default *\n   */\n  Sider?: React.FC;\n  /**\n   * [Custom header to use](/api-reference/core/components/refine-config.md#header)\n   * @default *\n   */\n  Header?: React.FC;\n  /**\n   * [Custom title to use](/api-reference/core/components/refine-config.md#title)\n   * @default *\n   */\n  Title?: React.FC<TitleProps>;\n  /**\n   * [Custom footer to use](/api-reference/core/components/refine-config.md#footer)\n   * @default *\n   */\n  Footer?: React.FC;\n  /**\n   * [Custom off layout area to use](/api-reference/core/components/refine-config.md#offlayoutarea)\n   * @default *\n   */\n  OffLayoutArea?: React.FC;\n  children: React.ReactNode;\n}\n\n/**\n * `<LayoutWrapper>` wraps its contents in **refine's** layout with all customizations made in {@link https://refine.dev/docs/core/components/refine-config `<Refine>`} component.\n * It is the default layout used in resource pages.\n * It can be used in custom pages to use global layout.\n *\n * @see {@link https://refine.dev/docs/core/components/layout-wrapper} for more details.\n *\n * @deprecated This component is obsolete and only works with the legacy router providers.\n */\nexport const LayoutWrapper: React.FC<LayoutWrapperProps> = ({\n  children,\n  Layout: LayoutFromProps,\n  Sider: SiderFromProps,\n  Header: HeaderFromProps,\n  Title: TitleFromProps,\n  Footer: FooterFromProps,\n  OffLayoutArea: OffLayoutAreaFromProps,\n}) => {\n  const { Layout, Footer, Header, Sider, Title, OffLayoutArea } =\n    useRefineContext();\n\n  const LayoutToRender = LayoutFromProps ?? Layout;\n\n  return (\n    <LayoutToRender\n      Sider={SiderFromProps ?? Sider}\n      Header={HeaderFromProps ?? Header}\n      Footer={FooterFromProps ?? Footer}\n      Title={TitleFromProps ?? Title}\n      OffLayoutArea={OffLayoutAreaFromProps ?? OffLayoutArea}\n    >\n      {children}\n      <UnsavedPrompt />\n    </LayoutToRender>\n  );\n};\n\nconst UnsavedPrompt: React.FC = () => {\n  const { Prompt } = useRouterContext();\n\n  const translate = useTranslate();\n\n  const { warnWhen, setWarnWhen } = useWarnAboutChange();\n\n  const warnWhenListener = (e: {\n    preventDefault: () => void;\n    returnValue: string;\n  }) => {\n    e.preventDefault();\n\n    e.returnValue = translate(\n      \"warnWhenUnsavedChanges\",\n      \"Are you sure you want to leave? You have unsaved changes.\",\n    );\n\n    return e.returnValue;\n  };\n\n  useEffect(() => {\n    if (warnWhen) {\n      window.addEventListener(\"beforeunload\", warnWhenListener);\n    }\n\n    return window.removeEventListener(\"beforeunload\", warnWhenListener);\n  }, [warnWhen]);\n\n  return (\n    <Prompt\n      when={warnWhen}\n      message={translate(\n        \"warnWhenUnsavedChanges\",\n        \"Are you sure you want to leave? You have unsaved changes.\",\n      )}\n      setWarnWhen={setWarnWhen}\n    />\n  );\n};\n","import React from \"react\";\n\nimport {\n  useGo,\n  useNavigation,\n  useParsed,\n  useRouterContext,\n  useRouterType,\n  useIsAuthenticated,\n} from \"@hooks\";\nimport { useActiveAuthProvider } from \"@definitions/index\";\nimport { GoConfig } from \"src/interfaces\";\n\nexport type AuthenticatedCommonProps = {\n  /**\n   * Unique key to identify the component.\n   * This is required if you have multiple `Authenticated` components at the same level.\n   * @required\n   */\n  key: React.Key;\n  /**\n   * Whether to redirect user if not logged in or not.\n   * If not set, user will be redirected to `redirectTo` property of the `check` function's response.\n   * This behavior is only available for new auth providers.\n   * Legacy auth providers will redirect to `/login` by default if this property is not set.\n   * If set to a string, user will be redirected to that string.\n   *\n   * This property only works if `fallback` is **not set**.\n   */\n  redirectOnFail?: string | true;\n  /**\n   * Whether to append current path to search params of the redirect url at `to` property.\n   *\n   * By default, `to` parameter is used by successful invocations of the `useLogin` hook.\n   * If `to` present, it will be used as the redirect url after successful login.\n   */\n  appendCurrentPathToQuery?: boolean;\n  /**\n   * Content to show if user is not logged in.\n   */\n  fallback?: React.ReactNode;\n  /**\n   * Content to show while checking whether user is logged in or not.\n   */\n  loading?: React.ReactNode;\n  /**\n   * Content to show if user is logged in\n   */\n  children?: React.ReactNode;\n};\n\nexport type LegacyAuthenticatedProps = {\n  v3LegacyAuthProviderCompatible: true;\n} & AuthenticatedCommonProps;\n\nexport type AuthenticatedProps = {\n  v3LegacyAuthProviderCompatible?: false;\n} & AuthenticatedCommonProps;\n\n/**\n * `<Authenticated>` is the component form of {@link https://refine.dev/docs/api-reference/core/hooks/auth/useAuthenticated `useAuthenticated`}. It internally uses `useAuthenticated` to provide it's functionality.\n *\n * @requires {@link https://react.dev/learn/rendering-lists#why-does-react-need-keys `key`} prop if you have multiple components at the same level.\n * In React, components don't automatically unmount and remount with prop changes, which is generally good for performance. However, for specific cases this can cause issues like unwanted content rendering (`fallback` or `children`). To solve this, assigning unique `key` values to each instance of component is necessary, forcing React to unmount and remount the component, rather than just updating its props.\n * @example\n *```tsx\n * <Authenticated key=\"dashboard\">\n *   <h1>Dashboard Page</h1>\n * </Authenticated>\n *```\n *\n * @see {@link https://refine.dev/docs/core/components/auth/authenticated `<Authenticated>`} component for more details.\n */\nexport function Authenticated(\n  props: LegacyAuthenticatedProps,\n): JSX.Element | null;\n\n/**\n * `<Authenticated>` is the component form of {@link https://refine.dev/docs/api-reference/core/hooks/auth/useAuthenticated `useAuthenticated`}. It internally uses `useAuthenticated` to provide it's functionality.\n *\n * @requires {@link https://react.dev/learn/rendering-lists#why-does-react-need-keys `key`} prop if you have multiple components at the same level.\n * In React, components don't automatically unmount and remount with prop changes, which is generally good for performance. However, for specific cases this can cause issues like unwanted content rendering (`fallback` or `children`). To solve this, assigning unique `key` values to each instance of component is necessary, forcing React to unmount and remount the component, rather than just updating its props.\n * @example\n *```tsx\n * <Authenticated key=\"dashboard\">\n *   <h1>Dashboard Page</h1>\n * </Authenticated>\n *```\n *\n * @see {@link https://refine.dev/docs/core/components/auth/authenticated `<Authenticated>`} component for more details.\n */\nexport function Authenticated(props: AuthenticatedProps): JSX.Element | null;\n\nexport function Authenticated({\n  redirectOnFail = true,\n  appendCurrentPathToQuery = true,\n  children,\n  fallback: fallbackContent,\n  loading: loadingContent,\n}: AuthenticatedProps | LegacyAuthenticatedProps): JSX.Element | null {\n  const activeAuthProvider = useActiveAuthProvider();\n  const routerType = useRouterType();\n\n  const hasAuthProvider = Boolean(activeAuthProvider?.isProvided);\n  const isLegacyAuth = Boolean(activeAuthProvider?.isLegacy);\n  const isLegacyRouter = routerType === \"legacy\";\n\n  const parsed = useParsed();\n  const go = useGo();\n  const { useLocation } = useRouterContext();\n  const legacyLocation = useLocation();\n\n  const {\n    isFetching,\n    isSuccess,\n    data: {\n      authenticated: isAuthenticatedStatus,\n      redirectTo: authenticatedRedirect,\n    } = {},\n  } = useIsAuthenticated({\n    v3LegacyAuthProviderCompatible: isLegacyAuth,\n  });\n\n  // Authentication status\n  const isAuthenticated = hasAuthProvider\n    ? isLegacyAuth\n      ? isSuccess\n      : isAuthenticatedStatus\n    : true;\n\n  // when there is no auth provider\n  if (!hasAuthProvider) {\n    return <>{children ?? null}</>;\n  }\n\n  // when checking authentication status\n  if (isFetching) {\n    return <>{loadingContent ?? null}</>;\n  }\n\n  // when user is authenticated return children\n  if (isAuthenticated) {\n    return <>{children ?? null}</>;\n  }\n  // when user is not authenticated redirect or render fallbackContent\n\n  // render fallbackContent if it is exist\n  if (typeof fallbackContent !== \"undefined\") {\n    return <>{fallbackContent ?? null}</>;\n  }\n  // if there is no fallbackContent, redirect page\n\n  // Redirect url to use. use redirectOnFail if it is set.\n  // Otherwise use redirectTo property of the check function's response.\n  // If both are not set, use `/login` as the default redirect url. (only for legacy auth providers)\n  const appliedRedirect = isLegacyAuth\n    ? typeof redirectOnFail === \"string\"\n      ? redirectOnFail\n      : \"/login\"\n    : typeof redirectOnFail === \"string\"\n      ? redirectOnFail\n      : (authenticatedRedirect as string | undefined);\n\n  // Current pathname to append to the redirect url.\n  // User will be redirected to this url after successful mutation. (like login)\n  const pathname = `${\n    isLegacyRouter ? legacyLocation?.pathname : parsed.pathname\n  }`.replace(/(\\?.*|#.*)$/, \"\");\n  // Redirect if appliedRedirect is set, otherwise return null.\n  //  Uses `replace` for legacy router and `go` for new router.\n  if (appliedRedirect) {\n    if (isLegacyRouter) {\n      const toQuery = appendCurrentPathToQuery\n        ? `?to=${encodeURIComponent(pathname)}`\n        : \"\";\n      return <RedirectLegacy to={`${appliedRedirect}${toQuery}`} />;\n    }\n    return (\n      <Redirect\n        config={{\n          to: appliedRedirect,\n          query: appendCurrentPathToQuery\n            ? {\n                to: parsed.params?.to\n                  ? parsed.params.to\n                  : go({\n                      to: pathname,\n                      options: { keepQuery: true },\n                      type: \"path\",\n                    }),\n              }\n            : undefined,\n          type: \"replace\",\n        }}\n      />\n    );\n  }\n\n  return null;\n}\n\nconst Redirect = ({ config }: { config: GoConfig }) => {\n  const go = useGo();\n\n  React.useEffect(() => {\n    go(config);\n  }, [go, config]);\n\n  return null;\n};\n\nconst RedirectLegacy = ({ to }: { to: string }) => {\n  const { replace } = useNavigation();\n\n  React.useEffect(() => {\n    replace(to);\n  }, [replace, to]);\n\n  return null;\n};\n","import { useEffect } from \"react\";\nimport { useRouterContext } from \"@hooks\";\nimport { useLegacyAuthContext } from \"@contexts/auth\";\n\nexport const RouteChangeHandler: React.FC = () => {\n  const { useLocation } = useRouterContext();\n\n  const { checkAuth } = useLegacyAuthContext();\n  const location = useLocation();\n\n  useEffect(() => {\n    checkAuth?.().catch(() => false);\n  }, [location?.pathname]);\n\n  return null;\n};\n","import React, { useEffect } from \"react\";\n\nimport { useCan, useResource } from \"@hooks\";\nimport { BaseKey, IResourceItem, ITreeMenu } from \"../../interfaces\";\nimport { UseQueryOptions } from \"@tanstack/react-query\";\n\nimport { CanReturnType } from \"../../interfaces\";\n\ntype CanParams = {\n  resource?: IResourceItem & { children?: ITreeMenu[] };\n  id?: BaseKey;\n  [key: string]: any;\n};\n\ntype OnUnauthorizedProps = {\n  resource?: string;\n  reason?: string;\n  action: string;\n  params: CanParams;\n};\n\ntype CanAccessBaseProps = {\n  /**\n   * Resource name for API data interactions\n   */\n  resource?: string;\n  /**\n   * Intended action on resource\n   */\n  action: string;\n  /**\n   * Parameters associated with the resource\n   * @type { resource?: [IResourceItem](https://refine.dev/docs/api-reference/core/interfaceReferences/#canparams), id?: [BaseKey](https://refine.dev/docs/api-reference/core/interfaceReferences/#basekey), [key: string]: any }\n   */\n  params?: CanParams;\n  /**\n   * Content to show if access control returns `false`\n   */\n  fallback?: React.ReactNode;\n  /**\n   * Callback function to be called if access control returns `can: false`\n   */\n  onUnauthorized?: (props: OnUnauthorizedProps) => void;\n  children: React.ReactNode;\n  queryOptions?: UseQueryOptions<CanReturnType>;\n};\n\ntype CanAccessWithoutParamsProps = {\n  [key in Exclude<\n    keyof CanAccessBaseProps,\n    \"fallback\" | \"children\"\n  >]?: undefined;\n} & {\n  [key in \"fallback\" | \"children\"]?: CanAccessBaseProps[key];\n};\n\nexport type CanAccessProps = CanAccessBaseProps | CanAccessWithoutParamsProps;\n\nexport const CanAccess: React.FC<CanAccessProps> = ({\n  resource: resourceFromProp,\n  action: actionFromProp,\n  params: paramsFromProp,\n  fallback,\n  onUnauthorized,\n  children,\n  queryOptions: componentQueryOptions,\n  ...rest\n}) => {\n  const {\n    resource,\n    id: idFromRoute,\n    action: actionFromRoute,\n  } = useResource(resourceFromProp);\n  const { identifier } = useResource();\n\n  const getDefaultId = () => {\n    const idFromPropsOrRoute = paramsFromProp?.id ?? idFromRoute;\n\n    if (resourceFromProp && resourceFromProp !== identifier) {\n      return paramsFromProp?.id;\n    }\n\n    return idFromPropsOrRoute;\n  };\n  const defaultId = getDefaultId();\n\n  const resourceName = resourceFromProp ?? resource?.name;\n  const action = actionFromProp ?? actionFromRoute ?? \"\";\n  const params = paramsFromProp ?? {\n    id: defaultId,\n    resource: resource,\n  };\n\n  const { data } = useCan({\n    resource: resourceName,\n    action,\n    params,\n    queryOptions: componentQueryOptions,\n  });\n\n  useEffect(() => {\n    if (onUnauthorized && data?.can === false) {\n      onUnauthorized({\n        resource: resourceName,\n        action,\n        reason: data?.reason,\n        params,\n      });\n    }\n  }, [data?.can]);\n\n  if (data?.can) {\n    if (React.isValidElement(children)) {\n      const Children = React.cloneElement(children, rest);\n      return Children;\n    }\n\n    return <>{children}</>;\n  }\n\n  if (data?.can === false) {\n    return <>{fallback ?? null}</>;\n  }\n\n  return null;\n};\n","import React, { SVGProps, useEffect } from \"react\";\nimport { CSSRules } from \"./styles\";\n\nconst text =\n  \"If you find Refine useful, you can contribute to its growth by giving it a star on GitHub\";\n\nexport const GitHubBanner = () => {\n  useEffect(() => {\n    const styleTag = document.createElement(\"style\");\n    document.head.appendChild(styleTag);\n    CSSRules.forEach((rule) =>\n      styleTag.sheet?.insertRule(rule, styleTag.sheet.cssRules.length),\n    );\n  }, []);\n\n  return (\n    <div\n      className=\"banner bg-top-announcement\"\n      style={{\n        width: \"100%\",\n        height: \"48px\",\n      }}\n    >\n      <div\n        style={{\n          position: \"relative\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          paddingLeft: \"200px\",\n          width: \"100%\",\n          maxWidth: \"100vw\",\n          height: \"100%\",\n          borderBottom: \"1px solid #47ebeb26\",\n        }}\n      >\n        <div\n          className=\"top-announcement-mask\"\n          style={{\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            width: \"100%\",\n            height: \"100%\",\n            borderBottom: \"1px solid #47ebeb26\",\n          }}\n        >\n          <div\n            style={{\n              position: \"relative\",\n              width: \"960px\",\n              height: \"100%\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              margin: \"0 auto\",\n            }}\n          >\n            <div\n              style={{\n                width: \"calc(50% - 300px)\",\n                height: \"100%\",\n                position: \"relative\",\n              }}\n            >\n              <GlowSmall\n                style={{\n                  animationDelay: \"1.5s\",\n                  position: \"absolute\",\n                  top: \"2px\",\n                  right: \"220px\",\n                }}\n                id={\"1\"}\n              />\n              <GlowSmall\n                style={{\n                  animationDelay: \"1s\",\n                  position: \"absolute\",\n                  top: \"8px\",\n                  right: \"100px\",\n                  transform: \"rotate(180deg)\",\n                }}\n                id={\"2\"}\n              />\n              <GlowBig\n                style={{\n                  position: \"absolute\",\n                  right: \"10px\",\n                }}\n                id={\"3\"}\n              />\n            </div>\n\n            <div\n              style={{\n                width: \"calc(50% - 300px)\",\n                height: \"100%\",\n                position: \"relative\",\n              }}\n            >\n              <GlowSmall\n                style={{\n                  animationDelay: \"2s\",\n                  position: \"absolute\",\n                  top: \"6px\",\n                  right: \"180px\",\n                  transform: \"rotate(180deg)\",\n                }}\n                id={\"4\"}\n              />\n              <GlowSmall\n                style={{\n                  animationDelay: \"0.5s\",\n                  transitionDelay: \"1.3s\",\n                  position: \"absolute\",\n                  top: \"2px\",\n                  right: \"40px\",\n                }}\n                id={\"5\"}\n              />\n              <GlowBig\n                style={{\n                  position: \"absolute\",\n                  right: \"-70px\",\n                }}\n                id={\"6\"}\n              />\n            </div>\n          </div>\n        </div>\n        <Text text={text} />\n      </div>\n    </div>\n  );\n};\n\nconst Text = ({ text }: { text: string }) => {\n  return (\n    <a\n      className=\"gh-link\"\n      href=\"https://s.refine.dev/github-support\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      style={{\n        position: \"absolute\",\n        height: \"100%\",\n        padding: \"0 60px\",\n        display: \"flex\",\n        flexWrap: \"nowrap\",\n        whiteSpace: \"nowrap\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundImage:\n          \"linear-gradient(90deg, rgba(31, 63, 72, 0.00) 0%, #1F3F48 10%, #1F3F48 90%, rgba(31, 63, 72, 0.00) 100%)\",\n      }}\n    >\n      <div\n        style={{\n          color: \"#fff\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          gap: \"8px\",\n        }}\n      >\n        <span\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          ⭐️\n        </span>\n        <span\n          className=\"text\"\n          style={{\n            fontSize: \"16px\",\n            lineHeight: \"24px\",\n          }}\n        >\n          {text}\n        </span>\n        <span\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          ⭐️\n        </span>\n      </div>\n    </a>\n  );\n};\n\nconst GlowSmall = ({ style, ...props }: SVGProps<SVGSVGElement>) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={80}\n      height={40}\n      fill=\"none\"\n      style={{\n        opacity: 1,\n        animation: \"top-announcement-glow 1s ease-in-out infinite alternate\",\n        ...style,\n      }}\n    >\n      <circle cx={40} r={40} fill={`url(#${props.id}-a)`} fillOpacity={0.5} />\n      <defs>\n        <radialGradient\n          id={`${props.id}-a`}\n          cx={0}\n          cy={0}\n          r={1}\n          gradientTransform=\"matrix(0 40 -40 0 40 0)\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stopColor=\"#47EBEB\" />\n          <stop offset={1} stopColor=\"#47EBEB\" stopOpacity={0} />\n        </radialGradient>\n      </defs>\n    </svg>\n  );\n};\n\nconst GlowBig = ({ style, ...props }: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={120}\n    height={48}\n    fill=\"none\"\n    {...props}\n    style={{\n      opacity: 1,\n      animation: \"top-announcement-glow 1s ease-in-out infinite alternate\",\n      ...style,\n    }}\n  >\n    <circle\n      cx={60}\n      cy={24}\n      r={60}\n      fill={`url(#${props.id}-a)`}\n      fillOpacity={0.5}\n    />\n    <defs>\n      <radialGradient\n        id={`${props.id}-a`}\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"matrix(0 60 -60 0 60 24)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#47EBEB\" />\n        <stop offset={1} stopColor=\"#47EBEB\" stopOpacity={0} />\n      </radialGradient>\n    </defs>\n  </svg>\n);\n","export const CSSRules = [\n  `\n    .bg-top-announcement {\n        border-bottom: 1px solid rgba(71, 235, 235, 0.15);\n        background: radial-gradient(\n                218.19% 111.8% at 0% 0%,\n                rgba(71, 235, 235, 0.1) 0%,\n                rgba(71, 235, 235, 0.2) 100%\n            ),\n            #14141f;\n    }\n    `,\n  `\n    .top-announcement-mask {\n        mask-image: url(https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/hexagon.svg);\n        -webkit-mask-image: url(https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/hexagon.svg);\n        mask-repeat: repeat;\n        -webkit-mask-repeat: repeat;\n        background: rgba(71, 235, 235, 0.25);\n    }\n    `,\n  `\n    .banner {\n        display: flex;\n        @media (max-width: 1000px) {\n            display: none;\n        }\n    }`,\n  `\n    .gh-link, .gh-link:hover, .gh-link:active, .gh-link:visited, .gh-link:focus {\n        text-decoration: none;\n        z-index: 9;\n    }\n    `,\n  `\n    @keyframes top-announcement-glow {\n        0% {\n            opacity: 1;\n        }\n\n        100% {\n            opacity: 0;\n        }\n    }\n    `,\n];\n","import React from \"react\";\nimport { AutoSaveIndicatorProps } from \"../../interfaces\";\nimport { useTranslate } from \"@hooks/translate\";\n\nexport const AutoSaveIndicator: React.FC<AutoSaveIndicatorProps> = ({\n  status,\n  elements: {\n    success = <Message key=\"autoSave.success\" defaultMessage=\"saved\" />,\n    error = <Message key=\"autoSave.error\" defaultMessage=\"auto save failure\" />,\n    loading = <Message key=\"autoSave.loading\" defaultMessage=\"saving...\" />,\n    idle = <Message key=\"autoSave.idle\" defaultMessage=\"waiting for changes\" />,\n  } = {},\n}) => {\n  switch (status) {\n    case \"success\":\n      return <>{success}</>;\n    case \"error\":\n      return <>{error}</>;\n    case \"loading\":\n      return <>{loading}</>;\n    default:\n      return <>{idle}</>;\n  }\n};\n\nconst Message = ({\n  key,\n  defaultMessage,\n}: {\n  key: string;\n  defaultMessage: string;\n}) => {\n  const translate = useTranslate();\n\n  return <span>{translate(key, defaultMessage)}</span>;\n};\n"],"mappings":"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","names":["React","useEffect","useState","keys","meta","resource","parent","text","React","pluralize","pluralize","React","LoginPage","resource","React","React","useContext","React","useState","React","useState","useContext","useContext","useContext","useContext","useContext","useContext","LoginPage","useContext","filter","keys","useQuery","getXRay","keys","useQuery","getXRay","getXRay","keys","keys","getXRay","React","useMutation","getXRay","qs","keys","React","qs","useMutation","buildSuccessNotification","buildNotification","getXRay","useMutation","getXRay","keys","useMutation","buildSuccessNotification","buildNotification","getXRay","useMutation","getXRay","keys","useMutation","buildSuccessNotification","buildNotification","getXRay","React","useMutation","getXRay","qs","keys","React","qs","useMutation","buildSuccessNotification","buildNotification","getXRay","useQuery","getXRay","keys","useQuery","getXRay","useMutation","getXRay","keys","useMutation","getXRay","getXRay","useQuery","useEffect","useState","useState","useEffect","keys","useQuery","getXRay","getXRay","useQuery","keys","useQuery","getXRay","getXRay","useQuery","keys","useQuery","getXRay","getXRay","useMutation","useQueryClient","React","React","useQueryClient","keys","useMutation","_a","getXRay","getXRay","useMutation","keys","useMutation","getXRay","getXRay","useMutation","useQueryClient","useQueryClient","keys","useMutation","getXRay","getXRay","useMutation","keys","useMutation","getXRay","getXRay","useMutation","useQueryClient","useQueryClient","keys","useMutation","getXRay","getXRay","useMutation","useQueryClient","useQueryClient","keys","useMutation","getXRay","useQuery","getXRay","keys","useQuery","getXRay","useMutation","getXRay","keys","useMutation","getXRay","useContext","React","React","useContext","getXRay","keys","getXRay","React","React","useCallback","useQueryClient","useContext","React","isEqual","isEqual","React","React","React","React","React","React","React","useContext","useContext","useParse","React","parse","parse","React","useContext","resource","identifier","useContext","useCallback","useContext","useCallback","useQueryClient","keys","useCallback","useContext","useEffect","useContext","useEffect","useContext","useContext","useContext","useEffect","useContext","useEffect","useContext","useContext","useContext","useContext","useContext","React","createContext","createContext","React","useContext","useCallback","useCallback","useCallback","useContext","React","React","useContext","useCallback","useContext","useMemo","useContext","useMemo","useContext","useCallback","useContext","useCallback","useState","warnOnce","useState","warnOnce","React","warnOnce","React","warnOnce","id","useCallback","useCallback","React","useCallback","useContext","React","React","useContext","useGo","React","useCallback","React","useContext","useContext","useBack","React","resourceItem","createActionRoute","editActionRoute","cloneActionRoute","showActionRoute","listActionRoute","React","useState","warnOnce","useState","React","warnOnce","useEffect","useState","papaparsePkg","papaparsePkg","useState","useEffect","useCallback","useState","useState","useCallback","React","useContext","useContext","React","useContext","React","React","useContext","useQuery","useContext","React","React","React","getXRay","useContext","keys","useQuery","getXRay","React","React","useCallback","useMemo","useState","debounce","useState","useCallback","useMemo","debounce","React","useState","useEffect","qs","differenceWith","isEqual","warnOnce","React","warnOnce","useState","sorters","filters","pageSize","current","rest","qs","useEffect","differenceWith","isEqual","useContext","useMutation","useQueryClient","React","React","get","getXRay","useQueryClient","useContext","keys","useMutation","getXRay","useContext","useQuery","getXRay","get","useContext","keys","useQuery","getXRay","useContext","warnOnce","useContext","warnOnce","React","key","React","keys","useState","useEffect","React","React","useState","useState","React","React","React","useState","LoginPage","useState","text","React","React","useState","useState","text","React","React","useState","useState","text","React","React","useState","useState","React","React","LoginPage","React","React","React","React","useState","React","useState","React","React","React","React","React","useContext","useContext","React","React","React","ReadyPage","LoginPage","React","useEffect","useState","useState","useEffect","React","useEffect","React","useEffect","React","React","useEffect","useEffect","React","useEffect","useEffect","React","React","useEffect","useEffect","React","text","React","React"]}