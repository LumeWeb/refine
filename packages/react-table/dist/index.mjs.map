{"version":3,"sources":["../src/useTable/index.ts","../src/utils/useIsFirstRender/index.ts"],"sourcesContent":["import { useEffect } from \"react\";\nimport {\n  BaseRecord,\n  CrudOperators,\n  HttpError,\n  LogicalFilter,\n  useTable as useTableCore,\n  useTableProps as useTablePropsCore,\n  useTableReturnType as useTableReturnTypeCore,\n} from \"@refinedev/core\";\nimport {\n  useReactTable,\n  TableOptions,\n  Table,\n  getCoreRowModel,\n  ColumnFilter,\n  getSortedRowModel,\n  getFilteredRowModel,\n} from \"@tanstack/react-table\";\n\nimport { useIsFirstRender } from \"../utils\";\n\nexport type UseTableReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n> = Table<TData> & {\n  refineCore: useTableReturnTypeCore<TData, TError>;\n};\n\nexport type UseTableProps<\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n> = {\n  /**\n   * Configuration object for the core of the [useTable](/docs/api-reference/core/hooks/useTable/)\n   * @type [`useTablePropsCore<TQueryFnData, TError>`](/docs/api-reference/core/hooks/useTable/#properties)\n   */\n  refineCoreProps?: useTablePropsCore<TQueryFnData, TError, TData>;\n} & Pick<TableOptions<TData>, \"columns\"> &\n  Partial<Omit<TableOptions<TData>, \"columns\">>;\n\nexport function useTable<\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  refineCoreProps: { hasPagination = true, ...refineCoreProps } = {},\n  initialState: reactTableInitialState = {},\n  ...rest\n}: UseTableProps<TQueryFnData, TError, TData>): UseTableReturnType<\n  TData,\n  TError\n> {\n  const isFirstRender = useIsFirstRender();\n\n  const useTableResult = useTableCore<TQueryFnData, TError, TData>({\n    ...refineCoreProps,\n    hasPagination,\n  });\n\n  const isServerSideFilteringEnabled =\n    (refineCoreProps.filters?.mode || \"server\") === \"server\";\n  const isServerSideSortingEnabled =\n    (refineCoreProps.sorters?.mode || \"server\") === \"server\";\n  const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n  const isPaginationEnabled =\n    (refineCoreProps.pagination?.mode ?? hasPaginationString) !== \"off\";\n\n  const {\n    tableQueryResult: { data },\n    current,\n    setCurrent,\n    pageSize: pageSizeCore,\n    setPageSize: setPageSizeCore,\n    sorters,\n    setSorters,\n    filters: filtersCore,\n    setFilters,\n    pageCount,\n  } = useTableResult;\n\n  const logicalFilters: LogicalFilter[] = [];\n  filtersCore.forEach((filter) => {\n    if (\n      filter.operator !== \"or\" &&\n      filter.operator !== \"and\" &&\n      \"field\" in filter\n    ) {\n      logicalFilters.push(filter);\n    }\n  });\n\n  const reactTableResult = useReactTable<TData>({\n    data: data?.data ?? [],\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: isServerSideSortingEnabled\n      ? undefined\n      : getSortedRowModel(),\n    getFilteredRowModel: isServerSideFilteringEnabled\n      ? undefined\n      : getFilteredRowModel(),\n    initialState: {\n      pagination: {\n        pageIndex: current - 1,\n        pageSize: pageSizeCore,\n      },\n      sorting: sorters.map((sorting) => ({\n        id: sorting.field,\n        desc: sorting.order === \"desc\",\n      })),\n      columnFilters: logicalFilters.map((filter) => ({\n        id: filter.field,\n        operator: filter.operator as Exclude<CrudOperators, \"or\" | \"and\">,\n        value: filter.value,\n      })),\n      ...reactTableInitialState,\n    },\n    pageCount,\n    manualPagination: true,\n    manualSorting: isServerSideSortingEnabled,\n    manualFiltering: isServerSideFilteringEnabled,\n    ...rest,\n  });\n\n  const { state, columns } = reactTableResult.options;\n  const { pagination, sorting, columnFilters } = state;\n\n  const { pageIndex, pageSize } = pagination ?? {};\n\n  useEffect(() => {\n    if (pageIndex !== undefined) {\n      setCurrent(pageIndex + 1);\n    }\n  }, [pageIndex]);\n\n  useEffect(() => {\n    if (pageSize !== undefined) {\n      setPageSizeCore(pageSize);\n    }\n  }, [pageSize]);\n\n  useEffect(() => {\n    if (sorting !== undefined) {\n      setSorters(\n        sorting?.map((sorting) => ({\n          field: sorting.id,\n          order: sorting.desc ? \"desc\" : \"asc\",\n        })),\n      );\n\n      if (sorting.length > 0 && isPaginationEnabled && !isFirstRender) {\n        setCurrent(1);\n      }\n    }\n  }, [sorting]);\n\n  useEffect(() => {\n    const crudFilters: LogicalFilter[] = [];\n\n    columnFilters?.map((filter) => {\n      const operator =\n        (\n          filter as ColumnFilter & {\n            operator?: Exclude<CrudOperators, \"or\" | \"and\">;\n          }\n        ).operator ??\n        ((columns.find((c) => c.id === filter.id) as any)?.meta\n          ?.filterOperator as Exclude<CrudOperators, \"or\" | \"and\">);\n\n      crudFilters.push({\n        field: filter.id,\n        operator: operator ?? (Array.isArray(filter.value) ? \"in\" : \"eq\"),\n        value: filter.value,\n      });\n    });\n\n    const filteredArray = logicalFilters.filter(\n      (value) =>\n        !crudFilters.some(\n          (b) => value.field === b.field && value.operator === b.operator,\n        ),\n    );\n\n    filteredArray?.map((filter) => {\n      crudFilters.push({\n        field: filter.field,\n        operator: filter.operator,\n        value: undefined,\n      });\n    });\n\n    setFilters(crudFilters);\n\n    if (crudFilters.length > 0 && isPaginationEnabled && !isFirstRender) {\n      setCurrent(1);\n    }\n  }, [columnFilters]);\n\n  return {\n    ...reactTableResult,\n    refineCore: useTableResult,\n  };\n}\n","import { useEffect, useRef } from \"react\";\n\nexport const useIsFirstRender = () => {\n  const firstRender = useRef(true);\n\n  useEffect(() => {\n    firstRender.current = false;\n  }, []);\n\n  return firstRender.current;\n};\n"],"mappings":"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","names":["useEffect","sorting","useEffect","_a","_b"]}